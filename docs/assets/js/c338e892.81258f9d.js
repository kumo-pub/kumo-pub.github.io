"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[52670],{57323:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var l=n(74848),d=n(28453);const s={date:"01/10/2024"},t="\u51fd\u6570\uff1a kmpkg_msbuild_install",o={id:"kmpkg/maintainers/functions/kmpkg_msbuild_install",title:"\u51fd\u6570\uff1a kmpkg_msbuild_install",description:"Build and install a MSBuild project.",source:"@site/versioned_docs/version-1.1.1/kmpkg/maintainers/functions/kmpkg_msbuild_install.mdx",sourceDirName:"kmpkg/maintainers/functions",slug:"/kmpkg/maintainers/functions/kmpkg_msbuild_install",permalink:"/docs/kmpkg/maintainers/functions/kmpkg_msbuild_install",draft:!1,unlisted:!1,tags:[],version:"1.1.1",lastUpdatedBy:"Jeff lothar",lastUpdatedAt:1748081772e3,frontMatter:{date:"01/10/2024"}},r={},a=[{value:"\u4f7f\u7528\u60c5\u51b5",id:"\u4f7f\u7528\u60c5\u51b5",level:2},{value:"\u53c2\u6570",id:"\u53c2\u6570",level:2},{value:"SOURCE_PATH",id:"source_path",level:3},{value:"PROJECT_SUBPATH",id:"project_subpath",level:3},{value:"ADD_BIN_TO_PATH",id:"add_bin_to_path",level:3},{value:"NO_TOOLCHAIN_PROPS",id:"no_toolchain_props",level:3},{value:"NO_INSTALL",id:"no_install",level:3},{value:"CLEAN",id:"clean",level:3},{value:"RELEASE_CONFIGURATION",id:"release_configuration",level:3},{value:"DEBUG_CONFIGURATION",id:"debug_configuration",level:3},{value:"TARGET",id:"target",level:3},{value:"PLATFORM",id:"platform",level:3},{value:"OPTIONS",id:"options",level:3},{value:"OPTIONS_RELEASE",id:"options_release",level:3},{value:"OPTIONS_DEBUG",id:"options_debug",level:3},{value:"DEPENDENT_PKGCONFIG",id:"dependent_pkgconfig",level:3},{value:"ADDITIONAL_LIBS",id:"additional_libs",level:3},{value:"ADDITIONAL_LIBS_DEBUG",id:"additional_libs_debug",level:3},{value:"ADDITIONAL_LIBS_RELEASE",id:"additional_libs_release",level:3},{value:"Source",id:"source",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"\u51fd\u6570-kmpkg_msbuild_install",children:"\u51fd\u6570\uff1a kmpkg_msbuild_install"})}),"\n",(0,l.jsx)(i.p,{children:"Build and install a MSBuild project."}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"kmpkg_msbuild_install"})," will generate a props file and target file containing the CMake toolchain build flags and include it via ",(0,l.jsx)(i.code,{children:"/p:ForceImportAfterCpp(Props|Targets)"})]}),"\n",(0,l.jsx)(i.h2,{id:"\u4f7f\u7528\u60c5\u51b5",children:"\u4f7f\u7528\u60c5\u51b5"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-cmake",children:"kmpkg_install_msbuild(\n    SOURCE_PATH <${SOURCE_PATH}>\n    PROJECT_SUBPATH <port.sln>\n    [ADD_BIN_TO_PATH]\n    [NO_INSTALL]\n    [NO_TOOLCHAIN_PROPS]\n    [CLEAN]\n    [RELEASE_CONFIGURATION <Release>]\n    [DEBUG_CONFIGURATION <Debug>]\n    [TARGET <Build>]\n    [PLATFORM <Win32>]\n    [OPTIONS </p:ZLIB_INCLUDE_PATH=X>...]\n    [OPTIONS_RELEASE </p:ZLIB_LIB=X>...]\n    [OPTIONS_DEBUG </p:ZLIB_LIB=X>...]\n    [DEPENDENT_PKGCONFIG <zlib>]\n    [ADDITIONAL_LIBS <getopt.lib>]\n    [ADDITIONAL_LIBS_DEBUG <zlibd.lib>]\n    [ADDITIONAL_LIBS_RELEASE <zlib.lib>]\n)\n"})}),"\n",(0,l.jsxs)(i.p,{children:["To use this function, you must depend on the helper port ",(0,l.jsx)(i.code,{children:"kmpkg-msbuild"}),":"]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-json",children:'"dependencies": [\n  { \n    "name": "kmpkg-msbuild",\n    "host": true\n  }\n]\n'})}),"\n",(0,l.jsx)(i.h2,{id:"\u53c2\u6570",children:"\u53c2\u6570"}),"\n",(0,l.jsx)(i.h3,{id:"source_path",children:"SOURCE_PATH"}),"\n",(0,l.jsx)(i.p,{children:"The path to the root of the source tree."}),"\n",(0,l.jsx)(i.p,{children:"Because MSBuild uses in-source builds, the source tree is copied into a temporary location for the build. This\nparameter is the base for that copy and forms the base for all XYZ_SUBPATH options."}),"\n",(0,l.jsx)(i.h3,{id:"project_subpath",children:"PROJECT_SUBPATH"}),"\n",(0,l.jsxs)(i.p,{children:["The subpath to the solution (",(0,l.jsx)(i.code,{children:".sln"}),") or project (",(0,l.jsx)(i.code,{children:".vcxproj"}),") file relative to ",(0,l.jsx)(i.code,{children:"SOURCE_PATH"}),"."]}),"\n",(0,l.jsx)(i.h3,{id:"add_bin_to_path",children:"ADD_BIN_TO_PATH"}),"\n",(0,l.jsxs)(i.p,{children:["Adds the configuration dependent binary path to the ",(0,l.jsx)(i.code,{children:"PATH"})," environment variable before the build.\nThis is required to run tools built by the project itself. The ",(0,l.jsx)(i.code,{children:"PATH"})," environment variable is not be mutated if ",(0,l.jsx)(i.code,{children:"KMPKG_CROSSCOMPILING"})," is ",(0,l.jsx)(i.code,{children:"true"})]}),"\n",(0,l.jsx)(i.h3,{id:"no_toolchain_props",children:"NO_TOOLCHAIN_PROPS"}),"\n",(0,l.jsx)(i.p,{children:"Do not generate the toolchain properties via cmake. This automatically disables any kmpkg integration."}),"\n",(0,l.jsx)(i.h3,{id:"no_install",children:"NO_INSTALL"}),"\n",(0,l.jsx)(i.p,{children:"Do not automatically try to install any .lib|.dll|.pdb|.exe files found in the build dir."}),"\n",(0,l.jsx)(i.h3,{id:"clean",children:"CLEAN"}),"\n",(0,l.jsx)(i.p,{children:"Indicates that the intermediate files should be removed after installation."}),"\n",(0,l.jsx)(i.h3,{id:"release_configuration",children:"RELEASE_CONFIGURATION"}),"\n",(0,l.jsxs)(i.p,{children:["The configuration (",(0,l.jsx)(i.code,{children:"/p:Configuration"})," msbuild parameter) used for Release builds. Defaults to: ",(0,l.jsx)(i.code,{children:"Release"})]}),"\n",(0,l.jsx)(i.h3,{id:"debug_configuration",children:"DEBUG_CONFIGURATION"}),"\n",(0,l.jsxs)(i.p,{children:["The configuration (",(0,l.jsx)(i.code,{children:"/p:Configuration"})," msbuild parameter) used for Debug builds. Defaults to: ",(0,l.jsx)(i.code,{children:"Debug"})]}),"\n",(0,l.jsx)(i.h3,{id:"target",children:"TARGET"}),"\n",(0,l.jsxs)(i.p,{children:["The MSBuild target to build (",(0,l.jsx)(i.code,{children:"/t:<TARGET>"}),").  Defaults to: ",(0,l.jsx)(i.code,{children:"Rebuild"})]}),"\n",(0,l.jsx)(i.h3,{id:"platform",children:"PLATFORM"}),"\n",(0,l.jsxs)(i.p,{children:["The platform (",(0,l.jsx)(i.code,{children:"/p:Platform"})," msbuild parameter) used for the build."]}),"\n",(0,l.jsxs)(i.p,{children:["This defaults to a value mapping ",(0,l.jsx)(i.code,{children:"KMPKG_TARGET_ARCHITECTURE"})," to the default values Visual Studio uses when creating a ",(0,l.jsx)(i.code,{children:".vcxproj"}),":"]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"x86"})," becomes ",(0,l.jsx)(i.code,{children:"Win32"})]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"x64"})," becomes ",(0,l.jsx)(i.code,{children:"x64"})]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"arm"})," becomes ",(0,l.jsx)(i.code,{children:"ARM"})]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"arm64"})," becomes ",(0,l.jsx)(i.code,{children:"arm64"})]}),"\n"]}),"\n",(0,l.jsxs)(i.p,{children:["When passing a ",(0,l.jsx)(i.code,{children:".sln"})," rather than a ",(0,l.jsx)(i.code,{children:".vcxproj"}),", this may need to be set back to ",(0,l.jsx)(i.code,{children:"${KMPKG_TARGET_ARCHITECTURE}"})," to match the Platform strings used by solutions."]}),"\n",(0,l.jsx)(i.h3,{id:"options",children:"OPTIONS"}),"\n",(0,l.jsx)(i.p,{children:"Additional options to pass to MSBuild for all builds."}),"\n",(0,l.jsx)(i.h3,{id:"options_release",children:"OPTIONS_RELEASE"}),"\n",(0,l.jsxs)(i.p,{children:["Additional options passed to msbuild for Release builds. These are in addition to ",(0,l.jsx)(i.code,{children:"OPTIONS"}),"."]}),"\n",(0,l.jsx)(i.h3,{id:"options_debug",children:"OPTIONS_DEBUG"}),"\n",(0,l.jsxs)(i.p,{children:["Additional options passed to msbuild for Debug builds. These are in addition to ",(0,l.jsx)(i.code,{children:"OPTIONS"}),"."]}),"\n",(0,l.jsx)(i.h3,{id:"dependent_pkgconfig",children:"DEPENDENT_PKGCONFIG"}),"\n",(0,l.jsxs)(i.p,{children:["A list of ",(0,l.jsx)(i.code,{children:"pkg-config"})," dependencies to add to the build. This adds all required build flags (includes/definitions/libraries) to the build properties."]}),"\n",(0,l.jsx)(i.h3,{id:"additional_libs",children:"ADDITIONAL_LIBS"}),"\n",(0,l.jsx)(i.p,{children:"Additional libraries to add to the project."}),"\n",(0,l.jsx)(i.h3,{id:"additional_libs_debug",children:"ADDITIONAL_LIBS_DEBUG"}),"\n",(0,l.jsxs)(i.p,{children:["Additional libraries to add to msbuild for Release builds. These are in addition to ",(0,l.jsx)(i.code,{children:"ADDITIONAL_LIBS"}),"."]}),"\n",(0,l.jsx)(i.h3,{id:"additional_libs_release",children:"ADDITIONAL_LIBS_RELEASE"}),"\n",(0,l.jsxs)(i.p,{children:["Additional libraries to add to msbuild for Debug builds. These are in addition to ",(0,l.jsx)(i.code,{children:"ADDITIONAL_LIBS"}),"."]}),"\n",(0,l.jsx)(i.h2,{id:"source",children:"Source"}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.a,{href:"https://gitee.com/kumo-pub/kmpkg/blob/master/ports/kmpkg-msbuild/kmpkg_msbuild_install.cmake",children:"ports/kmpkg-msbuild/kmpkg_msbuild_install.cmake"})})]})}function h(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>o});var l=n(96540);const d={},s=l.createContext(d);function t(e){const i=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),l.createElement(s.Provider,{value:i},e.children)}}}]);