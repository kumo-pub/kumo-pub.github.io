"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[57289],{83004:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var r=t(74848),s=t(28453);const o={},a="=======\nMetrics",d={id:"pollux/develop/debugging/metrics",title:"metrics",description:"=======",source:"@site/versioned_docs/version-1.1.1/pollux/develop/debugging/metrics.mdx",sourceDirName:"pollux/develop/debugging",slug:"/pollux/develop/debugging/metrics",permalink:"/docs/pollux/develop/debugging/metrics",draft:!1,unlisted:!1,tags:[],version:"1.1.1",lastUpdatedBy:"Jeff lothar",lastUpdatedAt:1748143706e3,frontMatter:{},sidebar:"docs",previous:{title:"\u8c03\u8bd5",permalink:"/docs/category/\u8c03\u8bd5"},next:{title:"printExprWithStats",permalink:"/docs/pollux/develop/debugging/print-expr-with-stats"}},i={},c=[];function l(e){const n={h1:"h1",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"metrics",children:"=======\nMetrics"})}),"\n",(0,r.jsx)(n.p,{children:"Pollux emits several metrics during query execution which are useful to analyze the details of the underlying system and query processing. Some of these include:"}),"\n",(0,r.jsx)(n.p,{children:"queryThreadIoLatency: Time spent by a query processing thread waiting for synchronously issued IO or for an in-progress read-ahead to finish."}),"\n",(0,r.jsx)(n.p,{children:"numRamRead: Number of hits from RAM cache. Does not include first use of prefetched data."}),"\n",(0,r.jsx)(n.p,{children:"numPrefetch: Number of planned read from storage or SSD."}),"\n",(0,r.jsx)(n.p,{children:"prefetchBytes: Planned read from storage or SSD in bytes."}),"\n",(0,r.jsx)(n.p,{children:"numStorageRead: Number of reads from storage, for sparsely accessed columns."}),"\n",(0,r.jsx)(n.p,{children:"storageReadBytes: Bytes read from storage, for sparsely accessed columns."}),"\n",(0,r.jsx)(n.p,{children:"numLocalRead: Number of reads from SSD cache instead of storage. Includes both random and planned reads."}),"\n",(0,r.jsx)(n.p,{children:"localReadBytes: Bytes read from SSD cache instead of storage. Includes both random and planned reads."}),"\n",(0,r.jsx)(n.p,{children:"numRamRead: Number of hits from RAM cache. Does not include first use of prefetched data."}),"\n",(0,r.jsx)(n.p,{children:"ramReadBytes: Hits from RAM cache in bytes. Does not include first use of prefetched data."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var r=t(96540);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);