"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[40087],{65495:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var t=i(74848),r=i(28453);const o={title:"Tutorial: Export compiled dependencies",description:"In this tutorial we show you how to export compiled dependencies to be consumed by another project.",author:"JavierMatosD","ms.author":"Javiermat",date:"01/10/2024","ms.topic":"tutorial"},l="Tutorial: Export compiled dependencies",s={id:"kmpkg/produce/export-compiled-dependencies",title:"Tutorial: Export compiled dependencies",description:"In this tutorial we show you how to export compiled dependencies to be consumed by another project.",source:"@site/versioned_docs/version-1.1.1/kmpkg/produce/export-compiled-dependencies.mdx",sourceDirName:"kmpkg/produce",slug:"/kmpkg/produce/export-compiled-dependencies",permalink:"/docs/kmpkg/produce/export-compiled-dependencies",draft:!1,unlisted:!1,tags:[],version:"1.1.1",frontMatter:{title:"Tutorial: Export compiled dependencies",description:"In this tutorial we show you how to export compiled dependencies to be consumed by another project.",author:"JavierMatosD","ms.author":"Javiermat",date:"01/10/2024","ms.topic":"tutorial"}},c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"1 - Install <code>fmt</code> library",id:"1---install-fmt-library",level:2},{value:"2 - Export <code>fmt</code> library",id:"2---export-fmt-library",level:2},{value:"3 - Use the <code>fmt</code> library in a new CMake project",id:"3---use-the-fmt-library-in-a-new-cmake-project",level:2},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"tutorial-export-compiled-dependencies",children:"Tutorial: Export compiled dependencies"})}),"\n",(0,t.jsx)(n.p,{children:"In this tutorial, we'll walk through how to export compiled dependencies using kmpkg. This can be particularly useful when you want to share libraries across multiple projects or for ease of distribution."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Visual Studio with C++ development workload and CMake component"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://git-scm.com/downloads",children:"Git"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"kmpkg"}),"\n",(0,t.jsx)(n.li,{children:"A terminal"}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"1---install-fmt-library",children:["1 - Install ",(0,t.jsx)(n.code,{children:"fmt"})," library"]}),"\n",(0,t.jsxs)(n.p,{children:["Open a terminal and navigate to the directory where kmpkg is installed then install the ",(0,t.jsx)(n.code,{children:"fmt"})," library for your target platform:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"kmpkg install fmt:x64-windows\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Replace ",(0,t.jsx)(n.code,{children:"x64-windows"})," with your target triplet."]}),"\n",(0,t.jsxs)(n.h2,{id:"2---export-fmt-library",children:["2 - Export ",(0,t.jsx)(n.code,{children:"fmt"})," library"]}),"\n",(0,t.jsxs)(n.p,{children:["After installing ",(0,t.jsx)(n.code,{children:"fmt"}),", export it by running:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"kmpkg export fmt:x64-windows --zip\n"})}),"\n",(0,t.jsx)(n.p,{children:"You should see output similar to the following:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"The following packages are already built and will be exported:\n    fmt:x64-windows\n  * kmpkg-cmake:x64-windows\n  * kmpkg-cmake-config:x64-windows\nAdditional packages (*) need to be exported to complete this operation.\nExporting kmpkg-cmake:x64-windows...\nExporting kmpkg-cmake-config:x64-windows...\nExporting fmt:x64-windows...\nCreating zip archive...\nZip archive exported at: C:\\dev\\kmpkg\\kmpkg-export-20231106-164550.zip\nTo use exported libraries in CMake projects, add -DCMAKE_TOOLCHAIN_FILE=[...]/scripts/buildsystems/kmpkg.cmake to your CMake command line.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The command creates a zip archive containing all the necessary files to use the ",(0,t.jsx)(n.code,{children:"fmt"})," library, including binaries and headers. For a list of all the supported formats check out the ",(0,t.jsxs)(n.a,{href:"/docs/kmpkg/commands/export#formats",children:[(0,t.jsx)(n.code,{children:"export"})," command documentation"]}),"."]}),"\n",(0,t.jsxs)(n.h2,{id:"3---use-the-fmt-library-in-a-new-cmake-project",children:["3 - Use the ",(0,t.jsx)(n.code,{children:"fmt"})," library in a new CMake project"]}),"\n",(0,t.jsxs)(n.p,{children:["To use the ",(0,t.jsx)(n.code,{children:"fmt"})," library in a new CMake project, follow these steps:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Unzip the exported archive to a known location on your machine."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Make a new directory for your CMake project and navigate into it."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:"CMakeLists.txt"})," with the following content:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CMake",children:"cmake_minimum_required(VERSION 3.10)\nproject(HelloWorld)\n\nfind_package(fmt CONFIG REQUIRED)\nadd_executable(HelloWorld main.cpp)\ntarget_link_libraries(HelloWorld PRIVATE fmt::fmt)\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Write your ",(0,t.jsx)(n.code,{children:"main.cpp"})," file to include ",(0,t.jsx)(n.code,{children:"fmt"}),' and print "Hello, World":']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:' #include <fmt/core.h>\n\n int main() \n {\n     fmt::print("Hello, World!\\n");\n     return 0;\n }\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Build the project - In your terminal, from the project directory, run:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=<path-to-archive>/scripts/buildsystems/kmpkg.cmake\ncmake --build build\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Execute:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"..\\build\\Debug\\HelloWorld.exe\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.p,{children:["And that's it! You have exported the ",(0,t.jsx)(n.code,{children:"fmt"})," library and used it in a separate project."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>s});var t=i(96540);const r={},o=t.createContext(r);function l(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);