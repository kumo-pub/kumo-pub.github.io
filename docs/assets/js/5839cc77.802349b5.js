"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[64772],{41077:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>t});var n=a(74848),l=a(28453);const i={},d="\u5185\u5b58\u7ba1\u7406",s={id:"cpp/alkaid/memory",title:"\u5185\u5b58\u7ba1\u7406",description:"\u5185\u5b58\u7ba1\u7406API\u53c2\u8003",source:"@site/versioned_docs/version-1.1.1/cpp/alkaid/memory.mdx",sourceDirName:"cpp/alkaid",slug:"/cpp/alkaid/memory",permalink:"/docs/cpp/alkaid/memory",draft:!1,unlisted:!1,tags:[],version:"1.1.1",lastUpdatedBy:"Jeff lothar",lastUpdatedAt:1748081772e3,frontMatter:{},sidebar:"docs",previous:{title:"\u6982\u8ff0",permalink:"/docs/cpp/alkaid/overview"},next:{title:"\u6570\u7ec4",permalink:"/docs/cpp/alkaid/arrays"}},o={},t=[{value:"Buffers",id:"buffers",level:2},{value:"\u8bbf\u95ee\u7f13\u51b2\u5185\u5b58",id:"\u8bbf\u95ee\u7f13\u51b2\u5185\u5b58",level:3},{value:"\u5207\u7247",id:"\u5207\u7247",level:3},{value:"\u5206\u914d\u7f13\u51b2\u533a",id:"\u5206\u914d\u7f13\u51b2\u533a",level:3},{value:"\u5efa\u7acb\u7f13\u51b2\u533a",id:"\u5efa\u7acb\u7f13\u51b2\u533a",level:3},{value:"\u5185\u5b58\u6c60",id:"\u5185\u5b58\u6c60",level:2},{value:"\u9ed8\u8ba4\u5185\u5b58\u6c60",id:"\u9ed8\u8ba4\u5185\u5b58\u6c60",level:3},{value:"\u8986\u76d6\u9ed8\u8ba4\u5185\u5b58\u6c60",id:"\u8986\u76d6\u9ed8\u8ba4\u5185\u5b58\u6c60",level:3},{value:"STL\u96c6\u6210",id:"stl\u96c6\u6210",level:3},{value:"Devices",id:"devices",level:2},{value:"\u4e0e\u8bbe\u5907\u65e0\u5173\u7684\u7f16\u7a0b",id:"\u4e0e\u8bbe\u5907\u65e0\u5173\u7684\u7f16\u7a0b",level:3},{value:"\u5185\u5b58\u5206\u6790",id:"\u5185\u5b58\u5206\u6790",level:2}];function c(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"\u5185\u5b58\u7ba1\u7406",children:"\u5185\u5b58\u7ba1\u7406"})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"\u5185\u5b58\u7ba1\u7406API\u53c2\u8003 <alkaid/core/memory.h>"})}),"\n",(0,n.jsx)(r.h2,{id:"buffers",children:"Buffers"}),"\n",(0,n.jsxs)(r.p,{children:["\u4e3a\u4e86\u907f\u514d\u4f20\u9012\u5177\u6709\u4e0d\u540c\u4e14\u4e0d\u660e\u663e\u7684\u751f\u547d\u5468\u671f\u89c4\u5219\u7684\u539f\u59cb\u6570\u636e\u6307\u9488\uff0cAlkaid \u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a",(0,n.jsx)(r.code,{children:"alkaid::Buffer"}),"\u7684\u901a\u7528\u62bd\n\u8c61\u3002\u7f13\u51b2\u533a\u5c01\u88c5\u4e86\u6307\u9488\u548c\u6570\u636e\u5927\u5c0f\uff0c\u5e76\u4e14\u901a\u5e38\u8fd8\u5c06\u5176\u751f\u547d\u5468\u671f\u4e0e\u5e95\u5c42\u63d0\u4f9b\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u8054\u7cfb\u8d77\u6765\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u7f13\u51b2\u533a\u5e94\u8be5",(0,n.jsx)(r.em,{children:"\u59cb\u7ec8"}),"\u6307\u5411\u6709\u6548\n\u5185\u5b58\uff0c\u76f4\u5230\u5176\u88ab\u9500\u6bc1\uff09\u3002\u7f13\u51b2\u533a\u662f\u65e0\u7c7b\u578b\u7684\uff1a\u5b83\u4eec\u53ea\u662f\u8868\u793a\u7269\u7406\u5185\u5b58\u533a\u57df\uff0c\u800c\u4e0d\u7ba1\u5176\u9884\u671f\u542b\u4e49\u6216\u89e3\u91ca\u5982\u4f55\u3002"]}),"\n",(0,n.jsx)(r.p,{children:"\u7f13\u51b2\u533a\u53ef\u4ee5\u7531 Alkaid \u672c\u8eab\u6216\u7b2c\u4e09\u65b9\u4f8b\u7a0b\u5206\u914d\u3002\n\u4f8b\u5982\uff0c\u53ef\u4ee5\u5c06 Python \u5b57\u8282\u4e32\u7684\u6570\u636e\u4f5c\u4e3a Alkaid \u7f13\u51b2\u533a\u4f20\u9012\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u4fdd\u6301 Python \u5bf9\u8c61\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002"}),"\n",(0,n.jsxs)(r.p,{children:["\u6b64\u5916\uff0c\u7f13\u51b2\u533a\u6709\u591a\u79cd\u7c7b\u578b\uff1a\u53ef\u53d8\u6216\u4e0d\u53ef\u53d8\uff0c\u53ef\u8c03\u6574\u5927\u5c0f\u6216\u4e0d\u53ef\u8c03\u6574\u5927\u5c0f\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u6784\u5efa\u4e00\u6bb5\u6570\u636e\u65f6\uff0c\u4f60\u4f1a\u6301\u6709\u4e00\u4e2a\u53ef\u53d8\u7684\u7f13\u51b2\u533a\uff0c\u7136\u540e\u5b83\n\u4f1a\u88ab\u51bb\u7ed3\u4e3a\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684\u5bb9\u5668\uff0c\u4f8b\u5982",(0,n.jsx)(r.code,{children:"\u6570\u7ec4 <arrays>"}),"\u3002"]}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"\u67d0\u4e9b\u7f13\u51b2\u533a\u53ef\u80fd\u6307\u5411\u975e CPU \u5185\u5b58\uff0c\u4f8b\u5982\u7531 CUDA \u4e0a\u4e0b\u6587\u63d0\u4f9b\u7684 GPU \u652f\u6301\u7684\u5185\u5b58\u3002\u5982\u679c\u60a8\u6b63\u5728\u7f16\u5199\u652f\u6301 GPU \u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5219\u9700\u8981\u6ce8\u610f\u4e0d\u8981\u5c06 GPU \u5185\u5b58\u6307\u9488\u89e3\u91ca\u4e3a CPU \u53ef\u8bbf\u95ee\u6307\u9488\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002"})}),"\n",(0,n.jsx)(r.h3,{id:"\u8bbf\u95ee\u7f13\u51b2\u5185\u5b58",children:"\u8bbf\u95ee\u7f13\u51b2\u5185\u5b58"}),"\n",(0,n.jsxs)(r.p,{children:["\u7f13\u51b2\u533a\u4f7f\u7528\n",(0,n.jsx)(r.code,{children:"~alkaid::Buffer::size"})," \u548c ",(0,n.jsx)(r.code,{children:"~alkaid::Buffer::data"})," \u8bbf\u95ee\u5668\uff08\u6216\n",(0,n.jsx)(r.code,{children:"~alkaid::Buffer::mutable_data"})," \u7528\u4e8e\u5bf9\u53ef\u53d8\u7f13\u51b2\u533a\u8fdb\u884c\u53ef\u5199\u8bbf\u95ee\uff09\u63d0\u4f9b\u5bf9\u5e95\u5c42\u5185\u5b58\u7684\u5feb\u901f\u8bbf\u95ee\u3002"]}),"\n",(0,n.jsx)(r.h3,{id:"\u5207\u7247",children:"\u5207\u7247"}),"\n",(0,n.jsxs)(r.p,{children:["\u53ef\u4ee5\u5bf9\u7f13\u51b2\u533a\u8fdb\u884c\u96f6\u62f7\u8d1d\u5207\u7247\uff0c\u4ee5\u83b7\u5f97\u5f15\u7528\u5e95\u5c42\u6570\u636e\u67d0\u4e2a\u8fde\u7eed\u5b50\u96c6\u7684\u7f13\u51b2\u533a\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 ",(0,n.jsx)(r.code,{children:"alkaid::SliceBuffer"})," \u548c ",(0,n.jsx)(r.code,{children:"alkaid::SliceMutableBuffer"})," \u51fd\u6570\u6765\u5b9e\u73b0\u3002"]}),"\n",(0,n.jsx)(r.h3,{id:"\u5206\u914d\u7f13\u51b2\u533a",children:"\u5206\u914d\u7f13\u51b2\u533a"}),"\n",(0,n.jsxs)(r.p,{children:["\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 ",(0,n.jsx)(r.code,{children:"alkaid::AllocateBuffer"})," \u6216 ",(0,n.jsx)(r.code,{children:"alkaid::AllocateResizableBuffer"})," \u91cd\u8f7d\u4e4b\u4e00\u6765\u81ea\u5df1\u5206\u914d\u7f13\u51b2\u533a\uff1a"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-c++",children:'    alkaid::Result<std::unique_ptr<Buffer>> maybe_buffer = alkaid::AllocateBuffer(4096);\n    if (!maybe_buffer.ok()) {\n       // ... handle allocation error\n    }\n\n    std::shared_ptr<alkaid::Buffer> buffer = *std::move(maybe_buffer);\n    uint8_t* buffer_data = buffer->mutable_data();\n    memcpy(buffer_data, "hello world", 11);\n'})}),"\n",(0,n.jsxs)(r.p,{children:["\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5206\u914d\u7f13\u51b2\u533a\u53ef\u786e\u4fdd\u5b83\u6309\u7167",(0,n.jsx)(r.code,{children:"Alkaid \u5185\u5b58\u89c4\u8303 <../format/Layout>"}),"\u7684\u5efa\u8bae\u6309 64 \u5b57\u8282\u5bf9\u9f50\u548c\u586b\u5145\u3002"]}),"\n",(0,n.jsx)(r.h3,{id:"\u5efa\u7acb\u7f13\u51b2\u533a",children:"\u5efa\u7acb\u7f13\u51b2\u533a"}),"\n",(0,n.jsxs)(r.p,{children:["\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\n",(0,n.jsx)(r.code,{children:"alkaid::BufferBuilder"})," API \u9010\u6b65\u5206\u914d\u548c\u6784\u5efa\u7f13\u51b2\u533a\uff1a"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-c++",children:'    BufferBuilder builder;\n    builder.Resize(11);  // reserve enough space for 11 bytes\n    builder.Append("hello ", 6);\n    builder.Append("world", 5);\n\n    auto maybe_buffer = builder.Finish();\n    if (!maybe_buffer.ok()) {\n       // ... handle buffer allocation error\n    }\n    std::shared_ptr<alkaid::Buffer> buffer = *maybe_buffer;\n'})}),"\n",(0,n.jsxs)(r.p,{children:["\u5982\u679c\u7f13\u51b2\u533a\u7528\u4e8e\u5305\u542b\u7ed9\u5b9a\u56fa\u5b9a\u5bbd\u5ea6\u7c7b\u578b\u7684\u503c\uff08\u4f8b\u5982 List \u6570\u7ec4\u7684 32 \u4f4d\u504f\u79fb\u91cf\uff09\uff0c\u5219\u4f7f\u7528\u6a21\u677f ",(0,n.jsx)(r.code,{children:"alkaid::TypedBufferBuilder"})," API \u4f1a\u66f4\u65b9\u4fbf\uff1a"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-c++",children:"    TypedBufferBuilder<int32_t> builder;\n    builder.Reserve(2);  // reserve enough space for two int32_t values\n    builder.Append(0x12345678);\n    builder.Append(-0x765643210);\n\n    auto maybe_buffer = builder.Finish();\n    if (!maybe_buffer.ok()) {\n       // ... handle buffer allocation error\n    }\n    std::shared_ptr<alkaid::Buffer> buffer = *maybe_buffer;\n"})}),"\n",(0,n.jsx)(r.h2,{id:"\u5185\u5b58\u6c60",children:"\u5185\u5b58\u6c60"}),"\n",(0,n.jsxs)(r.p,{children:["\u4f7f\u7528 Alkaid C++ API \u5206\u914d\u7f13\u51b2\u533a\u65f6\uff0c\u7f13\u51b2\u533a\u7684\u5e95\u5c42\u5185\u5b58\u7531 ",(0,n.jsx)(r.code,{children:"alkaid::MemoryPool"})," \u5b9e\u4f8b\u5206\u914d\u3002\n\u901a\u5e38\uff0c\u8fd9\u5c06\u662f\u8fdb\u7a0b\u8303\u56f4\u7684 ",(0,n.jsx)(r.em,{children:"\u9ed8\u8ba4\u5185\u5b58\u6c60"}),"\uff0c\u4f46\u8bb8\u591a\nAlkaid API \u5141\u8bb8\u60a8\u4f20\u9012\u53e6\u4e00\u4e2a MemoryPool \u5b9e\u4f8b\u8fdb\u884c\u5185\u90e8\u5206\u914d\u3002\n\u5185\u5b58\u6c60\u7528\u4e8e\u5927\u578b\u957f\u5bff\u547d\u6570\u636e\uff0c\u4f8b\u5982\u6570\u7ec4\u7f13\u51b2\u533a\u3002\n\u5176\u4ed6\u6570\u636e\uff0c\u4f8b\u5982\u5c0f\u578b C++ \u5bf9\u8c61\u548c\u4e34\u65f6\u5de5\u4f5c\u533a\uff0c\u901a\u5e38\u901a\u8fc7\u5e38\u89c4 C++ \u5206\u914d\u5668\u3002"]}),"\n",(0,n.jsx)(r.h3,{id:"\u9ed8\u8ba4\u5185\u5b58\u6c60",children:"\u9ed8\u8ba4\u5185\u5b58\u6c60"}),"\n",(0,n.jsx)(r.p,{children:"\u9ed8\u8ba4\u5185\u5b58\u6c60\u53d6\u51b3\u4e8e Alkaid C++ \u7684\u7f16\u8bd1\u65b9\u5f0f\uff1a"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\u5982\u679c\u5728\u7f16\u8bd1\u65f6\u542f\u7528\uff0c\u5219\u4e3a\n",(0,n.jsx)(r.a,{href:"https://github.com/microsoft/mimalloc",children:"mimalloc"})," \u5806\uff1b"]}),"\n",(0,n.jsxs)(r.li,{children:["\u5426\u5219\uff0c\u5982\u679c\u5728\u7f16\u8bd1\u65f6\u542f\u7528\uff0c\u5219\u4e3a\n",(0,n.jsx)(r.a,{href:"http://jemalloc.net/",children:"jemalloc"})," \u5806\uff1b"]}),"\n",(0,n.jsxs)(r.li,{children:["\u5426\u5219\uff0c\u4e3a C \u5e93 ",(0,n.jsx)(r.code,{children:"malloc"})," \u5806\u3002"]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"\u8986\u76d6\u9ed8\u8ba4\u5185\u5b58\u6c60",children:"\u8986\u76d6\u9ed8\u8ba4\u5185\u5b58\u6c60"}),"\n",(0,n.jsxs)(r.p,{children:["\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e",(0,n.jsx)(r.code,{children:"ALKAID_DEFAULT_MEMORY_POOL"}),"\u73af\u5883\u53d8\u91cf\u6765\u8986\u76d6\u4e0a\u8ff0\u9009\u62e9\u7b97\u6cd5\u3002"]}),"\n",(0,n.jsx)(r.h3,{id:"stl\u96c6\u6210",children:"STL\u96c6\u6210"}),"\n",(0,n.jsxs)(r.p,{children:["\u5982\u679c\u60a8\u5e0c\u671b\u4f7f\u7528 Alkaid \u5185\u5b58\u6c60\u6765\u5206\u914d STL \u5bb9\u5668\u7684\u6570\u636e\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 ",(0,n.jsx)(r.code,{children:"alkaid::stl::allocator"})," \u5305\u88c5\u5668\u6765\u5b9e\u73b0\u3002"]}),"\n",(0,n.jsxs)(r.p,{children:["\u76f8\u53cd\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 STL \u5206\u914d\u5668\u6765\u5206\u914d Alkaid \u5185\u5b58\uff0c\n\u4f7f\u7528 ",(0,n.jsx)(r.code,{children:"alkaid::stl::STLMemoryPool"})," \u7c7b\u3002\u4f46\u662f\uff0c\u8fd9\u53ef\u80fd\u6027\u80fd\u8f83\u5dee\uff0c\n\u56e0\u4e3a STL \u5206\u914d\u5668\u4e0d\u63d0\u4f9b\u8c03\u6574\u5927\u5c0f\u64cd\u4f5c\u3002"]}),"\n",(0,n.jsx)(r.h2,{id:"devices",children:"Devices"}),"\n",(0,n.jsx)(r.p,{children:"\u8bb8\u591a Alkaid \u5e94\u7528\u7a0b\u5e8f\u4ec5\u8bbf\u95ee\u4e3b\u673a (CPU) \u5185\u5b58\u3002\u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u5904\u7406\u8bbe\u5907\u4e0a\u7684\u5185\u5b58\uff08\u4f8b\u5982 GPU \u4e0a\u7684\u677f\u8f7d\u5185\u5b58\uff09\u4ee5\u53ca\u4e3b\u673a\u5185\u5b58\u3002"}),"\n",(0,n.jsxs)(r.p,{children:["Alkaid \u4f7f\u7528 ",(0,n.jsx)(r.code,{children:"alkaid::Device"}),"\n\u62bd\u8c61\u6765\u8868\u793a CPU \u548c\u5176\u4ed6\u8bbe\u5907\u3002\u5173\u8054\u7c7b ",(0,n.jsx)(r.code,{children:"alkaid::MemoryManager"})," \u6307\u5b9a\u5982\u4f55\u5728\u7ed9\u5b9a\u8bbe\u5907\u4e0a\u5206\u914d\u3002\u6bcf\u4e2a\u8bbe\u5907\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684\u5185\u5b58\u7ba1\u7406\u5668\uff0c\u4f46\u53ef\n\u4ee5\u6784\u5efa\u5176\u4ed6\u5b9e\u4f8b\uff08\u4f8b\u5982\uff0c\u5c06\u81ea\u5b9a\u4e49 ",(0,n.jsx)(r.code,{children:"alkaid::MemoryPool"})," \u5305\u88c5\u5230 CPU\uff09\u3002",(0,n.jsx)(r.code,{children:"alkaid::MemoryManager"})," \u5b9e\u4f8b\u6307\u5b9a\u5982\u4f55\u5728\u7ed9\u5b9a\u8bbe\u5907\u4e0a\u5206\u914d\n\u5185\u5b58\uff08\u4f8b\u5982\uff0c\u5728 CPU \u4e0a\u4f7f\u7528\u7279\u5b9a\u7684 ",(0,n.jsx)(r.code,{children:"alkaid::MemoryPool"}),"\uff09\u3002"]}),"\n",(0,n.jsx)(r.h3,{id:"\u4e0e\u8bbe\u5907\u65e0\u5173\u7684\u7f16\u7a0b",children:"\u4e0e\u8bbe\u5907\u65e0\u5173\u7684\u7f16\u7a0b"}),"\n",(0,n.jsxs)(r.p,{children:["\u5982\u679c\u60a8\u4ece\u7b2c\u4e09\u65b9\u4ee3\u7801\u6536\u5230\u7f13\u51b2\u533a\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u5176 ",(0,n.jsx)(r.code,{children:"~alkaid::Buffer::is_cpu"})," \u65b9\u6cd5\u6765\u67e5\u8be2\u5b83\u662f\u5426\n\u53ef\u7531 CPU \u8bfb\u53d6\u3002"]}),"\n",(0,n.jsxs)(r.p,{children:["\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 ",(0,n.jsx)(r.code,{children:"alkaid::Buffer::View"})," \u6216 ",(0,n.jsx)(r.code,{children:"alkaid::Buffer::ViewOrCopy"})," \u4ee5\u901a\u7528\u65b9\u5f0f\u67e5\u770b\u7ed9\u5b9a\u8bbe\u5907\u4e0a\u7684\u7f13\u51b2\u533a\u3002"]}),"\n",(0,n.jsx)(r.p,{children:"\u5982\u679c\u6e90\u8bbe\u5907\u548c\u76ee\u6807\u8bbe\u5907\u76f8\u540c\uff0c\u5219\u6b64\u64cd\u4f5c\u4e3a\u7a7a\u64cd\u4f5c\u3002"}),"\n",(0,n.jsx)(r.p,{children:"\u5426\u5219\uff0c\u8bbe\u5907\u76f8\u5173\u673a\u5236\u5c06\u5c1d\u8bd5"}),"\n",(0,n.jsx)(r.p,{children:"\u4e3a\u76ee\u6807\u8bbe\u5907\u6784\u9020\u4e00\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u4ee5\u4fbf\u8bbf\u95ee\u7f13\u51b2\u533a\u5185\u5bb9\u3002"}),"\n",(0,n.jsx)(r.p,{children:"\u5b9e\u9645\u7684\u8bbe\u5907\u5230\u8bbe\u5907\u4f20\u8f93\u53ef\u80fd\u4f1a\u5728\u8bfb\u53d6\u7f13\u51b2\u533a\u5185\u5bb9\u65f6\u5ef6\u8fdf\u53d1\u751f\u3002"}),"\n",(0,n.jsx)(r.p,{children:"\u7c7b\u4f3c\u5730\uff0c\u5982\u679c\u60a8\u60f3\u5728\u4e0d\u5047\u8bbe"}),"\n",(0,n.jsxs)(r.p,{children:["CPU \u53ef\u8bfb\u7f13\u51b2\u533a\u7684\u60c5\u51b5\u4e0b\u5bf9\u7f13\u51b2\u533a\u6267\u884c I/O\uff0c\u60a8\u53ef\u4ee5\u8c03\u7528 ",(0,n.jsx)(r.code,{children:"alkaid::Buffer::GetReader"})," \u548c ",(0,n.jsx)(r.code,{children:"alkaid::Buffer::GetWriter"}),"\u3002"]}),"\n",(0,n.jsx)(r.p,{children:"\u4f8b\u5982\uff0c\u8981\u83b7\u53d6\u4efb\u610f\u7f13\u51b2\u533a\u7684 CPU \u89c6\u56fe\u6216\u526f\u672c\uff0c"}),"\n",(0,n.jsx)(r.p,{children:"\u60a8\u53ea\u9700\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"    std::shared_ptr<alkaid::Buffer> arbitrary_buffer = ... ;\n    std::shared_ptr<alkaid::Buffer> cpu_buffer = alkaid::Buffer::ViewOrCopy(\n       arbitrary_buffer, alkaid::default_cpu_memory_manager());\n"})}),"\n",(0,n.jsx)(r.h2,{id:"\u5185\u5b58\u5206\u6790",children:"\u5185\u5b58\u5206\u6790"}),"\n",(0,n.jsxs)(r.p,{children:["\u5728 Linux \u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,n.jsx)(r.code,{children:"perf record"})," \u751f\u6210\u5185\u5b58\u5206\u914d\u7684\u8be6\u7ec6\u914d\u7f6e\u6587\u4ef6\uff0c\u800c\u65e0\u9700\u4fee\u6539\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u9664\u4e86\u663e\u793a\u5206\u914d\u5927\u5c0f\u5916\uff0c\u8fd8\u53ef\u4ee5\u663e\u793a\u56de\u6eaf\u3002\u8fd9\u786e\u5b9e\u9700\u8981\u8c03\u8bd5\u7b26\u53f7\uff0c\u65e0\u8bba\u662f\u6765\u81ea\u8c03\u8bd5\u7248\u672c\u8fd8\u662f\u5e26\u6709\u8c03\u8bd5\u7b26\u53f7\u7684\u53d1\u5e03\u7248\u672c\u3002"]}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"\u5982\u679c\u60a8\u5728\u53e6\u4e00\u4e2a\u5e73\u53f0\u4e0a\u5206\u6790 Alkaid \u7684\u6d4b\u8bd5\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 Archery \u8fd0\u884c\u4ee5\u4e0b Docker \u5bb9\u5668\u6765\u8bbf\u95ee Linux \u73af\u5883\uff1a"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sourceCode",children:"archery docker run ubuntu-cpp bash\n# Inside the Docker container...\n/arrow/ci/scripts/cpp_build.sh /arrow /build\ncd build/cpp/debug\n./arrow-array-test # Run a test\napt-get update\napt-get install -y linux-tools-generic\nalias perf=/usr/lib/linux-tools/<version-path>/perf\n"})}),"\n",(0,n.jsxs)(r.p,{children:["\u8981\u8ddf\u8e2a\u5206\u914d\uff0c\u8bf7\u5728\u6240\u4f7f\u7528\u7684\u6bcf\u4e2a\u5206\u914d\u5668\u65b9\u6cd5\u4e0a\u521b\u5efa\u63a2\u6d4b\u70b9\u3002\u6536\u96c6",(0,n.jsx)(r.code,{children:"$params"}),"\u5141\u8bb8\u6211\u4eec\u8bb0\u5f55\u8bf7\u6c42\u7684\u5206\u914d\u7684\u5927\u5c0f\uff0c\u800c\u6536\u96c6",(0,n.jsx)(r.code,{children:"$retval"}),"\u5141\u8bb8\u6211\u4eec\u8bb0\u5f55\u5df2\u8bb0\u5f55\u5206\u914d\u7684\u5730\u5740\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u4e0e\u91ca\u653e/\u53d6\u6d88\u5206\u914d\u7684\u8c03\u7528\u76f8\u5173\u8054\u3002"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sourceCode",children:"perf probe -x libarrow.so je_arrow_mallocx '$params'\nperf probe -x libarrow.so je_arrow_mallocx%return '$retval'\nperf probe -x libarrow.so je_arrow_rallocx '$params'\nperf probe -x libarrow.so je_arrow_rallocx%return '$retval'\nperf probe -x libarrow.so je_arrow_dallocx '$params'\nPROBE_ARGS=\"-e probe_libarrow:je_arrow_mallocx \\\n   -e probe_libarrow:je_arrow_mallocx__return \\\n   -e probe_libarrow:je_arrow_rallocx \\\n   -e probe_libarrow:je_arrow_rallocx__return \\\n   -e probe_libarrow:je_arrow_dallocx\"\n"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sourceCode",children:"perf probe -x libarrow.so mi_malloc_aligned '$params'\nperf probe -x libarrow.so mi_malloc_aligned%return '$retval'\nperf probe -x libarrow.so mi_realloc_aligned '$params'\nperf probe -x libarrow.so mi_realloc_aligned%return '$retval'\nperf probe -x libarrow.so mi_free '$params'\nPROBE_ARGS=\"-e probe_libarrow:mi_malloc_aligned \\\n   -e probe_libarrow:mi_malloc_aligned__return \\\n   -e probe_libarrow:mi_realloc_aligned \\\n   -e probe_libarrow:mi_realloc_aligned__return \\\n   -e probe_libarrow:mi_free\"\n"})}),"\n",(0,n.jsx)(r.p,{children:"\u8bbe\u7f6e\u63a2\u6d4b\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u201cperf record\u201d\u8bb0\u5f55\u5e26\u6709\u76f8\u5173\u56de\u6eaf\u7684\u8c03\u7528\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5728 Alkaid \u4e2d\u8fd0\u884c StructArray \u5355\u5143\u6d4b\u8bd5\uff1a"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sourceCode",children:"perf record -g --call-graph dwarf \\\n  $PROBE_ARGS \\\n  ./arrow-array-test --gtest_filter=StructArray*\n"})}),"\n",(0,n.jsxs)(r.p,{children:["\u5982\u679c\u60a8\u60f3\u8981\u5206\u6790\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\n",(0,n.jsx)(r.code,{children:"perf record -p <PID>"}),"\uff0c\u5b83\u4f1a\u4e00\u76f4\u8bb0\u5f55\uff0c\u76f4\u5230\u60a8\u4f7f\u7528\nCTRL+C \u4e2d\u65ad\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u6267\u884c",(0,n.jsx)(r.code,{children:"perf record -P <PID> sleep 10"}),"\u6765\n\u8bb0\u5f55 10 \u79d2\u3002"]}),"\n",(0,n.jsxs)(r.p,{children:["\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u5de5\u5177\u5904\u7406\u7ed3\u679c\u6570\u636e\u4ee5\u4e0e\nperf \u914d\u5408\u4f7f\u7528\uff0c\u6216\u8005\u53ef\u4ee5\u4f7f\u7528",(0,n.jsx)(r.code,{children:"perf script"}),"\u5c06\u6587\u672c\u683c\u5f0f\u7684\u6570\u636e\u4f20\u9001\u5230\n\u81ea\u5b9a\u4e49\u811a\u672c\u3002\u4ee5\u4e0b\u811a\u672c\u89e3\u6790",(0,n.jsx)(r.code,{children:"perf script"}),"\u8f93\u51fa\u5e76\u4ee5\u6362\u884c\u7b26\u5206\u9694\u7684 JSON \u683c\u5f0f\u6253\u5370\u8f93\u51fa\uff0c\u4ee5\u4fbf\u4e8e\u5904\u7406\u3002"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sourceCode",children:"import sys\nimport re\nimport json\n\n# Example non-traceback line\n# arrow-array-tes 14344 [003]  7501.073802: probe_libarrow:je_arrow_mallocx: (7fbcd20bb640) size=0x80 flags=6\n\ncurrent = {}\ncurrent_traceback = ''\n\ndef new_row():\n    global current_traceback\n    current['traceback'] = current_traceback\n    print(json.dumps(current))\n    current_traceback = ''\n\nfor line in sys.stdin:\n    if line == '\\n':\n        continue\n    elif line[0] == '\\t':\n        # traceback line\n        current_traceback += line.strip(\"\\t\")\n    else:\n        line = line.rstrip('\\n')\n        if not len(current) == 0:\n            new_row()\n        parts = re.sub(' +', ' ', line).split(' ')\n\n        parts.reverse()\n        parts.pop() # file\n        parts.pop() # \"14344\"\n        parts.pop() # \"[003]\"\n\n        current['time'] = float(parts.pop().rstrip(\":\"))\n        current['event'] = parts.pop().rstrip(\":\")\n\n        parts.pop() # (7fbcd20bddf0)\n        if parts[-1] == \"<-\":\n            parts.pop()\n            parts.pop()\n\n        params = {}\n\n        for pair in parts:\n            key, value = pair.split(\"=\")\n            params[key] = value\n\n        current['params'] = params\n"})}),"\n",(0,n.jsx)(r.p,{children:"\u4ee5\u4e0b\u662f\u8be5\u811a\u672c\u7684\u8c03\u7528\u793a\u4f8b\uff0c\u5e76\u9644\u6709\u8f93\u51fa\u6570\u636e\u7684\u9884\u89c8\uff1a"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sourceCode",children:'$ perf script | python3 /arrow/process_perf_events.py > processed_events.jsonl\n$ head processed_events.jsonl | cut -c -120\n{"time": 14814.954378, "event": "probe_libarrow:je_arrow_mallocx", "params": {"flags": "6", "size": "0x80"}, "traceback"\n{"time": 14814.95443, "event": "probe_libarrow:je_arrow_mallocx__return", "params": {"arg1": "0x7f4a97e09000"}, "traceba\n{"time": 14814.95448, "event": "probe_libarrow:je_arrow_mallocx", "params": {"flags": "6", "size": "0x40"}, "traceback":\n{"time": 14814.954486, "event": "probe_libarrow:je_arrow_mallocx__return", "params": {"arg1": "0x7f4a97e0a000"}, "traceb\n{"time": 14814.954502, "event": "probe_libarrow:je_arrow_rallocx", "params": {"flags": "6", "size": "0x40", "ptr": "0x7f\n{"time": 14814.954507, "event": "probe_libarrow:je_arrow_rallocx__return", "params": {"arg1": "0x7f4a97e0a040"}, "traceb\n{"time": 14814.954796, "event": "probe_libarrow:je_arrow_mallocx", "params": {"flags": "6", "size": "0x40"}, "traceback"\n{"time": 14814.954805, "event": "probe_libarrow:je_arrow_mallocx__return", "params": {"arg1": "0x7f4a97e0a080"}, "traceb\n{"time": 14814.954817, "event": "probe_libarrow:je_arrow_mallocx", "params": {"flags": "6", "size": "0x40"}, "traceback"\n{"time": 14814.95482, "event": "probe_libarrow:je_arrow_mallocx__return", "params": {"arg1": "0x7f4a97e0a0c0"}, "traceba\n'})}),"\n",(0,n.jsx)(r.p,{children:"\u4ece\u8fd9\u91cc\u53ef\u4ee5\u56de\u7b54\u8bb8\u591a\u95ee\u9898\u3002\u4f8b\u5982\uff0c"}),"\n",(0,n.jsx)(r.p,{children:"\u4ee5\u4e0b\u811a\u672c\u5c06\u67e5\u627e\u54ea\u4e9b\u5206\u914d\u4ece\u672a\u88ab\u91ca\u653e\uff0c\u5e76\u6253\u5370"}),"\n",(0,n.jsx)(r.p,{children:"\u76f8\u5173\u7684\u56de\u6eaf\u4ee5\u53ca\u60ac\u7a7a\u5206\u914d\u7684\u6570\u91cf\uff1a"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sourceCode",children:"'''Find tracebacks of allocations with no corresponding free'''\nimport sys\nimport json\nfrom collections import defaultdict\n\nallocated = dict()\n\nfor line in sys.stdin:\n    line = line.rstrip('\\n')\n    data = json.loads(line)\n\n    if data['event'] == \"probe_libarrow:je_arrow_mallocx__return\":\n        address = data['params']['arg1']\n        allocated[address] = data['traceback']\n    elif data['event'] == \"probe_libarrow:je_arrow_rallocx\":\n        address = data['params']['ptr']\n        del allocated[address]\n    elif data['event'] == \"probe_libarrow:je_arrow_rallocx__return\":\n        address = data['params']['arg1']\n        allocated[address] = data['traceback']\n    elif data['event'] == \"probe_libarrow:je_arrow_dallocx\":\n        address = data['params']['ptr']\n        if address in allocated:\n            del allocated[address]\n    elif data['event'] == \"probe_libarrow:mi_malloc_aligned__return\":\n        address = data['params']['arg1']\n        allocated[address] = data['traceback']\n    elif data['event'] == \"probe_libarrow:mi_realloc_aligned\":\n        address = data['params']['p']\n        del allocated[address]\n    elif data['event'] == \"probe_libarrow:mi_realloc_aligned__return\":\n        address = data['params']['arg1']\n        allocated[address] = data['traceback']\n    elif data['event'] == \"probe_libarrow:mi_free\":\n        address = data['params']['p']\n        if address in allocated:\n            del allocated[address]\n\ntraceback_counts = defaultdict(int)\n\nfor traceback in allocated.values():\n    traceback_counts[traceback] += 1\n\nfor traceback, count in sorted(traceback_counts.items(), key=lambda x: -x[1]):\n    print(\"Num of dangling allocations:\", count)\n    print(traceback)\n"})}),"\n",(0,n.jsx)(r.p,{children:"\u8be5\u811a\u672c\u53ef\u4ee5\u50cf\u8fd9\u6837\u8c03\u7528\uff1a"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sourceCode",children:"$ cat processed_events.jsonl | python3 /arrow/count_tracebacks.py\nNum of dangling allocations: 1\n 7fc945e5cfd2 alkaid::(anonymous namespace)::JemallocAllocator::ReallocateAligned+0x13b (/build/cpp/debug/libarrow.so.700.0.0)\n 7fc945e5fe4f alkaid::BaseMemoryPoolImpl<alkaid::(anonymous namespace)::JemallocAllocator>::Reallocate+0x93 (/build/cpp/debug/libarrow.so.700.0.0)\n 7fc945e618f7 alkaid::PoolBuffer::Resize+0xed (/build/cpp/debug/libarrow.so.700.0.0)\n 55a38b163859 alkaid::BufferBuilder::Resize+0x12d (/build/cpp/debug/arrow-array-test)\n 55a38b163bbe alkaid::BufferBuilder::Finish+0x48 (/build/cpp/debug/arrow-array-test)\n 55a38b163e3a alkaid::BufferBuilder::Finish+0x50 (/build/cpp/debug/arrow-array-test)\n 55a38b163f90 alkaid::BufferBuilder::FinishWithLength+0x4e (/build/cpp/debug/arrow-array-test)\n 55a38b2c8fa7 alkaid::TypedBufferBuilder<int, void>::FinishWithLength+0x4f (/build/cpp/debug/arrow-array-test)\n 55a38b2bcce7 alkaid::NumericBuilder<alkaid::Int32Type>::FinishInternal+0x107 (/build/cpp/debug/arrow-array-test)\n 7fc945c065ae alkaid::ArrayBuilder::Finish+0x5a (/build/cpp/debug/libarrow.so.700.0.0)\n 7fc94736ed41 alkaid::ipc::internal::json::(anonymous namespace)::Converter::Finish+0x123 (/build/cpp/debug/libarrow.so.700.0.0)\n 7fc94737426e alkaid::ipc::internal::json::ArrayFromJSON+0x299 (/build/cpp/debug/libarrow.so.700.0.0)\n 7fc948e98858 alkaid::ArrayFromJSON+0x64 (/build/cpp/debug/libarrow_testing.so.700.0.0)\n 55a38b6773f3 alkaid::StructArray_FlattenOfSlice_Test::TestBody+0x79 (/build/cpp/debug/arrow-array-test)\n 7fc944689633 testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>+0x68 (/build/cpp/googletest_ep-prefix/lib/libgtestd.so.1.11.0)\n 7fc94468132a testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>+0x5d (/build/cpp/googletest_ep-prefix/lib/libgtestd.so.1.11.0)\n 7fc9446555eb testing::Test::Run+0xf1 (/build/cpp/googletest_ep-prefix/lib/libgtestd.so.1.11.0)\n 7fc94465602d testing::TestInfo::Run+0x13f (/build/cpp/googletest_ep-prefix/lib/libgtestd.so.1.11.0)\n 7fc944656947 testing::TestSuite::Run+0x14b (/build/cpp/googletest_ep-prefix/lib/libgtestd.so.1.11.0)\n 7fc9446663f5 testing::internal::UnitTestImpl::RunAllTests+0x433 (/build/cpp/googletest_ep-prefix/lib/libgtestd.so.1.11.0)\n 7fc94468ab61 testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>+0x68 (/build/cpp/googletest_ep-prefix/lib/libgtestd.so.1.11.0)\n 7fc944682568 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>+0x5d (/build/cpp/googletest_ep-prefix/lib/libgtestd.so.1.11.0)\n 7fc944664b0c testing::UnitTest::Run+0xcc (/build/cpp/googletest_ep-prefix/lib/libgtestd.so.1.11.0)\n 7fc9446d0299 RUN_ALL_TESTS+0x14 (/build/cpp/googletest_ep-prefix/lib/libgtest_maind.so.1.11.0)\n 7fc9446d021b main+0x42 (/build/cpp/googletest_ep-prefix/lib/libgtest_maind.so.1.11.0)\n 7fc9441e70b2 __libc_start_main+0xf2 (/usr/lib/x86_64-linux-gnu/libc-2.31.so)\n 55a38b10a50d _start+0x2d (/build/cpp/debug/arrow-array-test)\n"})})]})}function p(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,r,a)=>{a.d(r,{R:()=>d,x:()=>s});var n=a(96540);const l={},i=n.createContext(l);function d(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);