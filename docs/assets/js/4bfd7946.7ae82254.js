"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[96289],{95662:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var t=s(74848),r=s(28453);const a={},i="\u591a\u7ef4\u5ea6kvar",c={id:"cpp/krpc/mkvar_c++",title:"\u591a\u7ef4\u5ea6kvar",description:"mkvar Introduction",source:"@site/docs/cpp/krpc/mkvar_c++.mdx",sourceDirName:"cpp/krpc",slug:"/cpp/krpc/mkvar_c++",permalink:"/docs/next/cpp/krpc/mkvar_c++",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Jeff lothar",lastUpdatedAt:1748081772e3,frontMatter:{},sidebar:"docs",previous:{title:"\u5355\u7ef4\u5ea6kvar",permalink:"/docs/next/cpp/krpc/kvar_c++"},next:{title:"\u6d41\u5f0frpc",permalink:"/docs/next/cpp/krpc/streaming_rpc"}},d={},l=[{value:"mkvar Introduction",id:"mkvar-introduction",level:2},{value:"kvar::MVariables",id:"kvarmvariables",level:2},{value:"expose",id:"expose",level:3},{value:"expose",id:"expose-1",level:4},{value:"expose_as",id:"expose_as",level:4},{value:"Export all MVariable",id:"export-all-mvariable",level:3},{value:"count",id:"count",level:3},{value:"count_exposed",id:"count_exposed",level:4},{value:"list",id:"list",level:3},{value:"list_exposed",id:"list_exposed",level:4},{value:"kvar::MultiDimension",id:"kvarmultidimension",level:2},{value:"constructor",id:"constructor",level:3},{value:"stats",id:"stats",level:3},{value:"get_stats",id:"get_stats",level:4},{value:"count",id:"count-1",level:3},{value:"count_labels",id:"count_labels",level:4},{value:"count_stats",id:"count_stats",level:4},{value:"list",id:"list-1",level:3},{value:"list_stats",id:"list_stats",level:4},{value:"template",id:"template",level:3},{value:"kvar::Adder",id:"kvaradder",level:4},{value:"kvar::Maxer",id:"kvarmaxer",level:4},{value:"kvar::Miner",id:"kvarminer",level:4},{value:"kvar::IntRecorder",id:"kvarintrecorder",level:4},{value:"kvar::LatencyRecorder",id:"kvarlatencyrecorder",level:4},{value:"kvar::Status",id:"kvarstatus",level:4},{value:"kvar::WindowEx",id:"kvarwindowex",level:4},{value:"kvar::PerSecondEx",id:"kvarpersecondex",level:4}];function o(e){const n={blockquote:"blockquote",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\u591a\u7ef4\u5ea6kvar",children:"\u591a\u7ef4\u5ea6kvar"})}),"\n",(0,t.jsx)(n.h2,{id:"mkvar-introduction",children:"mkvar Introduction"}),"\n",(0,t.jsx)(n.p,{children:"\u591a\u7ef4\u5ea6mkvar\u4f7f\u7528\u6587\u6863"}),"\n",(0,t.jsx)(n.p,{children:"mkvar\u4e2d\u6709\u4e24\u4e2a\u7c7b\uff0c\u5206\u522b\u662fMVariable\u548cMultiDimension\uff0cMVariable\u662f\u591a\u7ef4\u5ea6\u7edf\u8ba1\u7684\u57fa\u7c7b\uff0cMultiDimension\u662f\u6d3e\u751f\u6a21\u677f\u7c7b\uff0c\u76ee\u524d\u652f\u6301\u5982\u4e0b\u51e0\u79cd\u7c7b\u578b\uff1a"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"kvar\u7c7b\u578b"}),(0,t.jsx)(n.th,{children:"\u8bf4\u660e"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"kvar::Adder<T>"})}),(0,t.jsxs)(n.td,{children:["\u8ba1\u6570\u5668\uff0c\u9ed8\u8ba40\uff0c",(0,t.jsx)(n.code,{children:"varname << N\u76f8\u5f53\u4e8evarname += N"}),"\u3002"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"kvar::Maxer<T>"})}),(0,t.jsxs)(n.td,{children:["\u6c42\u6700\u5927\u503c\uff0c\u9ed8\u8ba4",(0,t.jsx)(n.code,{children:"std::numeric_limits<T>::min()"}),"\uff0c",(0,t.jsx)(n.code,{children:"varname << N\u76f8\u5f53\u4e8evarname = max(varname, N)"}),"\u3002"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"kvar::Miner<T>"})}),(0,t.jsxs)(n.td,{children:["\u6c42\u6700\u5c0f\u503c\uff0c\u9ed8\u8ba4",(0,t.jsx)(n.code,{children:"std::numeric_limits<T>::max()"}),"\uff0c",(0,t.jsx)(n.code,{children:"varname << N\u76f8\u5f53\u4e8evarname = min(varname, N)"}),"\u3002"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"kvar::IntRecorder"})}),(0,t.jsx)(n.td,{children:"\u6c42\u81ea\u4f7f\u7528\u4ee5\u6765\u7684\u5e73\u5747\u503c\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u5b9a\u8bed\u4e0d\u662f\u201c\u4e00\u6bb5\u65f6\u95f4\u5185\u201d\u3002\u4e00\u822c\u8981\u901a\u8fc7Window\u884d\u751f\u51fa\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u5e73\u5747\u503c\u3002"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"kvar::LatencyRecorder"})}),(0,t.jsx)(n.td,{children:"\u4e13\u7528\u4e8e\u8bb0\u5f55\u5ef6\u65f6\u548cqps\u7684\u53d8\u91cf\u3002\u8f93\u5165\u5ef6\u65f6\uff0c\u5e73\u5747\u5ef6\u65f6/\u6700\u5927\u5ef6\u65f6/qps/\u603b\u6b21\u6570 \u90fd\u6709\u4e86\u3002"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"kvar::Status<T>"})}),(0,t.jsx)(n.td,{children:"\u8bb0\u5f55\u548c\u663e\u793a\u4e00\u4e2a\u503c\uff0c\u62e5\u6709\u989d\u5916\u7684set_value\u51fd\u6570\u3002"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"kvar::WindowEx<R, T>"})}),(0,t.jsx)(n.td,{children:"\u83b7\u5f97\u4e4b\u524d\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u7edf\u8ba1\u503c\u3002WindowEx\u662f\u72ec\u7acb\u5b58\u5728\u7684\uff0c\u4e0d\u4f9d\u8d56\u5176\u4ed6\u7684\u8ba1\u6570\u5668\uff0c\u9700\u8981\u7ed9\u5b83\u53d1\u9001\u6570\u636e\u3002"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"kvar::PerSecondEx<T>"})}),(0,t.jsx)(n.td,{children:"\u83b7\u5f97\u4e4b\u524d\u4e00\u6bb5\u65f6\u95f4\u5185\u5e73\u5747\u6bcf\u79d2\u7684\u7edf\u8ba1\u503c\u3002PerSecondEx\u662f\u72ec\u7acb\u5b58\u5728\u7684\uff0c\u4e0d\u4f9d\u8d56\u5176\u4ed6\u7684\u8ba1\u6570\u5668\uff0c\u9700\u8981\u7ed9\u5b83\u53d1\u9001\u6570\u636e\u3002"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"\u4f8b\u5b50\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_count("request_count", {"idc", "method", "status"});\n// kvar::MultiDimension<kvar::Adder<int> > g_request_count("foo_bar", "request_count", {"idc", "method", "status"});\n\nint process_request(const std::list<std::string>& request_label) {\n    // \u83b7\u53d6request_label\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6kvar\u6307\u9488\uff0c\u6bd4\u5982\uff1arequest_label = {"tc", "get", "200"}\n    kvar::Adder<int>* adder = g_request_count.get_stats(request_label);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!adder) {\n        return -1;\n    }\n    // adder\u53ea\u80fd\u5728g_request_count\u7684\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    // \u7ed9adder\u8f93\u5165\u4e00\u4e9b\u503c\n    *adder << 1 << 2 <<3;\n    LOG(INFO) << "adder=" << *adder; // adder add up to 6\n    ...\n    return 0;\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h2,{id:"kvarmvariables",children:"kvar::MVariables"}),"\n",(0,t.jsx)(n.p,{children:"MVariale\u662fMultiDimension(\u591a\u7ef4\u5ea6\u7edf\u8ba1)\u7684\u57fa\u7c7b\uff0c\u4e3b\u8981\u63d0\u4f9b\u5168\u5c40\u6ce8\u518c\u3001\u5217\u4e3e\u3001\u67e5\u8be2\u548cdump\u7b49\u529f\u80fd\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"expose",children:"expose"}),"\n",(0,t.jsx)(n.h4,{id:"expose-1",children:"expose"}),"\n",(0,t.jsx)(n.p,{children:"\u7528\u6237\u5728\u521b\u5efamkvar\u53d8\u91cf(kvar::MultiDimension)\u7684\u65f6\u5019\uff0c\u5982\u679c\u4f7f\u7528\u4e00\u4e2a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570(\u5171\u6709\u4e09\u4e2a\u6784\u9020\u51fd\u6570)\uff0c\u8fd9\u4e2amkvar\u5e76\u672a\u6ce8\u518c\u5230\u4efb\u4f55\u5168\u5c40\u7ed3\u6784\u4e2d(\u5f53\u7136\u4e5f\u4e0d\u4f1adump\u5230\u672c\u5730\u6587\u4ef6)\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cmkvar\u7eaf\u7cb9\u662f\u4e00\u4e2a\u66f4\u5feb\u7684\u591a\u7ef4\u5ea6\u8ba1\u6570\u5668\u3002\u6211\u4eec\u79f0\u628a\u4e00\u4e2amkvar\u6ce8\u518c\u5230\u5168\u5c40\u8868\u4e2d\u7684\u884c\u4e3a\u4e3a\u201c\u66dd\u5149\u201d\uff0c\u53ef\u4ee5\u901a\u8fc7expose\u51fd\u6570\u66dd\u5149\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:"class MVariable {\npublic\n    ...\n    // Expose this mvariable globally so that it's counted in following\n    // functions:\n    //     list_exposed\n    //     count_exposed\n    // Return 0 on success, -1 otherwise.\n    int expose(const base::StringPiece& name);\n    int expose_as(const base::StringPiece& prefix, const base::StringPiece& name);\n};\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u5168\u5c40\u66dd\u5149\u540e\u7684mkvar\u540d\u5b57\u4fbf\u4e3aname\u6216\u8005prefix+name\uff0c\u53ef\u901a\u8fc7\u4ee5_exposed\u4e3a\u540e\u7f00\u7684static\u51fd\u6570\u67e5\u8be2\u3002\u6bd4\u5982MVariable::describe_exposed(name)\u4f1a\u8fd4\u56de\u540d\u4e3aname\u7684mkvar\u7684\u63cf\u8ff0\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5f53\u76f8\u540c\u540d\u5b57\u7684mkvar\u5df2\u5b58\u5728\u65f6\uff0cexpose\u4f1a\u6253\u5370FATAL\u65e5\u5fd7\u5e76\u8fd4\u56de-1\u3002\u5982\u679c\u9009\u9879-kvar_abort_on_same_name\u8bbe\u4e3atrue (\u9ed8\u8ba4\u662ffalse)\uff0c\u7a0b\u5e8f\u4f1a\u76f4\u63a5abort\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4e0b\u9762\u662f\u4e00\u4e9b\u66dd\u5149mkvar\u7684\u4f8b\u5b50\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_count("request_count", {"idc", "method", "status"});\n\n// \u6362\u4e00\u4e2a\u540d\u5b57\ng_request_count->expose("request_count_another");\n\nint process_request(const std::list<std::string>& request_label) {\n    // \u83b7\u53d6request_label\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6kvar\u6307\u9488\uff0c\u6bd4\u5982\uff1arequest_label = {"tc", "get", "200"}\n    kvar::Adder<int>* adder = g_request_count.get_stats(labels_value);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!adder) {\n        return -1;\n    }\n\n    //adder\u53ea\u80fd\u5728g_request_count\u7684\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *adder << 10 << 20 << 30; // adder add up to 60\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h4,{id:"expose_as",children:"expose_as"}),"\n",(0,t.jsx)(n.p,{children:"\u4e3a\u4e86\u907f\u514d\u91cd\u540d\uff0cmkvar\u7684\u540d\u5b57\u5e94\u52a0\u4e0a\u524d\u7f00\uff0c\u5efa\u8bae\u4e3a<namespace>_<module>_<name>\u3002\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86expose_as\u51fd\u6570\uff0c\u63a5\u6536\u4e00\u4e2a\u524d\u7f00\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'class MVariable {\npublic\n    ...\n    // Expose this mvariable with a prefix.\n    // Example:\n    //   namespace foo {\n    //   namespace bar {\n    //\n    //      kvar::MultiDimension<kvar::Adder<int> > g_request_count("request_count", {"idc", "method", "status"});\n    //      g_request_count.expose_as("foo_bar", "request_count");\n    //      ...\n    //\n    //   }  // foo\n    //   }  // bar\n    int expose_as(const base::StringPiece& prefix, const base::StringPiece& name);\n};\n'})}),"\n",(0,t.jsx)(n.h3,{id:"export-all-mvariable",children:"Export all MVariable"}),"\n",(0,t.jsx)(n.p,{children:"\u63d0\u4f9bdump_exposed\u51fd\u6570\u5bfc\u51fa\u8fdb\u7a0b\u4e2d\u6240\u6709\u5df2\u66dd\u5149\u7684mkvar\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:"// Implement this class to write mvariables into different places.\n// If dump() returns false, MVariable::dump_exposed() skip and continue dump.\nclass Dumper {\npublic:\n    virtual bool dump(const std::string& name, const base::StringPiece& description) = 0;\n};\n\n// Options for MVariable::dump_exposed().\nstruct DumpOptions {\n    // Contructed with default options.\n    DumpOptions();\n    // If this is true, string-type values will be quoted.\n    bool quote_string;\n    // The ? in wildcards. Wildcards in URL need to use another character\n    // because ? is reserved.\n    char question_mark; // \u76ee\u524d\u4e0d\u652f\u6301\n    // Separator for white_wildcards and black_wildcards.\n    char wildcard_separator; // \u76ee\u524d\u4e0d\u652f\u6301\n    // Name matched by these wildcards (or exact names) are kept.\n    std::string white_wildcards; // \u76ee\u524d\u4e0d\u652f\u6301\n    // Name matched by these wildcards (or exact names) are skipped.\n    std::string black_wildcards; // \u76ee\u524d\u4e0d\u652f\u6301\n};\n\nclass MVariable {\n    ...\n    ...\n    // Find all exposed mvariables and send them to `dumper'.\n    // Use default options when `options' is NULL.\n    // Return number of dumped mvariables, -1 on error.\n    static size_t dump_exposed(Dumper* dumper, const DumpOptions* options);\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u6700\u5e38\u89c1\u7684\u5bfc\u51fa\u9700\u6c42\u662f\u901a\u8fc7HTTP\u63a5\u53e3\u67e5\u8be2\u548c\u5199\u5165\u672c\u5730\u6587\u4ef6\uff0c\u591a\u7ef4\u5ea6\u7edf\u8ba1\u652f\u6301\u901a\u8fc7\u5185\u7f6e\u670d\u52a1",(0,t.jsx)(n.code,{children:"/krpc_metrics"}),"\u63a5\u53e3\u65b9\u5f0f\u67e5\u8be2\u3002\u4e5f\u652f\u6301\u5199\u5165\u672c\u5730\u6587\u4ef6\uff0c\u8be5\u529f\u80fd\u7531\u4e0b\u97625\u4e2agflags\u63a7\u5236\uff0c\u4f60\u7684\u7a0b\u5e8f\u9700\u8981\u4f7f\u7528gflags\u3002"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"\u540d\u79f0"}),(0,t.jsx)(n.th,{children:"\u9ed8\u8ba4\u503c"}),(0,t.jsx)(n.th,{children:"\u63cf\u8ff0"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"mkvar_dump"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"Create a background thread dumping(shares the same thread as kvar_dump) all mkvar periodically, all kvar_dump_* flags are not effective when this flag is off"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"mkvar_dump_file"}),(0,t.jsx)(n.td,{children:"monitor/mkvar.<app>.data"}),(0,t.jsx)(n.td,{children:"Dump mkvar into this file"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"mkvar_dump_format"}),(0,t.jsx)(n.td,{children:"common"}),(0,t.jsx)(n.td,{children:"Dump mkvar write format common\uff1a\u6587\u672c\u683c\u5f0f\uff0cKey\u548cValue\u7528\u5192\u53f7\u5206\u5272(\u548c\u76ee\u524d\u7684\u5355\u7ef4\u5ea6dump\u6587\u4ef6\u683c\u5f0f\u4e00\u81f4) prometheus\uff1a\u6587\u672c\u683c\u5f0f\uff0cKey\u548cValue\u7528\u7a7a\u683c\u5206\u5f00protobuf\uff1a\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0c\u6682\u65f6\u4e0d\u652f\u6301"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"kvar_dump_interval"}),(0,t.jsx)(n.td,{children:"10"}),(0,t.jsx)(n.td,{children:"Seconds between consecutive dump"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"mkvar_dump_prefix"}),(0,t.jsx)(n.td,{children:"<app>"}),(0,t.jsx)(n.td,{children:"Every dumped name starts with this prefix"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"kvar_max_dump_multi_dimension_metric_number"}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"\u6700\u591a\u5bfc\u51fa\u7684mkvar\u7684kvar\u4e2a\u6570\uff0c\u9ed8\u8ba4\u662f0\uff0c\u5373\u4e0d\u5bfc\u51fa\u4efb\u4f55mkvar"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"\u7528\u6237\u53ef\u5728\u7a0b\u5e8f\u542f\u52a8\u524d\u52a0\u4e0a\u5bf9\u5e94\u7684gflags\u3002"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u5f53mkvar_dump=true\u5e76\u4e14mkvar_dump_file\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u542f\u52a8\u4e00\u4e2a\u540e\u53f0\u5bfc\u51fa\u7ebf\u7a0b\u4ee5kvar_dump_interval\u6307\u5b9a\u7684\u95f4\u9694\u66f4\u65b0mkvar_dump_file\uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u7684\u591a\u7ef4\u7edf\u8ba1\u9879mkvar\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u6bd4\u5982\u6211\u4eec\u628a\u6240\u6709\u7684gflags\u4fee\u6539\u4e3a\u4e0b\u8868\uff1a"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"\u540d\u79f0"}),(0,t.jsx)(n.th,{children:"\u9ed8\u8ba4\u503c"}),(0,t.jsx)(n.th,{children:"\u63cf\u8ff0"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"mkvar_dump"}),(0,t.jsx)(n.td,{children:"true"}),(0,t.jsx)(n.td,{children:"Create a background thread dumping(shares the same thread as kvar_dump) all mkvar periodically, all kvar_dump_* flags are not effective when this flag is off"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"mkvar_dump_file"}),(0,t.jsx)(n.td,{children:"monitor/mkvar.<app>.data"}),(0,t.jsx)(n.td,{children:"Dump mkvar into this file"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"mkvar_dump_format"}),(0,t.jsx)(n.td,{children:"common"}),(0,t.jsx)(n.td,{children:"Dump mkvar write format common\uff1a\u6587\u672c\u683c\u5f0f\uff0cKey\u548cValue\u7528\u5192\u53f7\u5206\u5272(\u548c\u76ee\u524d\u7684\u5355\u7ef4\u5ea6dump\u6587\u4ef6\u683c\u5f0f\u4e00\u81f4)  prometheus\uff1a\u6587\u672c\u683c\u5f0f\uff0cKey\u548cValue\u7528\u7a7a\u683c\u5206\u5f00protobuf\uff1a\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0c\u6682\u65f6\u4e0d\u652f\u6301"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"kvar_dump_interval"}),(0,t.jsx)(n.td,{children:"10"}),(0,t.jsx)(n.td,{children:"Seconds between consecutive dump"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"mkvar_dump_prefix"}),(0,t.jsx)(n.td,{children:"mkvar"}),(0,t.jsx)(n.td,{children:"Every dumped name starts with this prefix"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"kvar_max_dump_multi_dimension_metric_number"}),(0,t.jsx)(n.td,{children:"2000"}),(0,t.jsx)(n.td,{children:"\u6700\u591a\u5bfc\u51fa\u7684mkvar\u7684kvar\u4e2a\u6570\uff0c\u9ed8\u8ba4\u662f0\uff0c\u5373\u4e0d\u5bfc\u51fa\u4efb\u4f55mkvar"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"\u5bfc\u51fa\u7684\u672c\u5730\u6587\u4ef6\u4e3amonitor/mkvar.<app>.data\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"mkvar_test_concurrent_write_and_read{idc=idc3,method=method6,status=status40} : 76896\nmkvar_test_concurrent_write_and_read{idc=idc5,method=method6,status=status36} : 147910\nmkvar_test_concurrent_write_and_read{idc=idc5,method=method12,status=status23} : 209270\nmkvar_test_concurrent_write_and_read{idc=idc3,method=method1,status=status6} : 116325\nmkvar_test_concurrent_write_and_read{idc=idc5,method=method10,status=status29} : 193536\nmkvar_test_concurrent_write_and_read{idc=idc5,method=method15,status=status6} : 294726\nmkvar_test_concurrent_write_and_read{idc=idc3,method=method2,status=status13} : 136676\nmkvar_test_concurrent_write_and_read{idc=idc2,method=method5,status=status49} : 43203\nmkvar_test_concurrent_write_and_read{idc=idc5,method=method10,status=status1} : 312499\nmkvar_test_concurrent_write_and_read{idc=idc1,method=method10,status=status35} : 35698\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u6ca1\u6709\u4f7f\u7528krpc\uff0c\u4ecd\u9700\u8981\u52a8\u6001\u4fee\u6539gflags\uff08\u4e00\u822c\u4e0d\u9700\u8981\uff09\uff0c\u53ef\u4ee5\u8c03\u7528google::SetCommandLineOption()\uff0c\u5982\u4e0b\u6240\u793a\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <gflags/gflags.h>\n...\nif (google::SetCommandLineOption("mkvar_dump_format", "prometheus").empty()) {\n    LOG(ERROR) << "Fail to set mkvar_dump_format";\n    return -1;\n}\nLOG(INFO) << "Successfully set mkvar_dump_format to prometheus";\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u8bf7\u52ff\u76f4\u63a5\u8bbe\u7f6e FLAGS_mkvar_dump_file / FLAGS_mkvar_dump_format / FLAGS_kvar_dump_prefix\uff0c\u5982\u679c\u6709\u9700\u6c42\u53ef\u4ee5\u8c03\u7528google::SetCommandLineOption()\u65b9\u6cd5\u8fdb\u884c\u4fee\u6539\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u4e00\u65b9\u9762\u8fd9\u4e9bgflag\u7c7b\u578b\u90fd\u662fstd::string\uff0c\u76f4\u63a5\u8986\u76d6\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\uff1b\u53e6\u4e00\u65b9\u9762\u4e0d\u4f1a\u89e6\u53d1validator\uff08\u68c0\u67e5\u6b63\u786e\u6027\u7684\u56de\u8c03\uff09\uff0c\u6240\u4ee5\u4e5f\u4e0d\u4f1a\u542f\u52a8\u540e\u53f0\u5bfc\u51fa\u7ebf\u7a0b\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"count",children:"count"}),"\n",(0,t.jsx)(n.p,{children:"\u7edf\u8ba1\u76f8\u5173\u51fd\u6570"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:"class MVariable {\npublic:\n    ...\n    // Get number of exposed mvariables\n    static size_t count_exposed();\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"count_exposed",children:"count_exposed"}),"\n",(0,t.jsx)(n.p,{children:"\u83b7\u53d6\u76ee\u524d\u5df2\u7ecf\u66dd\u5149\u7684\u591a\u7ef4\u5ea6\u7edf\u8ba1\u9879mkvar\u7684\u4e2a\u6570\uff0c\u6ce8\u610f\uff1a\u8fd9\u91cc\u662f\u591a\u7ef4\u5ea6\u7edf\u8ba1\u9879(\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf)\uff0c\u800c\u4e0d\u662f\u7ef4\u5ea6\u6570\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_count("request_count", {"idc", "method", "status"});\n\n// \u5b9a\u4e49\u53e6\u4e00\u4e2a\u5168\u5c40\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_psmi_count("psmi_count", {"product", "system", "module", "interface"});\n\nsize_t count_exposed() {\n    size_t mkvar_count_exposed = kvar::MVariable::count_exposed();\n    CHECK_EQ(2, mkvar_count_exposed);\n    return mkvar_count_exposed;\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u4f7f\u7528\u8bf4\u660e"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u4e00\u822c\u60c5\u51b5\u4e0b\u7528\u4e0d\u5230count_\u7cfb\u5217\u7edf\u8ba1\u51fd\u6570\uff0c\u5982\u679c\u6709\u7279\u6b8a\u9700\u6c42\uff0c\u4e5f\u4e0d\u5efa\u8bae\u9891\u7e41\u8c03\u7528\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"list",children:"list"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:"class MVariable {\npublic:\n    ...\n    // Put names of all exposed mkvariable into `names'\n    static size_t list_exposed(std::vector<std::string>* names);\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"list_exposed",children:"list_exposed"}),"\n",(0,t.jsx)(n.p,{children:"\u83b7\u53d6\u6240\u6709\u66dd\u5149\u7684\u591a\u7ef4\u5ea6\u7edf\u8ba1\u9879mkvar\u540d\u79f0"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_count("request_count", {"idc", "method", "status"});\n\n// \u5b9a\u4e49\u53e6\u4e00\u4e2a\u5168\u5c40\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_psmi_count("psmi_count", {"product", "system", "module", "interface"});\n\nsize_t mkvar_list_exposed(std::vector<std::string>* names) {\n    if (!names) {\n        return -1;\n    }\n\n    // clear\n    names.clear();\n    kvar::MVariable::list_exposed(names);\n    // names\uff1a[ "request_count", "psmi_count" ]\n    CHECK_EQ(2, names->size());\n    return names->size();\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h2,{id:"kvarmultidimension",children:"kvar::MultiDimension"}),"\n",(0,t.jsx)(n.p,{children:"\u591a\u7ef4\u5ea6\u7edf\u8ba1\u7684\u5b9e\u73b0\uff0c\u4e3b\u8981\u63d0\u4f9bkvar\u7684\u83b7\u53d6\u3001\u5217\u4e3e\u7b49\u529f\u80fd\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"constructor",children:"constructor"}),"\n",(0,t.jsx)(n.p,{children:"\u6709\u4e09\u4e2a\u6784\u9020\u51fd\u6570\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:"template <typename T>\nclass MultiDimension : public MVariable {\npublic:\n    // \u4e0d\u5efa\u8bae\u4f7f\u7528\n    explicit MultiDimension(const key_type& labels);\n\n    // \u63a8\u8350\u4f7f\u7528\n    MultiDimension(const base::StringPiece& name,\n                   const key_type& labels);\n    // \u63a8\u8350\u4f7f\u7528\n    MultiDimension(const base::StringPiece& prefix,\n                   const base::StringPiece& name,\n                   const key_type& labels);\n    ...\n};\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"explicit MultiDimension(const key_type& labels)"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.del,{children:"\u4e0d\u5efa\u8bae\u4f7f\u7528"})}),"\n",(0,t.jsx)(n.li,{children:"\u4e0d\u4f1a\u201c\u66dd\u5149\u201d\u591a\u7ef4\u5ea6\u7edf\u8ba1\u53d8\u91cf(mkvar)\uff0c\u5373\u6ca1\u6709\u6ce8\u518c\u5230\u4efb\u4f55\u5168\u5c40\u7ed3\u6784* \u4e2d"}),"\n",(0,t.jsx)(n.li,{children:"\u4e0d\u4f1adump\u5230\u672c\u5730\u6587\u4ef6\uff0c\u5373\u4f7f-kvar_dump=true\u3001-mkvar_dump_file\u4e0d\u4e3a\u7a7a"}),"\n",(0,t.jsx)(n.li,{children:"mkvar\u7eaf\u7cb9\u662f\u4e00\u4e2a\u66f4\u5feb\u7684\u591a\u7ef4\u5ea6\u8ba1\u6570\u5668"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"MultiDimension(const base::StringPiece& name, const key_type& labels)"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"\u63a8\u8350\u4f7f\u7528"})}),"\n",(0,t.jsx)(n.li,{children:"\u4f1a\u66dd\u5149(\u8c03\u7528MVariable::expose(name))\uff0c\u4e5f\u4f1a\u6ce8\u518c\u5230\u5168\u5c40\u7ed3\u6784\u4e2d"}),"\n",(0,t.jsx)(n.li,{children:"-kvar_dump=true\u65f6\uff0c\u4f1a\u542f\u52a8\u4e00\u4e2a\u540e\u53f0\u5bfc\u51fa\u7ebf\u7a0b\u4ee5kvar_dump_interval\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u66f4\u65b0mkvar_dump_file\u6587\u4ef6"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_count("request_count", {"idc", "method", "status"});\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"MultiDimension(const base::StringPiece& prefix, const base::StringPiece& name, const key_type& labels)"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"\u63a8\u8350\u4f7f\u7528"})}),"\n",(0,t.jsx)(n.li,{children:"\u4f1a\u66dd\u5149(\u8c03\u7528MVariable::expose_as(prefix, name))\uff0c\u4e5f\u4f1a\u6ce8\u518c\u5230\u5168\u5c40\u7ed3\u6784\u4e2d"}),"\n",(0,t.jsx)(n.li,{children:"-kvar_dump=true\u65f6\uff0c\u4f1a\u542f\u52a8\u4e00\u4e2a\u540e\u53f0\u5bfc\u51fa\u7ebf\u7a0b\u4ee5kvar_dump_interval\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u66f4\u65b0mkvar_dump_file\u6587\u4ef6"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_count("foo_bar", "request_count", {"idc", "method", "status"});\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h3,{id:"stats",children:"stats"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:"template <typename T>\nclass MultiDimension : public MVariable {\npublic:\n    ...\n\n    // Get real kvar pointer object\n    // Return real kvar pointer(Not NULL) on success, NULL otherwise.\n    T* get_stats(const std::list<std::string>& labels_value);\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"get_stats",children:"get_stats"}),"\n",(0,t.jsx)(n.p,{children:"\u6839\u636e\u6307\u5b9alabel\u83b7\u53d6\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6\u7edf\u8ba1\u9879kvar"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_count("request_count", {"idc", "method", "status"});\n\nint get_request_count(const std::list<std::string>& request_label) {\n    // \u83b7\u53d6request_label\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6kvar\u6307\u9488\uff0c\u6bd4\u5982\uff1arequest_label = {"tc", "get", "200"}\n    kvar::Adder<int> *request_adder = g_request_count.get_stats(request_label);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!request_adder) {\n        return -1;\n    }\n\n    // request_adder\u53ea\u80fd\u5728g_request_count\u7684\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *request_adder << 1;\n    return request_adder->get_value();\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u5185\u90e8\u5b9e\u73b0\u903b\u8f91"})}),"\n",(0,t.jsx)(n.p,{children:"\u5224\u65ad\u8be5label\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6\u7edf\u8ba1\u9879kvar\uff1a"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u5b58\u5728","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"return kvar"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u4e0d\u5b58\u5728","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"new kvar()"}),"\n",(0,t.jsx)(n.li,{children:"store(kvar)"}),"\n",(0,t.jsx)(n.li,{children:"return kvar"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"kvar\u7684\u751f\u547d\u5468\u671f"})}),"\n",(0,t.jsx)(n.p,{children:"label\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6\u7edf\u8ba1\u9879kvar\u5b58\u50a8\u5728\u591a\u7ef4\u5ea6\u7edf\u8ba1\u9879(mkvar)\u4e2d\uff0c\u5f53mkvar\u6790\u6784\u7684\u65f6\u5019\u4f1a\u91ca\u653e\u81ea\u8eab\u6240\u6709kvar\uff0c\u6240\u4ee5\u7528\u6237\u5fc5\u987b\u4fdd\u8bc1\u5728mkvar\u7684\u751f\u547d\u5468\u671f\u4e4b\u5185\u64cd\u4f5ckvar\uff0c\u5728mkvar\u751f\u547d\u5468\u671f\u5916\u8bbf\u95eekvar\u7684\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u6781\u6709\u53ef\u80fd\u51facore\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"count-1",children:"count"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:"class MVariable {\npublic:\n    ...\n\n    // Get number of mvariable labels\n    size_t count_labels() const;\n};\n\ntemplate <typename T>\nclass MultiDimension : public MVariable {\npublic:\n    ...\n\n    // Get number of stats\n    size_t count_stats();\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"count_labels",children:"count_labels"}),"\n",(0,t.jsxs)(n.p,{children:["\u83b7\u53d6\u591a\u7ef4\u5ea6\u7edf\u8ba1\u9879\u7684labels\u4e2a\u6570\uff0c\u7528\u6237\u5728\u521b\u5efa\u591a\u7ef4\u5ea6(kvar::MultiDimension)\u7edf\u8ba1\u9879\u7684\u65f6\u5019\uff0c\u9700\u8981\u63d0\u4f9b\u7c7b\u578b\u4e3a",(0,t.jsx)(n.code,{children:"std::list<std::string>"}),"\u7684labels\u53d8\u91cf\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86count_labels\u51fd\u6570\uff0c\u8fd4\u56delabels\u7684\u957f\u5ea6\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'\n#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_count("request_count", {"idc", "method", "status"});\n\nsize_t count_labels() {\n    size_t mkvar_count_labels = g_request_count.count_labels();\n    CHECK_EQ(3, mkvar_count_labels);\n    return mkvar_count_labels;\n}\n} // namespace bar\n} // namespace foo\n\n'})}),"\n",(0,t.jsx)(n.h4,{id:"count_stats",children:"count_stats"}),"\n",(0,t.jsx)(n.p,{children:"\u83b7\u53d6\u591a\u7ef4\u5ea6(kvar::MultiDimension)\u7edf\u8ba1\u9879\u7684\u7ef4\u5ea6(stats)\u6570"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_count("request_count", {"idc", "method", "status"});\n\nsize_t count_stats() {\n    // \u83b7\u53d6request1\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest1_labels = {"tc", "get", "200"}\n    kvar::Adder<int> *request1_adder = g_request_count.get_stats(request1_labels);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!request1_adder) {\n        return -1;\n    }\n    // request1_adder\u53ea\u80fd\u5728g_request_count\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *request1_adder << 1;\n\n    // \u83b7\u53d6request2\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest2_labels = {"nj", "get", "200"}\n    kvar::Adder<int> *request2_adder = g_request_count.get_stats(request2_labels);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!request2_adder) {\n        return -1;\n    }\n    // request2_adder\u53ea\u80fd\u5728g_request_count\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *request2_adder << 1;\n\n\n    size_t mkvar_count_stats = g_request_count.count_stats();\n    CHECK_EQ(2, mkvar_count_stats);\n    return mkvar_count_stats;\n}\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h3,{id:"list-1",children:"list"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:"template <typename T>\nclass MultiDimension : public MVariable {\npublic:\n    ...\n    // Put all stats labels into `names'\n    void list_stats(std::vector<std::list<std::string> >* names);\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"list_stats",children:"list_stats"}),"\n",(0,t.jsx)(n.p,{children:"\u83b7\u53d6\u4e00\u4e2a\u591a\u7ef4\u5ea6\u7edf\u8ba1\u9879\u4e0b\u6240\u6709labels\u7ec4\u5408\u5217\u8868"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_count("request_count", {"idc", "method", "status"});\n\nsize_t list_stats(std::vector<std::list<std::string> > *stats_names) {\n    if (!stats_names) {\n        return -1;\n    }\n\n    // clear\n    stats_names.clear();\n\n    // \u83b7\u53d6request1\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest1_labels = {"tc", "get", "200"}\n    kvar::Adder<int> *request1_adder = g_request_count.get_stats(request1_labels);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!request1_adder) {\n        return -1;\n    }\n\n    // \u83b7\u53d6request2\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest2_labels = {"nj", "get", "200"}\n    kvar::Adder<int> *request2_adder = g_request_count.get_stats(request2_labels);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!request2_adder) {\n        return -1;\n    }\n\n    g_request_count.list_stats(stats_names);\n    // labels_names\uff1a\n    // [\n    //      {"tc", "get", "200"},\n    //      {"nj", "get", "200"}\n    // ]\n\n    CHECK_EQ(2, stats_names.size());\n    return stats_names.size();\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u4f7f\u7528\u8bf4\u660e"})}),"\n",(0,t.jsx)(n.p,{children:"\u4e00\u822c\u60c5\u51b5\u4e0b\u7528\u6237\u4e0d\u9700\u8981\u83b7\u53d6labels\u7ec4\u5408\u5217\u8868\uff0c\u5982\u679c\u6709\u7279\u6b8a\u9700\u6c42\uff0c\u4e5f\u4e0d\u5efa\u8bae\u9891\u7e41\u8c03\u7528\uff0c\u5426\u5219\u53ef\u80fd\u5f71\u54cdget_stats\u7684\u5199\u5165\u6027\u80fd\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"template",children:"template"}),"\n",(0,t.jsx)(n.h4,{id:"kvaradder",children:"kvar::Adder"}),"\n",(0,t.jsx)(n.p,{children:"\u987e\u540d\u601d\u4e49\uff0c\u7528\u4e8e\u7d2f\u52a0"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Adder<int> > g_request_cost("request_count", {"idc", "method", "status"});\n\nint request_cost_total(const std::list<std::string>& request_labels) {\n    // \u83b7\u53d6request\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest_labels = {"tc", "get", "200"}\n    kvar::Adder<int>* cost_add = g_request_cost.get_stats(request_labels);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!cost_add) {\n        return -1;\n    }\n    // cost_add\u53ea\u80fd\u5728g_request_cost\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *cost_add << 1 << 2 << 3 << 4;\n    CHECK_EQ(10, cost_add->get_value());\n    return cost_add->get_value();\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h4,{id:"kvarmaxer",children:"kvar::Maxer"}),"\n",(0,t.jsx)(n.p,{children:"\u7528\u4e8e\u53d6\u6700\u5927\u503c\uff0c\u8fd0\u7b97\u7b26\u4e3astd::max"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Maxer<int> > g_request_cost("request_cost", {"idc", "method", "status"});\n\nint request_cost_max(const std::list<std::string>& request_labels) {\n    // \u83b7\u53d6request\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest_labels = {"tc", "get", "200"}\n    kvar::Maxer<int>* cost_max = g_request_cost.get_stats(request_labels);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!cost_max) {\n        return -1;\n    }\n\n    // cost_max\u53ea\u80fd\u5728g_request_cost\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *cost_max << 1 << 2 << 3 << 4;\n    CHECK_EQ(4, cost_max->get_value());\n    return cost_max->get_value();\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h4,{id:"kvarminer",children:"kvar::Miner"}),"\n",(0,t.jsx)(n.p,{children:"\u7528\u4e8e\u53d6\u6700\u5c0f\u503c\uff0c\u8fd0\u7b97\u7b26\u4e3astd::min"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Miner<int> > g_request_cost("request_cost", {"idc", "method", "status"});\n\nint request_cost_min(const std::list<std::string>& request_labels) {\n    // \u83b7\u53d6request\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest_labels = {"tc", "get", "200"}\n    kvar::Miner<int>* cost_min = g_request_cost.get_stats(request_labels);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!cost_min) {\n        return -1;\n    }\n\n    // cost_min\u53ea\u80fd\u5728g_request_cost\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *cost_min << 1 << 2 << 3 << 4;\n    CHECK_EQ(1, cost_min->get_value());\n    return cost_min->get_value();\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h4,{id:"kvarintrecorder",children:"kvar::IntRecorder"}),"\n",(0,t.jsx)(n.p,{children:"\u7528\u4e8e\u8ba1\u7b97\u5e73\u5747\u503c\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::IntRecorder> g_request_cost("request_cost", {"idc", "method", "status"});\n\nint request_cost_avg(const std::list<std::string>& request_labels) {\n    // \u83b7\u53d6request\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest_labels = {"tc", "get", "200"}\n    kvar::IntRecorder* cost_avg = g_request_cost.get_stats(request_labels);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!cost_avg) {\n        return -1;\n    }\n\n    // cost_avg\u53ea\u80fd\u5728g_request_cost\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *cost_avg << 1 << 3 << 5;\n    CHECK_EQ(3, cost_avg->get_value());\n    return cost_avg->get_value();\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h4,{id:"kvarlatencyrecorder",children:"kvar::LatencyRecorder"}),"\n",(0,t.jsx)(n.p,{children:"\u4e13\u7528\u4e8e\u8ba1\u7b97latency\u548cqps\u7684\u8ba1\u6570\u5668\u3002\u53ea\u9700\u586b\u5165latency\u6570\u636e\uff0c\u5c31\u80fd\u83b7\u53d6latency / max_latency / qps / count\uff0c\u7edf\u8ba1\u7a97\u53e3\u662fkvar_dump_interval\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::LatencyRecorder> g_request_cost("request_cost", {"idc", "method", "status"});\n\nvoid request_cost_latency(const std::list<std::string>& request_labels) {\n    // \u83b7\u53d6request\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest_labels = {"tc", "get", "200"}\n    kvar::LatencyRecorder* cost_latency = g_request_cost.get_stats(request_labels);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!cost_latency) {\n        return -1;\n    }\n\n    // cost_latency\u53ea\u80fd\u5728g_request_cost\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *cost_latency << 1 << 2 << 3 << 4 << 5 << 6 << 7;\n\n    // \u83b7\u53d6latency\n    int64_t request_cost_latency = cost_latency->latency();\n    // \u83b7\u53d6max_latency\n    int64_t request_cost_max_latency = cost_latency->max_latency();\n    // \u83b7\u53d6qps\n    int64_t request_cost_qps = cost_latency->qps();\n    // \u83b7\u53d6count\n    int64_t request_cost_count = cost_latency->count();\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h4,{id:"kvarstatus",children:"kvar::Status"}),"\n",(0,t.jsx)(n.p,{children:"\u8bb0\u5f55\u548c\u663e\u793a\u4e00\u4e2a\u503c\uff0c\u62e5\u6709\u989d\u5916\u7684set_value\u51fd\u6570\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::Status<int> > g_request_cost("request_cost", {"idc", "method", "status"});\n\nvoid request_cost(const std::list<std::string>& request_labels) {\n    // \u83b7\u53d6request\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest_labels = {"tc", "get", "200"}\n    kvar::Status<int>* cost_status = g_request_cost.get_stats(request_labels);\n    // \u5224\u65ad\u6307\u9488\u975e\u7a7a\n    if (!cost_status) {\n        return -1;\n    }\n\n    // cost_status\u53ea\u80fd\u5728g_request_cost\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    cost_status->set_value(5);\n    CHECK_EQ(5, cost_status->get_value());\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h4,{id:"kvarwindowex",children:"kvar::WindowEx"}),"\n",(0,t.jsx)(n.p,{children:"\u83b7\u5f97\u4e4b\u524d\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u7edf\u8ba1\u503c\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/window.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::WindowEx<kvar::Adder<int>, 60>> sum_minute("sum_minute", {"idc", "method", "status"});\n\nvoid Record(const std::list<std::string>& request_labels, int num) {\n    // \u83b7\u53d6request\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest_labels = {"tc", "get", "200"}\n    kvar::WindowEx<kvar::Adder<int>, 60>* status = sum_minute.get_stats(request_labels);\n    // status\u53ea\u80fd\u5728sum_minute\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *status << num;\n}\n\n} // namespace bar\n} // namespace foo\n'})}),"\n",(0,t.jsx)(n.h4,{id:"kvarpersecondex",children:"kvar::PerSecondEx"}),"\n",(0,t.jsx)(n.p,{children:"\u83b7\u5f97\u4e4b\u524d\u4e00\u6bb5\u65f6\u95f4\u5185\u5e73\u5747\u6bcf\u79d2\u7684\u7edf\u8ba1\u503c\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c++",children:'#include <kvar/kvar.h>\n#include <kvar/window.h>\n#include <kvar/multi_dimension.h>\n\nnamespace foo {\nnamespace bar {\n// \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u7684\u591a\u7ef4\u5ea6mkvar\u53d8\u91cf\nkvar::MultiDimension<kvar::PerSecondEx<kvar::Adder<int>>> sum_per_second("sum_per_second", {"idc", "method", "status"});\n\nvoid Record(const std::list<std::string>& request_labels, int num) {\n    // \u83b7\u53d6request\u5bf9\u5e94\u7684\u5355\u7ef4\u5ea6mkvar\u6307\u9488\uff0c\u5047\u8bberequest_labels = {"tc", "get", "200"}\n    kvar::PerSecondEx<kvar::Adder<int>>* status = sum_per_second.get_stats(request_labels);\n    // status\u53ea\u80fd\u5728sum_per_second\u751f\u547d\u5468\u671f\u5185\u8bbf\u95ee\uff0c\u5426\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\uff0c\u53ef\u80fd\u4f1a\u51facore\n    *status << num;\n}\n\n} // namespace bar\n} // namespace foo\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(96540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);