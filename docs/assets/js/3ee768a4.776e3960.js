"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[11490],{87967:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var t=s(74848),i=s(28453);const a={date:"01/10/2024"},o="\u547d\u4ee4\uff1a kmpkg help",r={id:"kmpkg/commands/help",title:"\u547d\u4ee4\uff1a kmpkg help",description:"kmpkg \u5e2e\u52a9\u547d\u4ee4\u7684\u53c2\u8003\u3002\u63d0\u4f9b kmpkg \u547d\u4ee4\u7684\u8be6\u7ec6\u4fe1\u606f\u548c\u5e2e\u52a9\u4e3b\u9898\u3002",source:"@site/docs/kmpkg/commands/help.mdx",sourceDirName:"kmpkg/commands",slug:"/kmpkg/commands/help",permalink:"/docs/next/kmpkg/commands/help",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{date:"01/10/2024"},sidebar:"docs",previous:{title:"\u547d\u4ee4\uff1a kmpkg hash",permalink:"/docs/next/kmpkg/commands/hash"},next:{title:"\u547d\u4ee4\uff1a kmpkg install",permalink:"/docs/next/kmpkg/commands/install"}},l={},c=[{value:"\u6458\u8981",id:"\u6458\u8981",level:2},{value:"\u8bf4\u660e",id:"\u8bf4\u660e",level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2},{value:"\u9009\u9879",id:"\u9009\u9879",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\u547d\u4ee4-kmpkg-help",children:"\u547d\u4ee4\uff1a kmpkg help"})}),"\n",(0,t.jsx)(n.p,{children:"kmpkg \u5e2e\u52a9\u547d\u4ee4\u7684\u53c2\u8003\u3002\u63d0\u4f9b kmpkg \u547d\u4ee4\u7684\u8be6\u7ec6\u4fe1\u606f\u548c\u5e2e\u52a9\u4e3b\u9898\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u6458\u8981",children:"\u6458\u8981"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"kmpkg help [topic]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u8bf4\u660e",children:"\u8bf4\u660e"}),"\n",(0,t.jsx)(n.p,{children:"help \u547d\u4ee4\u663e\u793a\u6709\u5173\u7ec8\u7aef\u4e0a\u5404\u79cd kmpkg \u547d\u4ee4\u548c\u4e3b\u9898\u7684\u4fe1\u606f\u3002 \u53ef\u4ee5\u6307\u5b9a\u7279\u5b9a\u4e3b\u9898\u6765\u83b7\u53d6\u76f8\u5173\u4fe1\u606f\uff0c\u6216\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u4f7f\u7528\u8be5\u547d\u4ee4\u4ee5\u67e5\u770b\u6240\u6709\u53ef\u7528\u547d\u4ee4\u5217\u8868\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u793a\u4f8b",children:"\u793a\u4f8b"}),"\n",(0,t.jsx)(n.p,{children:"\u6709\u5173\u6240\u6709\u547d\u4ee4\u7684\u5217\u8868\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-Console",children:"> kmpkg help\n\nusage: kmpkg <command> [--switches] [--options=values] [arguments] @response_file\n  @response_file         Contains one argument per line expanded at that location\n\nPackage Installation:\n  export                 Creates a standalone deployment of installed ports\n  install                Installs a package\n  remove                 Uninstalls a package\n  x-set-installed        Installs, upgrades, or removes packages such that that installed matches\n                         exactly those supplied\n  upgrade                Rebuilds all outdated packages\n\nPackage Discovery:\n  x-check-support        Tests whether a port is supported without building it\n  depend-info            Displays a list of dependencies for ports\n  list                   Lists installed libraries\n  owns                   Searches for the owner of a file in installed packages\n  x-package-info         Display detailed information on packages\n  portsdiff              Diffs changes in port versions between commits\n  search                 Searches for packages available to be built\n  update                 Lists packages that can be upgraded\n\nPackage Manipulation:\n  add                    Adds dependency to manifest\n  x-add-version          Adds a version to the version database\n  create                 Creates a new port\n  edit                   Edits a port, optionally with %EDITOR%, defaults to \"code\"\n  env                    Creates a clean shell environment for development or compiling\n  format-manifest        Prettyfies kmpkg.json\n  hash                   Gets a file's SHA256 or SHA512\n  x-init-registry        Creates a blank git registry\n  new                    Creates a new manifest\n  x-update-baseline      Updates baselines of git registries in a manifest to those registries' HEAD\n                         commit\n\nOther:\n  ci                     Tries building all ports for CI testing\n  x-ci-verify-versions   Checks integrity of the version database\n  contact                Displays contact information to send feedback\n  fetch                  Fetches something from the system or the internet\n  integrate              Integrates kmpkg with machines, projects, or shells\n\nFor More Help:\n  help topics            Displays full list of help topics\n  help <topic>           Displays specific help topic\n  help commands          Displays full list of commands, including rare ones not listed here\n  help <command>         Displays help detail for <command>\n\nFor more help (including examples) see https://learn.microsoft.com/kmpkg\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u6709\u5173\u7279\u5b9a\u547d\u4ee4\u7684\u5e2e\u52a9\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-Console",children:"> kmpkg help add\n\nSynopsis: Adds dependency to manifest\nExamples:\n  kmpkg add port <port name>\n  kmpkg add port png\n  kmpkg add artifact <artifact name>\n  kmpkg add artifact cmake\nOptions:\n  --x-asset-sources=...  Asset caching sources. See 'kmpkg help assetcaching'\n  --binarysource=...     Binary caching sources. See 'kmpkg help binarycaching'\n  --x-buildtrees-root=...\n                         Buildtrees directory (experimental)\n  --downloads-root=...   Downloads directory (default: %KMPKG_DOWNLOADS%)\n  --host-triplet=...     Host triplet. See 'kmpkg help triplet' (default:\n                         %KMPKG_DEFAULT_HOST_TRIPLET%)\n  --x-install-root=...   Installed directory (experimental)\n  --overlay-ports=...    Directories of overlay ports (also: %KMPKG_OVERLAY_PORTS%)\n  --overlay-triplets=... Directories of overlay triplets (also: %KMPKG_OVERLAY_TRIPLETS%)\n  --x-packages-root=...  Packages directory (experimental)\n  --triplet=...          Target triplet. See 'kmpkg help triplet' (default: %KMPKG_DEFAULT_TRIPLET%)\n  --kmpkg-root=...       The kmpkg root directory (default: %KMPKG_ROOT%)\n  --version=...          A version or version range to match; only valid for artifacts\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u6709\u5173\u7279\u5b9a\u4e3b\u9898\u7684\u5e2e\u52a9\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-Console",children:'> kmpkg help versioning\n\nVersioning allows you to deterministically control the precise revisions of dependencies used by\nyour project from within your manifest file.\n\nThe following versioning schemes are accepted.:\n  version                A dot-separated sequence of numbers (1.2.3.4)\n  version-date           A date (2021-01-01.5)\n  version-semver         A Semantic Version 2.0 (2.1.0-rc2)\n  version-string         An exact, incomparable version (Vista)\n\nEach version additionally has a "port-version" which is a nonnegative integer. When rendered as\ntext, the port version (if nonzero) is added as a suffix to the primary version text separated by a\nhash (#). Port-versions are sorted lexicographically after the primary version text, for example:\n1.0.0 < 1.0.0#1 < 1.0.1 < 1.0.1#5 < 2.0.0\n\nManifests can place three kinds of constraints upon the versions used:\n  builtin-baseline       The baseline references a commit within the kmpkg repository that\n                         establishes a minimum version on every dependency in the graph. For\n                         example, if no other constraints are specified (directly or transitively),\n                         then the version will resolve to the baseline of the top level manifest.\n                         Baselines of transitive dependencies are ignored.\n\n  version>=              Within the "dependencies" field, each dependency can have a minimum\n                         constraint listed. These minimum constraints will be used when transitively\n                         depending upon this library. A minimum port-version can additionally be\n                         specified with a \'#\' suffix.\n\n  overrides              When used as the top-level manifest (such as when running `kmpkg install`\n                         in the directory), overrides allow a manifest to short-circuit dependency\n                         resolution and specify exactly the version to use. These can be used to\n                         handle version conflicts, such as with `version-string` dependencies. They\n                         will not be considered when transitively depended upon.\n\nKmpkg will select the minimum version found that matches all applicable constraints, including the\nversion from the baseline specified at top-level as well as any "version>=" constraints in the\ngraph.\nThe best approach to keep your libraries up to date is to update your baseline reference. This will\nensure all packages, including transitive ones, are updated. However if you need to update a package\nindependently, you can use a "version>=" constraint.\nAdditionally, package publishers can use "version>=" constraints to ensure that consumers are using\nat least a certain minimum version of a given dependency. For example, if a library needs an API\nadded to boost-asio in 1.70, a "version>=" constraint will ensure transitive users use a sufficient\nversion even in the face of individual version overrides or cross-registry references.\nExample manifest:\n{\n    "builtin-baseline": "a14a6bcb27287e3ec138dba1b948a0cdbc337a3a",\n    "dependencies": [\n        { "name": "zlib", "version>=": "1.2.11#8" },\n        "rapidjson"\n    ],\n    "overrides": [\n        { "name": "rapidjson", "version": "2020-09-14" }\n    ]\n}\nExtended documentation available at \'https://learn.microsoft.com/kmpkg/users/versioning\'.\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u9009\u9879",children:"\u9009\u9879"}),"\n",(0,t.jsxs)(n.p,{children:["\u6240\u6709 kmpkg \u547d\u4ee4\u90fd\u652f\u6301\u4e00\u7ec4",(0,t.jsx)(n.a,{href:"/docs/next/kmpkg/commands/common-options",children:"\u901a\u7528\u9009\u9879"}),"\u3002"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(96540);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);