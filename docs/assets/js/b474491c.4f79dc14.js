"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[55961],{21806:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>R,contentTitle:()=>C,default:()=>_,frontMatter:()=>N,metadata:()=>S,toc:()=>B});var l,n,r,s,c,i,d,h,o,m,p,f,x,u,b,v,k,j,g,y,E=t(74848),z=t(28453),M=t(96540);function w(){return w=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var l in t)({}).hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e},w.apply(null,arguments)}const A=e=>{let{title:a,titleId:t,...E}=e;return M.createElement("svg",w({xmlns:"http://www.w3.org/2000/svg",width:600,height:400,"aria-labelledby":t},E),a?M.createElement("title",{id:t},a):null,l||(l=M.createElement("rect",{width:"100%",height:"100%",fill:"#fff"})),M.createElement("text",{x:20,y:40,style:{fontSize:24}},"Alkaid Table versus Record Batch"),n||(n=M.createElement("path",{fill:"#ddd",d:"M20 60h250v260H20z"})),r||(r=M.createElement("text",{x:10,y:20,className:"label",transform:"translate(20 60)"},"Alkaid Table")),s||(s=M.createElement("path",{fill:"green",d:"M30 85h230v60H30z"})),c||(c=M.createElement("text",{x:15,y:45,className:"label light",transform:"translate(20 60)"},"Schema")),i||(i=M.createElement("path",{fill:"#00f",d:"M35 110h65v30H35zM110 110h70v30h-70zM190 110h65v30h-65z"})),d||(d=M.createElement("text",{x:25,y:20,className:"label light",transform:"translate(20 110)"},"Field")),h||(h=M.createElement("path",{fill:"orange",d:"M30 155h70v155H30zM110 155h70v155h-70zM190 155h70v155h-70z"})),o||(o=M.createElement("text",{x:15,y:15,className:"label",transform:"translate(20 155)"},M.createElement("tspan",null,"Chunked"),M.createElement("tspan",{x:15,dy:15},"Array"))),m||(m=M.createElement("path",{fill:"#555",d:"M35 190h60v80H35zM35 275h60v30H35zM115 190h60v115h-60zM195 190h60v35h-60zM195 230h60v35h-60zM195 270h60v35h-60z"})),p||(p=M.createElement("text",{x:20,y:20,className:"label light",transform:"translate(20 190)"},"Array")),M.createElement("text",{x:20,y:350,className:"caption"},"A ",M.createElement("tspan",{style:{fontWeight:700}},"Table")," is a C++ data structure,\n    allowing for a mixed chunking structure and very large arrays."),f||(f=M.createElement("path",{fill:"#ddd",d:"M320 60h250v260H320z"})),x||(x=M.createElement("text",{x:10,y:20,className:"label",transform:"translate(320 60)"},"Alkaid Record Batch")),u||(u=M.createElement("path",{fill:"green",d:"M330 85h230v60H330z"})),b||(b=M.createElement("text",{x:15,y:45,className:"label light",transform:"translate(320 60)"},"Schema")),v||(v=M.createElement("path",{fill:"#00f",d:"M335 110h65v30h-65zM410 110h70v30h-70zM490 110h65v30h-65z"})),k||(k=M.createElement("text",{x:25,y:20,className:"label light",transform:"translate(320 110)"},"Field")),j||(j=M.createElement("path",{fill:"#555",d:"M330 155h70v155h-70zM410 155h70v155h-70zM490 155h70v155h-70z"})),g||(g=M.createElement("text",{x:20,y:20,className:"label light",transform:"translate(320 155)"},"Array")),M.createElement("text",{x:20,y:370,className:"caption"},M.createElement("tspan",null,"A ",M.createElement("tspan",{style:{fontWeight:700}},"Record Batch")," is a common Alkaid data structure which is recognized by all implementations.")),y||(y=M.createElement("style",null,"text{font-family:apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,Liberation Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.label{font-size:12px;font-weight:700;fill:#333}.light{fill:#ddd}.caption{font-size:12px}")))},N={},C="\u8868\u683c\u6570\u636e",S={id:"cpp/alkaid/tables",title:"\u8868\u683c\u6570\u636e",description:"\u8868\u683c\u6570\u636e\uff08Tabular Data\uff09",source:"@site/versioned_docs/version-1.1.1/cpp/alkaid/tables.mdx",sourceDirName:"cpp/alkaid",slug:"/cpp/alkaid/tables",permalink:"/docs/cpp/alkaid/tables",draft:!1,unlisted:!1,tags:[],version:"1.1.1",frontMatter:{},sidebar:"docs",previous:{title:"\u6570\u636e\u7c7b\u578b",permalink:"/docs/cpp/alkaid/datatypes"},next:{title:"\u8f93\u5165/\u8f93\u51fa\u548c\u6587\u4ef6\u7cfb\u7edf",permalink:"/docs/cpp/alkaid/io"}},R={},B=[{value:"Fields",id:"fields",level:2},{value:"Schemas",id:"schemas",level:2},{value:"Tables",id:"tables",level:2},{value:"Record Batches",id:"record-batches",level:2}];function T(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,z.R)(),...e.components};return(0,E.jsxs)(E.Fragment,{children:[(0,E.jsx)(a.header,{children:(0,E.jsx)(a.h1,{id:"\u8868\u683c\u6570\u636e",children:"\u8868\u683c\u6570\u636e"})}),"\n",(0,E.jsx)(a.p,{children:"\u8868\u683c\u6570\u636e\uff08Tabular Data\uff09"}),"\n",(0,E.jsxs)(a.p,{children:[(0,E.jsx)(a.code,{children:"\u8868\u548c RecordBatch API \u53c2\u8003 <alkaid/core/table.h>"}),"."]}),"\n",(0,E.jsx)(a.p,{children:"\u867d\u7136\u6570\u7ec4\u548c\u5206\u5757\u6570\u7ec4\u8868\u793a\u4e00\u7ef4\u7684\u540c\u7c7b\u503c\u5e8f\u5217\uff0c\u4f46\u6570\u636e\u901a\u5e38\u4ee5\u4e8c\u7ef4\u5f02\u6784\u6570\u636e\u96c6\u7684\u5f62\u5f0f\u51fa\u73b0\uff08\u4f8b\u5982\u6570\u636e\u5e93\u8868\u3001CSV \u6587\u4ef6\u2026\u2026\uff09\u3002Alkaid \u63d0\u4f9b\u4e86\u51e0\u79cd\u62bd\u8c61\u6765\u65b9\u4fbf\u9ad8\u6548\u5730\u5904\u7406\u6b64\u7c7b\u6570\u636e\u3002"}),"\n",(0,E.jsx)(a.h2,{id:"fields",children:"Fields"}),"\n",(0,E.jsxs)(a.p,{children:["\u5b57\u6bb5\u7528\u4e8e\u8868\u793a\u8868\u7684\u7279\u5b9a\u5217\uff08\u4ee5\u53ca\u5d4c\u5957\u6570\u636e\u7c7b\u578b\uff08\u5982 ",(0,E.jsx)(a.code,{children:"alkaid::StructType"}),"\uff09\u7684\u7279\u5b9a\u6210\u5458\uff09\u3002\u5b57\u6bb5\uff0c\u5373 ",(0,E.jsx)(a.code,{children:"alkaid::Field"})," \u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5c06\u6570\u636e\u7c7b\u578b\u3001\u5b57\u6bb5\u540d\u79f0\u548c\u4e00\u4e9b\u53ef\u9009\u5143\u6570\u636e\u7ed3\u5408\u5728\u4e00\u8d77\u3002"]}),"\n",(0,E.jsxs)(a.p,{children:["\u521b\u5efa\u5b57\u6bb5\u7684\u63a8\u8350\u65b9\u6cd5\u662f\u8c03\u7528 ",(0,E.jsx)(a.code,{children:"alkaid::field"}),"\u5de5\u5382\u51fd\u6570\u3002"]}),"\n",(0,E.jsx)(a.h2,{id:"schemas",children:"Schemas"}),"\n",(0,E.jsxs)(a.p,{children:["\u6a21\u5f0f\u63cf\u8ff0\u4e86\u4e8c\u7ef4\u6570\u636e\u96c6\uff08\u4f8b\u5982\u8868\uff09\u7684\u6574\u4f53\u7ed3\u6784\u3002\u5b83\u5305\u542b\u4e00\u7cfb\u5217\u5b57\u6bb5\u4ee5\u53ca\u4e00\u4e9b\u53ef\u9009\u7684\u6a21\u5f0f\u8303\u56f4\u5143\u6570\u636e\uff08\u9664\u4e86\u6bcf\u4e2a\u5b57\u6bb5\u7684\u5143\u6570\u636e\uff09\u3002\u521b\u5efa\u6a21\u5f0f\u7684\u63a8\u8350\u65b9\u6cd5\u662f\u8c03\u7528 ",(0,E.jsx)(a.code,{children:"alkaid::schema"})," \u5de5\u5382\u51fd\u6570\u91cd\u8f7d\u4e4b\u4e00\uff1a"]}),"\n",(0,E.jsx)(a.pre,{children:(0,E.jsx)(a.code,{className:"language-cpp",children:'    // Create a schema describing datasets with two columns:\n    // a int32 column "A" and a utf8-encoded string column "B"\n    std::shared_ptr<alkaid::Field> field_a, field_b;\n    std::shared_ptr<alkaid::Schema> schema;\n\n    field_a = alkaid::field("A", alkaid::int32());\n    field_b = alkaid::field("B", alkaid::utf8());\n    schema = alkaid::schema({field_a, field_b});\n'})}),"\n",(0,E.jsx)(a.h2,{id:"tables",children:"Tables"}),"\n",(0,E.jsxs)(a.p,{children:[(0,E.jsx)(a.code,{children:"alkaid::Table"})," \u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u5217\u7684\u5206\u5757\u6570\u7ec4\uff0c\u4ee5\u53ca\u63d0\u4f9b\u5b57\u6bb5\u540d\u79f0\u7684\u67b6\u6784\u3002\u6b64\u5916\uff0c\u6bcf\u4e2a\u5206\u5757\u5217\u7684\u5143\u7d20\u6570\u91cf\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u903b\u8f91\u957f\u5ea6\uff08\u5c3d\u7ba1\u6bcf\u5217\u53ef\u4ee5\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5206\u5757\uff09\u3002"]}),"\n",(0,E.jsx)(a.h2,{id:"record-batches",children:"Record Batches"}),"\n",(0,E.jsxs)(a.p,{children:[(0,E.jsx)(a.code,{children:"alkaid::RecordBatch"})," \u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u636e\u96c6\uff0c\u5305\u542b\u591a\u4e2a\n\u8fde\u7eed\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u76f8\u540c\u3002\u4e0e\u8868\u4e00\u6837\uff0c\u8bb0\u5f55\u6279\u6b21\n\u4e5f\u6709\u4e00\u4e2a\u5fc5\u987b\u4e0e\u5176\u6570\u7ec4\u7684\u6570\u636e\u7c7b\u578b\u5339\u914d\u7684\u67b6\u6784\u3002"]}),"\n",(0,E.jsx)(a.p,{children:"\u8bb0\u5f55\u6279\u6b21\u662f\u5404\u79cd\u5e8f\u5217\u5316\u548c\u8ba1\u7b97\u51fd\u6570\uff08\u53ef\u80fd\u662f\u589e\u91cf\u7684\uff09\u7684\u4fbf\u6377\u5de5\u4f5c\u5355\u5143\u3002"}),"\n","\n",(0,E.jsx)(A,{}),"\n",(0,E.jsxs)(a.p,{children:["\u8bb0\u5f55\u6279\u6b21\u53ef\u4ee5\u5728\u5b9e\u73b0\u4e4b\u95f4\u53d1\u9001\uff0c\u4f8b\u5982\u901a\u8fc7",(0,E.jsx)(a.a,{href:"/docs/cpp/alkaid/format#format-ipc",children:(0,E.jsx)(a.code,{children:"IPC format-ipc"})})," \u6216\u901a\u8fc7",(0,E.jsx)(a.code,{children:"C \u6570\u636e\u63a5\u53e3 <../format/CDataInterface>"}),"\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u8868\u548c\u5206\u5757\u6570\u7ec4\u662f C++ \u5b9e\u73b0\u4e2d\u7684\u6982\u5ff5\uff0c\u800c\u4e0d\u662f Alkaid \u683c\u5f0f\u672c\u8eab\u4e2d\u7684\u6982\u5ff5\uff0c\u56e0\u6b64\u5b83\u4eec\u4e0d\u80fd\u76f4\u63a5\u79fb\u690d\u3002"]}),"\n",(0,E.jsxs)(a.p,{children:["\u4f46\u662f\uff0c\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u8868\u8f6c\u6362\u4e3a\u8bb0\u5f55\u6279\u6b21\u5e8f\u5217\u5e76\u4ece\u8bb0\u5f55\u6279\u6b21\u5e8f\u5217\u6784\u5efa\uff0c\u800c\u65e0\u9700\u590d\u5236\u5e95\u5c42\u6570\u7ec4\u7f13\u51b2\u533a\u3002\u53ef\u4ee5\u4f7f\u7528",(0,E.jsx)(a.code,{children:"alkaid::TableBatchReader"})," \u5c06\u8868\u6d41\u5f0f\u4f20\u8f93\u4e3a\u4efb\u610f\u6570\u91cf\n\u7684\u8bb0\u5f55\u6279\u6b21\u3002\u76f8\u53cd\uff0c\u53ef\u4ee5\u4f7f\u7528",(0,E.jsx)(a.code,{children:"alkaid::Table::FromRecordBatches"})," \u5de5\u5382\u51fd\u6570\u91cd\u8f7d\u4e4b\u4e00\u7ec4\u88c5\u8bb0\u5f55\u6279\u6b21\u7684\u903b\u8f91\u5e8f\u5217\u4ee5\u5f62\u6210\u8868\u3002"]})]})}function _(e={}){const{wrapper:a}={...(0,z.R)(),...e.components};return a?(0,E.jsx)(a,{...e,children:(0,E.jsx)(T,{...e})}):T(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>s,x:()=>c});var l=t(96540);const n={},r=l.createContext(n);function s(e){const a=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),l.createElement(r.Provider,{value:a},e.children)}}}]);