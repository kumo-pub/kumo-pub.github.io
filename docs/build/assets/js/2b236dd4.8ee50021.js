"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[43744],{51062:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var i=t(74848),r=t(28453);const s={},d="\u5e76\u884c\u67e5\u627e",l={id:"cpp/kthread/algo/parallel-find",title:"\u5e76\u884c\u67e5\u627e",description:"Taskflow \u63d0\u4f9b\u6a21\u677f\u51fd\u6570\u6765\u6784\u5efa\u4efb\u52a1\u4ee5\u5bf9\u4e00\u7cfb\u5217\u9879\u76ee\u6267\u884c\u5e76\u884c\u8fed\u4ee3\u3002",source:"@site/versioned_docs/version-1.1.1/cpp/kthread/algo/parallel-find.mdx",sourceDirName:"cpp/kthread/algo",slug:"/cpp/kthread/algo/parallel-find",permalink:"/docs/cpp/kthread/algo/parallel-find",draft:!1,unlisted:!1,tags:[],version:"1.1.1",lastUpdatedBy:"Jeff lothar",lastUpdatedAt:1748081772e3,frontMatter:{},sidebar:"docs",previous:{title:"\u6a21\u5757\u7b97\u6cd5",permalink:"/docs/cpp/kthread/algo/module"},next:{title:"\u5e76\u884c\u8fed\u4ee3",permalink:"/docs/cpp/kthread/algo/parallel-iterations"}},c={},a=[{value:"\u5934\u6587\u4ef6",id:"\u5934\u6587\u4ef6",level:2},{value:"\u4ec0\u4e48\u662f\u67e5\u627e\u7b97\u6cd5\uff1f",id:"\u4ec0\u4e48\u662f\u67e5\u627e\u7b97\u6cd5",level:2},{value:"\u521b\u5efa\u5e76\u884c <code>Find-If</code> \u4efb\u52a1",id:"\u521b\u5efa\u5e76\u884c-find-if-\u4efb\u52a1",level:2},{value:"\u901a\u8fc7\u5f15\u7528\u6355\u83b7\u8fed\u4ee3\u5668",id:"\u901a\u8fc7\u5f15\u7528\u6355\u83b7\u8fed\u4ee3\u5668",level:2},{value:"\u521b\u5efa\u5e76\u884c <code>Find-If-Not</code> \u4efb\u52a1",id:"\u521b\u5efa\u5e76\u884c-find-if-not-\u4efb\u52a1",level:2},{value:"\u627e\u51fa\u6700\u5c0f\u548c\u6700\u5927\u5143\u7d20",id:"\u627e\u51fa\u6700\u5c0f\u548c\u6700\u5927\u5143\u7d20",level:2},{value:"\u914d\u7f6e\u5206\u533a\u5668",id:"\u914d\u7f6e\u5206\u533a\u5668",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"\u5e76\u884c\u67e5\u627e",children:"\u5e76\u884c\u67e5\u627e"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Taskflow"})," \u63d0\u4f9b\u6a21\u677f\u51fd\u6570\u6765\u6784\u5efa\u4efb\u52a1\u4ee5\u5bf9\u4e00\u7cfb\u5217\u9879\u76ee\u6267\u884c\u5e76\u884c\u8fed\u4ee3\u3002"]}),"\n",(0,i.jsx)(n.h2,{id:"\u5934\u6587\u4ef6",children:"\u5934\u6587\u4ef6"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"#include <kthread/algorithm/find.h>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u4ec0\u4e48\u662f\u67e5\u627e\u7b97\u6cd5",children:"\u4ec0\u4e48\u662f\u67e5\u627e\u7b97\u6cd5\uff1f"}),"\n",(0,i.jsxs)(n.p,{children:["\u67e5\u627e\u7b97\u6cd5\u5141\u8bb8\u60a8\u5728 ",(0,i.jsx)(n.code,{children:"[first, last)"})," \u8303\u56f4\u5185\u67e5\u627e\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u3002\u8be5\u7b97\u6cd5\u8fd4\u56de\u6307\u5411\u8303\u56f4\u5185\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u5982\u679c\u4e0d\u5b58\u5728\n\u8fd9\u6837\u7684\u8fed\u4ee3\u5668\uff0c\u5219\u8fd4\u56de ",(0,i.jsx)(n.code,{children:"last"}),"\u3002",(0,i.jsx)(n.code,{children:"Taskflow"})," \u63d0\u4f9b\u4ee5\u4e0b\u5e76\u884c\u67e5\u627e\u7b97\u6cd5\uff1a"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"kthread::find_if(B first, E last, T& result, UOP predicate, P part)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"kthread::find_if_not(B first, E last, T& result, UOP predicate, P part)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"kthread::min_element(B first, E last, T& result, C comp, P part)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"kthread::max_element(B first, E last, T& result, C comp, P part)"})}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"\u521b\u5efa\u5e76\u884c-find-if-\u4efb\u52a1",children:["\u521b\u5efa\u5e76\u884c ",(0,i.jsx)(n.code,{children:"Find-If"})," \u4efb\u52a1"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"kthread::find_if"})," \u6267\u884c\u5e76\u884c\u8fed\u4ee3\u4ee5\u67e5\u627e\u8303\u56f4 ",(0,i.jsx)(n.code,{children:"[first, last)"})," \u4e2d\u7b2c\u4e00\u4e2a\u4f7f\u7ed9\u5b9a\u8c13\u8bcd\u8fd4\u56de ",(0,i.jsx)(n.code,{children:"true"})," \u7684\u5143\u7d20\u3002\u5b83\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5faa\u73af\u7684\u5e76\u884c\u5b9e\u73b0\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"template<typename InputIt, typename UnaryPredicate>\nInputIt find_if(InputIt first, InputIt last, UnaryPredicate predicate) {\n  for(; first != last; ++first) {\n    if(predicate(*first)) {\n      return first;\n    }\n  }\n  return last;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4e0b\u9762\u7684\u793a\u4f8b\u521b\u5efa\u4e86\u4e00\u4e2a\u4efb\u52a1\uff0c\u4ece\u8f93\u5165\u7684 ",(0,i.jsx)(n.code,{children:"10"})," \u4e2a\u5143\u7d20\u4e2d\u627e\u51fa\u7b49\u4e8e ",(0,i.jsx)(n.code,{children:"22"})," \u7684\u5143\u7d20\u3002\u7ed3\u679c\u5c06\u5b58\u50a8\u5728\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u7684\u7b2c\u56db\u4e2a\u53c2\u6570\u4e2d\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"std::vector<int> input = {1, 9, 22, 3, -6, 13, 12, 0, 9, 11};\nstd::vector<int>::iterator result;\ntaskflow.find_if(\n  input.begin(), input.end(), [](int i){ return i == 22; }, result\n);\nexecutor.run(taskflow);\nassert(*result == 22);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u901a\u8fc7\u5f15\u7528\u6355\u83b7\u8fed\u4ee3\u5668",children:"\u901a\u8fc7\u5f15\u7528\u6355\u83b7\u8fed\u4ee3\u5668"}),"\n",(0,i.jsxs)(n.p,{children:["\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,i.jsx)(n.code,{children:"std::ref"})," \u901a\u8fc7\u5f15\u7528\u4f20\u9012\u8fed\u4ee3\u5668\uff0c\u4ee5\u5728\u4f9d\u8d56\u4efb\u52a1\u4e4b\u95f4\u7f16\u7ec4\u53c2\u6570\u66f4\u65b0\u3002\u5f53\u5728\u521b\u5efa ",(0,i.jsx)(n.code,{children:"find-if"})," \u4efb\u52a1\u65f6\u4e0d\u77e5\u9053\u8303\u56f4\u8fed\u4ee3\n\u5668\u4f46\u9700\u8981\u4ece\u53e6\u4e00\u4e2a\u4efb\u52a1\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0c\u8fd9\u5c24\u5176\u6709\u7528\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"std::vector<int> input;\nstd::vector<int>::iterator result, first, last;\n\n// task to set up the range iterators\nkthread::Task init = taskflow.emplace([&](){\n  input = {1, 9, 22, 3, -6, 13, 12, 0, 9, 11};\n  first = input.begin(),\n  last  = input.end();\n});\n\n// task to perform parallel find\nkthread::Task task = taskflow.find_if(\n  std::ref(first), std::ref(last), result, [](int i){ return i == 22; }\n);\n\ninit.precede(task);\n\nexecutor.run(taskflow);\nassert(*result == 22);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5f53 ",(0,i.jsx)(n.code,{children:"init"})," \u5b8c\u6210\u65f6\uff0c",(0,i.jsx)(n.code,{children:"input"})," \u5df2\u521d\u59cb\u5316\u4e3a ",(0,i.jsx)(n.code,{children:"10"})," \u4e2a\u5143\u7d20\uff0c\u5176\u4e2d ",(0,i.jsx)(n.code,{children:"first"})," \u548c ",(0,i.jsx)(n.code,{children:"last"})," \u6307\u5411 ",(0,i.jsx)(n.code,{children:"input"})," \u7684\u6570\u636e\u8303\u56f4\u3002 ",(0,i.jsx)(n.code,{children:"find-if"})," \u4efb\n\u52a1\u968f\u540e\u5c06\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u8fed\u4ee3\u5668\uff0c\u5728\u6b64\u521d\u59cb\u5316\u8303\u56f4\u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002"]}),"\n",(0,i.jsxs)(n.h2,{id:"\u521b\u5efa\u5e76\u884c-find-if-not-\u4efb\u52a1",children:["\u521b\u5efa\u5e76\u884c ",(0,i.jsx)(n.code,{children:"Find-If-Not"})," \u4efb\u52a1"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"kthread::find_if_not"})," \u6267\u884c\u5e76\u884c\u8fed\u4ee3\u4ee5\u67e5\u627e\u8303\u56f4 ",(0,i.jsx)(n.code,{children:"[first, last)"})," \u4e2d\u7b2c\u4e00\u4e2a\u4f7f\u7ed9\u5b9a\u8c13\u8bcd\u8fd4\u56de ",(0,i.jsx)(n.code,{children:"false"})," \u7684\u5143\u7d20\u3002\u5b83\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5faa\u73af\u7684\u5e76\u884c\u5b9e\u73b0\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"template<typename InputIt, typename UnaryPredicate>\nInputIt find_if(InputIt first, InputIt last, UnaryPredicate predicate) {\n  for(; first != last; ++first) {\n    if(!predicate(*first)) {\n      return first;\n    }\n  }\n  return last;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u4e0b\u9762\u7684\u793a\u4f8b\u521b\u5efa\u4e86\u4e00\u4e2a\u4efb\u52a1\uff0c\u4ece 10 \u4e2a\u5143\u7d20\u7684\u8f93\u5165\u8303\u56f4\u4e2d\u67e5\u627e\u4e0d\u7b49\u4e8e 22 \u7684\u5143\u7d20\u3002\u7ed3\u679c\u5c06\u5b58\u50a8\u5728\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u7684\u7b2c\u56db\u4e2a\u53c2\u6570\u4e2d\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"std::vector<int> input = {1, 1, 22, 1, 1, 1, 1, 1, 1, 1};\nstd::vector<int>::iterator result;\ntaskflow.find_if_not(\n  input.begin(), input.end(), result, [](int i){ return i == 1; }\n);\nexecutor.run(taskflow);\nassert(*result == 22);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4e0e\u901a\u8fc7\u5f15\u7528\u6355\u83b7\u8fed\u4ee3\u5668\u7c7b\u4f3c\uff0c",(0,i.jsx)(n.code,{children:"kthread::Taskflow::find_if_not"})," \u7684\u8fed\u4ee3\u5668\u7ecf\u8fc7\u6a21\u677f\u5316\uff0c\u5141\u8bb8\u4f7f\u7528 ",(0,i.jsx)(n.code,{children:"std::ref"})," \u901a\u8fc7\u5f15\u7528\u4f20\u9012\u8fed\u4ee3\u5668\u3002\n\u5f53\u5728\u521b\u5efa ",(0,i.jsx)(n.code,{children:"find-if-not"})," \u4efb\u52a1\u65f6\u4e0d\u77e5\u9053\u8303\u56f4\u8fed\u4ee3\u5668\u4f46\u9700\u8981\u4ece\u53e6\u4e00\u4e2a\u4efb\u52a1\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0c\u8fd9\u5c24\u5176\u6709\u7528\u3002"]}),"\n",(0,i.jsx)(n.h2,{id:"\u627e\u51fa\u6700\u5c0f\u548c\u6700\u5927\u5143\u7d20",children:"\u627e\u51fa\u6700\u5c0f\u548c\u6700\u5927\u5143\u7d20"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"kthread::min_element"})," \u4f7f\u7528\u7ed9\u5b9a\u7684\u6bd4\u8f83\u51fd\u6570\u5bf9\u8c61\u5728\u8303\u56f4 ",(0,i.jsx)(n.code,{children:"[first, last)"})," \u4e2d\u67e5\u627e\u6700\u5c0f\u5143\u7d20\u3002\u4ee5\u4e0b\u793a\u4f8b\u4ece ",(0,i.jsx)(n.code,{children:"10"})," \u4e2a\u5143\u7d20\u7684\u8f93\u5165\u8303\u56f4\u4e2d\n\u67e5\u627e\u6700\u5c0f\u5143\u7d20\uff0c\u5373 ",(0,i.jsx)(n.code,{children:"-1"}),"\uff0c\u5e76\u5c06\u8fed\u4ee3\u5668\u5b58\u50a8\u5728\u7ed3\u679c\u4e2d\u8be5\u6700\u5c0f\u5143\u7d20\u7684\u4f4d\u7f6e\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"std::vector<int> input = {1, 1, 1, 1, 1, -1, 1, 1, 1, 1};\nstd::vector<int>::iterator result;\ntaskflow.min_element(\n  input.begin(), input.end(), std::less<int>(), result\n);\nexecutor.run(taskflow).wait();\nassert(*result == -1);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u7c7b\u4f3c\u5730\uff0c",(0,i.jsx)(n.code,{children:"kthread::max_element"})," \u4f7f\u7528\u7ed9\u5b9a\u7684\u6bd4\u8f83\u51fd\u6570\u5bf9\u8c61\u5728\u8303\u56f4 ",(0,i.jsx)(n.code,{children:"[first, last)"})," \u4e2d\u67e5\u627e\u6700\u5927\u5143\u7d20\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u4ece ",(0,i.jsx)(n.code,{children:"10"})," \u4e2a\u5143\u7d20\u7684\u8f93\u5165\n\u8303\u56f4\u4e2d\u67e5\u627e\u6700\u5927\u5143\u7d20\uff0c\u5373 ",(0,i.jsx)(n.code,{children:"2"}),"\uff0c\u5e76\u5c06\u8fed\u4ee3\u5668\u5b58\u50a8\u5728\u7ed3\u679c\u4e2d\u8be5\u6700\u5927\u5143\u7d20\u7684\u4f4d\u7f6e\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"std::vector<int> input = {1, 1, 1, 1, 1, 2, 1, 1, 1, 1};\nstd::vector<int>::iterator result;\ntaskflow.max_element(\n  input.begin(), input.end(), std::less<int>(), result\n);\nexecutor.run(taskflow).wait();\nassert(*result == 2);\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["\u6ce8\u610f\n\u4f7f\u7528 ",(0,i.jsx)(n.code,{children:"kthread::max_element"})," \u67e5\u627e\u5927\u5143\u7d20\u65f6\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u4f7f\u7528 ",(0,i.jsx)(n.code,{children:"std::less"})," \u4f5c\u4e3a\u6bd4\u8f83\u51fd\u6570\u3002\u8be6\u7ec6\u4fe1\u606f\u53ef\u53c2\u8003 ",(0,i.jsx)(n.code,{children:"std::max_element"}),"\u3002"]})}),"\n",(0,i.jsx)(n.h2,{id:"\u914d\u7f6e\u5206\u533a\u5668",children:"\u914d\u7f6e\u5206\u533a\u5668"}),"\n",(0,i.jsxs)(n.p,{children:["\u60a8\u53ef\u4ee5\u4e3a\u5e76\u884c\u67e5\u627e\u4efb\u52a1",(0,i.jsx)(n.code,{children:"\uff08kthread::find_if\u3001kthread::find_if_not\u3001kthread::min_element\u3001kthread::max_element\uff09"}),"\u914d\u7f6e\u5206\u533a\u5668\uff0c\n\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u8c03\u5ea6\u65b9\u6cd5\u8fd0\u884c\uff0c\u4f8b\u5982\u5f15\u5bfc\u5f0f\u5206\u533a\u3001\u52a8\u6001\u5206\u533a\u548c\u9759\u6001\u5206\u533a\u3002\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528\u4e24\u4e2a\u4e0d\u540c\u7684\u5206\u533a\u5668\u521b\u5efa\u4e24\u4e2a\u5e76\u884c\u67e5\u627e\u4efb\u52a1\uff0c\u4e00\u4e2a\u4f7f\u7528\u9759\u6001\u5206\u533a\u7b97\u6cd5\uff0c\u53e6\u4e00\u4e2a\u4f7f\u7528\u5f15\u5bfc\u5f0f\u5206\u533a\u7b97\u6cd5\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"std::vector<int> vec(1024, -1);\nstd::vector<int>::iterator result;\n\n// create two partitioners with a chunk size of 10\nkthread::StaticPartitioner static_partitioner(10);\nkthread::GuidedPartitioner guided_partitioner(10);\n\n// create a parallel-find task with a static partitioner\ntaskflow.find_if(\n  vec.begin(), vec.end(), result, [&](int i) { return i == -1; }, static_partitioner\n);\n\n// create a parallel-find task with a guided partitioner\ntaskflow.find_if(\n  vec.begin(), vec.end(), result, [&](int i) { return i == -1; }, guided_partitioner\n);\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"\u6ce8\u610f\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u672a\u6307\u5b9a\u5206\u533a\u5668\uff0c\u5219\u5e76\u884c\u67e5\u627e\u4efb\u52a1\u5c06\u4f7f\u7528 kthread::DefaultPartitioner\u3002"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1",(0,i.jsx)(n.a,{href:"/docs/cpp/kthread/algo",children:"\u7b97\u6cd5\u7d22\u5f15"})]})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>l});var i=t(96540);const r={},s=i.createContext(r);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);