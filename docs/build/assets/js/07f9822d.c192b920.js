"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[81199],{73695:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>_,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var a=s(74848),t=s(28453);const r={},o="Base64",i={id:"cpp/vamos/base64",title:"Base64",description:"\u5b89\u88c5",source:"@site/versioned_docs/version-1.1.1/cpp/vamos/base64.mdx",sourceDirName:"cpp/vamos",slug:"/cpp/vamos/base64",permalink:"/docs/cpp/vamos/base64",draft:!1,unlisted:!1,tags:[],version:"1.1.1",lastUpdatedBy:"Jeff lothar",lastUpdatedAt:1748081772e3,frontMatter:{},sidebar:"docs",previous:{title:"unicode",permalink:"/docs/cpp/vamos/unicode"},next:{title:"\u591a\u6838\u7f16\u7a0b",permalink:"/docs/category/\u591a\u6838\u7f16\u7a0b"}},c={},d=[{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"\u6559\u7a0b",id:"\u6559\u7a0b",level:2}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"base64",children:"Base64"})}),"\n",(0,a.jsx)(e.h2,{id:"\u5b89\u88c5",children:"\u5b89\u88c5"}),"\n",(0,a.jsxs)(e.p,{children:["\u672c\u6559\u7a0b ",(0,a.jsx)(e.code,{children:"Base64"}),"\u662f\u5feb\u901f\u7684",(0,a.jsx)(e.code,{children:"API"}),"\uff0c\u4f4d\u4e8e",(0,a.jsx)(e.code,{children:"vamos"}),"\u5e93\u4e2d\u3002\u901a\u5e38\u7248\u672c\u4f4d\u4e8e",(0,a.jsx)(e.code,{children:"turbo/strings"}),"\u6a21\u5757\u4e2d\u3002"]}),"\n",(0,a.jsx)(e.h2,{id:"\u6559\u7a0b",children:"\u6559\u7a0b"}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u4eec\u8fd8\u652f\u6301\u4ece ",(0,a.jsx)(e.a,{href:"https://infra.spec.whatwg.org/#forgiving-base64-decode",children:"WHATWG forgiving-base64"})," \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\uff0c\u7136\u540e\u518d\u8f6c\u6362\u56de\u6765\u3002\n\u5177\u4f53\u6765\u8bf4\uff0c\u60a8\u53ef\u4ee5\u5c06\u5305\u542b ASCII \u7a7a\u683c (' '\u3001'\\t'\u3001'\\n'\u3001'\\r'\u3001'\\f') \u7684 base64 \u8f93\u5165\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u3002\u6211\u4eec\u8fd8\u652f\u6301 base64 URL \u7f16\u7801\u66ff\u4ee3\u65b9\u6848\u3002\n\u8fd9\u4e9b\u51fd\u6570\u662f Node.js JavaScript \u8fd0\u884c\u65f6\u7684\u4e00\u90e8\u5206\uff1a\u7279\u522b\u662f Node.js \u4e2d\u7684 ",(0,a.jsx)(e.code,{children:"atob"})," \u4f9d\u8d56\u4e8e vamos\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u8f6c\u6362\u4e3a ",(0,a.jsx)(e.code,{children:"base64"})," \u603b\u662f\u4f1a\u6210\u529f\uff0c\u800c\u4e14\u76f8\u5bf9\u7b80\u5355\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:"std::vector<char> buffer(vamos::base64_length_from_binary(source.size()));\nvamos::binary_to_base64(source.data(), source.size(), buffer.data());\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u89e3\u7801 base64 \u9700\u8981\u9a8c\u8bc1\uff0c\u56e0\u6b64\u9700\u8981\u5904\u7406\u9519\u8bef\u3002\u6b64\u5916\uff0c\u7531\u4e8e\n\u6211\u4eec\u4fee\u526a\u4e86 ASCII \u7a7a\u683c\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u80fd\u9700\u8981\u968f\u540e\u8c03\u6574\u7ed3\u679c\u5927\u5c0f\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:"std::vector<char> buffer(vamos::maximal_binary_length_from_base64(base64.data(), base64.size()));\nvamos::result r = vamos::base64_to_binary(base64.data(), base64.size(), buffer.data());\nif(r.error) {\n  /// \u6211\u4eec\u9047\u5230\u4e86\u4e00\u4e9b\u9519\u8bef\uff0c\u5982\u679c\u9519\u8bef\u662f INVALID_BASE64_CHARACTER\uff0cr.count \u4f1a\u544a\u8bc9\u60a8\u5728\u8f93\u5165\u4e2d\u9047\u5230\u4e86\u9519\u8bef\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u9519\u8bef\u662f BASE64_INPUT_REMAINDER\uff0c\u5219\n  /// \u5269\u4f59\u4e00\u4e2a\u6709\u6548\u7684 base64 \u5b57\u7b26\uff0c\u5e76\u4e14 r.count \u5305\u542b\u89e3\u7801\u7684\u5b57\u8282\u6570\u3002\n} else {\n    /// \u6839\u636e\u5b9e\u9645\u5b57\u8282\u6570\u8c03\u6574\u7f13\u51b2\u533a\u5927\u5c0f\n  buffer.resize(r.count);\n}\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u66f4\u6709\u8da3\u7684\u4f8b\u5b50\u3002\u4ee5\u4ee5\u4e0b\u5b57\u7b26\u4e32\u4e3a\u4f8b\uff1a\n",(0,a.jsx)(e.code,{children:'" A A "'}),"\u3001",(0,a.jsx)(e.code,{children:'" A A G A / v 8 "'}),"\u3001",(0,a.jsx)(e.code,{children:'" A A G A / v 8 = "'}),"\u3001",(0,a.jsx)(e.code,{children:'" A A G A / v 8 = = "'}),"\u3002\n\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u4e4b\u5916\uff0c\u5b83\u4eec\u90fd\u662f\u6709\u6548\u7684 WHATWG base64 \u8f93\u5165\u3002\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u89e3\u7801\u4e3a\u5355\u4e2a\u5b57\u8282\u503c (0)\uff0c\u800c\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u5b57\u7b26\u4e32\u89e3\u7801\u4e3a\u5b57\u8282\u5e8f\u5217 ",(0,a.jsx)(e.code,{children:"0, 0x1, 0x80, 0xfe, 0xff"}),"\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:'  std::vector<std::string> sources = {\n      "  A  A  ", "  A  A  G  A  /  v  8  ", "  A  A  G  A  /  v  8  =  ", "  A  A  G  A  /  v  8  =  =  "};\n  /// \u6700\u540e\u4e00\u4e2a\u662f\u9519\u8bef\u7684\n  std::vector<std::vector<uint8_t>> expected = {\n      {0}, {0, 0x1, 0x80, 0xfe, 0xff}, {0, 0x1, 0x80, 0xfe, 0xff}, {}};\n  for(size_t i = 0; i < sources.size(); i++) {\n    const std::string &source = sources[i];\n    std::cout << "source: \'" << source << "\'" << std::endl;\n    /// \u4e3a\u6700\u5927\u4e8c\u8fdb\u5236\u957f\u5ea6\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\n    std::vector<uint8_t> buffer(vamos::maximal_binary_length_from_base64(\n       source.data(), source.size()));\n   /// \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u5e76\u68c0\u67e5\u9519\u8bef\n    vamos::result r = vamos::base64_to_binary(\n        source.data(), source.size(), (char*)buffer.data());\n    if(r.error != vamos::error_code::SUCCESS) {\n      /// expected[i].empty()\u3002\n      std::cout << "output: error" << std::endl;\n    } else {\n     /// \u5982\u679c\u6210\u529f\uff0cr.count \u5305\u542b\u8f93\u51fa\u957f\u5ea6\n      buffer.resize(r.count);\n      /// We have that buffer == expected[i]\n      std::cout << "output: " << r.count << " bytes" << std::endl;\n    }\n  }\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u6b64\u4ee3\u7801\u5e94\u6253\u5370\u4ee5\u4e0b\u5185\u5bb9\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"source: '  A  A  '\noutput: 1 bytes\nsource: '  A  A  G  A  /  v  8  '\noutput: 5 bytes\nsource: '  A  A  G  A  /  v  8  =  '\noutput: 5 bytes\nsource: '  A  A  G  A  /  v  8  =  =  '\noutput: error\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u5982\u60a8\u6240\u89c1\uff0c\u7ed3\u679c\u7b26\u5408\u9884\u671f\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u89e3\u7801 ",(0,a.jsx)(e.code,{children:"base64"})," \u65f6\u8fdb\u4e00\u6b65\u9650\u5236\u8f93\u51fa\u7684\u5927\u5c0f\u3002\n\u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"base64_to_binary_safe"})," \u51fd\u6570\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5c06\u8f93\u5165\u89e3\u7801\u4e3a\u5177\u6709\u6700\u5927\u5bb9\u91cf\u7684\u6bb5\uff0c\u8fd9\u4e9b\u51fd\u6570\u4e5f\u53ef\u80fd\u6709\u7528\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:"  /// \u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u9009\u62e9 len \u53ef\u4ee5\u88ab 3 \u6574\u9664\n  size_t len = 72;\n  /// \u6211\u4eec\u60f3\u8981\u89e3\u7801\u2018aaaaa....\u2019\n  std::vector<char> base64(len, 'a');\n  std::vector<char> back((len + 3) / 4 * 3);\n  /// \u6545\u610f\u592a\u5c0f\n  size_t limited_length = back.size() / 2;\n  /// \u6211\u4eec\u7ee7\u7eed\u89e3\u7801\u4e00\u534a\uff1a\n  vamos::result r = vamos::base64_to_binary_safe(\n            base64.data(), base64.size(), back.data(), limited_length);\n  assert(r.error == vamos::error_code::OUTPUT_BUFFER_TOO_SMALL);\n    /// \u6211\u4eec\u5c06 r.count \u4e2a base64 8 \u4f4d\u5355\u5143\u89e3\u7801\u4e3a limited_length \u5b57\u8282\n    /// \u73b0\u5728\u8ba9\u6211\u4eec\u89e3\u7801\u5176\u4f59\u90e8\u5206 !!!\n    ///\n    /// \u6211\u4eec\u5df2\u7ecf\u5728\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u8bfb\u53d6\u4e86 r.count \u4e2a\uff0c\u5e76\u4e14\n    /// \u751f\u6210\u4e86 limited_length \u5b57\u8282\u3002\n    ///\n  size_t input_index = r.count;\n  size_t limited_length2 = back.size();\n  r = vamos::base64_to_binary_safe(base64.data() + input_index,\n                                           base64.size() - input_index,\n                                           back.data(), limited_length2);\n  assert(r.error == vamos::error_code::SUCCESS);\n    /// \u6211\u4eec\u5c06 r.count base64 8 \u4f4d\u5355\u5143\u89e3\u7801\u4e3a limited_length2 \u5b57\u8282\n    /// \u6211\u4eec\u5b8c\u6210\u4e86\n  assert(limited_length2 + limited_length == (len + 3) / 4 * 3);\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528",(0,a.jsx)(e.code,{children:"base64_to_binary_safe"})," \u91cd\u590d\u524d\u9762\u4f7f\u7528\u5404\u79cd\u95f4\u9694\u5b57\u7b26\u4e32\u7684\u793a\u4f8b\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u5927\u81f4\u76f8\u540c\uff0c\u53ea\u662f",(0,a.jsx)(e.code,{children:"result.count"})," \u5185\u5bb9\u7684\u7ea6\u5b9a\u4e0d\u540c\u3002\u8f93\u51fa\u5927\u5c0f\u901a\u8fc7\u5f15\u7528\u5b58\u50a8\u5728\u8f93\u51fa\u957f\u5ea6\u53c2\u6570\u4e2d\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:'\n std::vector<std::string> sources = {\n      "  A  A  ", "  A  A  G  A  /  v  8  ", "  A  A  G  A  /  v  8  =  ", "  A  A  G  A  /  v  8  =  =  "};\n  ///\u6700\u540e\u4e00\u4e2a\u662f\u9519\u8bef\u7684\n  std::vector<std::vector<uint8_t>> expected = {\n      {0}, {0, 0x1, 0x80, 0xfe, 0xff}, {0, 0x1, 0x80, 0xfe, 0xff}, {}};\n  for(size_t i = 0; i < sources.size(); i++) {\n    const std::string &source = sources[i];\n    std::cout << "source: \'" << source << "\'" << std::endl;\n    /// \u4e3a\u6700\u5927\u4e8c\u8fdb\u5236\u957f\u5ea6\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\n    std::vector<uint8_t> buffer(vamos::maximal_binary_length_from_base64(\n       source.data(), source.size()));\n   /// \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u5e76\u68c0\u67e5\u9519\u8bef\n    size_t output_length = buffer.size();\n    vamos::result r = vamos::base64_to_binary_safe(\n        source.data(), source.size(), (char*)buffer.data(), output_length);\n    if(r.error != vamos::error_code::SUCCESS) {\n     /// \u6211\u4eec\u6709 expected[i].empty()\n      std::cout << "output: error" << std::endl;\n    } else {\n      /// \u5982\u679c\u6210\u529f\uff0coutput_length \u5305\u542b\u8f93\u51fa\u957f\u5ea6\n      buffer.resize(output_length);\n      /// \u6211\u4eec\u6709\u7f13\u51b2\u533a == \u9884\u671f[i])\n      std::cout << "output: " << output_length << " bytes" << std::endl;\n      std::cout << "input (consumed): " << r.count << " bytes" << std::endl;\n    }\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u6b64\u4ee3\u7801\u5e94\u8f93\u51fa\u4ee5\u4e0b\u5185\u5bb9\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"source: '  A  A  '\noutput: 1 bytes\ninput (consumed): 8 bytes\nsource: '  A  A  G  A  /  v  8  '\noutput: 5 bytes\ninput (consumed): 23 bytes\nsource: '  A  A  G  A  /  v  8  =  '\noutput: 5 bytes\ninput (consumed): 26 bytes\nsource: '  A  A  G  A  /  v  8  =  =  '\noutput: error\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u51fd\u6570\u89c4\u8303\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u4f1a\u4ee5 16 \u4f4d\u4e3a\u5355\u4f4d\u63a5\u6536 ",(0,a.jsx)(e.code,{children:"base64"})," \u8f93\u5165\uff08\u4f8b\u5982\uff0c\u6765\u81ea ",(0,a.jsx)(e.code,{children:"UTF-16"})," \u5b57\u7b26\u4e32\uff09\uff1a\n\u6211\u4eec\u4e5f\u6709\u9488\u5bf9\u8fd9\u4e9b\u60c5\u51b5\u7684\u51fd\u6570\u91cd\u8f7d\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u4e00\u4e9b\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u4ee5\u5757\u7684\u5f62\u5f0f\u89e3\u7801 ",(0,a.jsx)(e.code,{children:"base64"})," \u8f93\u5165\uff0c\u5c24\u5176\u662f\u5728\u8fdb\u884c\n\u6587\u4ef6\u6216\u7f51\u7edc\u7f16\u7a0b\u65f6\u3002\u8fd9\u4e9b\u7528\u6237\u5e94\u8be5\u770b\u5230 ",(0,a.jsx)(e.code,{children:"tools/fastbase64.cpp"}),"\uff0c\u8fd9\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\n\u5b9e\u7528\u7a0b\u5e8f\uff0c\u4e13\u95e8\u4e3a\u793a\u4f8b\u800c\u8bbe\u8ba1\u3002\u5b83\u4f7f\u7528\u6700\u591a\u51e0\u5341\u5343\u5b57\u8282\u7684\u5757\u8bfb\u53d6\u548c\u5199\u5165 base64 \u6587\u4ef6\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u4eec\u652f\u6301\u4e24\u79cd\u7ea6\u5b9a\uff1a",(0,a.jsx)(e.code,{children:"base64_default"})," \u548c ",(0,a.jsx)(e.code,{children:"base64_url"}),"\uff1a"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\u9ed8\u8ba4\u503c (",(0,a.jsx)(e.code,{children:"base64_default"}),") \u5305\u542b\u5b57\u7b26 ",(0,a.jsx)(e.code,{children:"+"})," \u548c ",(0,a.jsx)(e.code,{children:"/"})," \u4f5c\u4e3a\u5176\u5b57\u6bcd\u8868\u7684\u4e00\u90e8\u5206\u3002\u5b83\u8fd8\u4f7f\u7528\u586b\u5145\u5b57\u7b26 (",(0,a.jsx)(e.code,{children:"="}),") \u586b\u5145\u8f93\u51fa\uff0c\u4ee5\u4fbf\u8f93\u51fa\u53ef\u4ee5\u88ab 4 \u6574\u9664\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\n\u5b57\u7b26\u4e32 ",(0,a.jsx)(e.code,{children:'"Hello, World!"'})," \u7f16\u7801\u4e3a ",(0,a.jsx)(e.code,{children:'"SGVsbG8sIFdvcmxkIQ=="'}),"\uff0c\u8868\u8fbe\u5f0f\u4e3a ",(0,a.jsx)(e.code,{children:"vamos::binary_to_base64(source, size, out, vamos::base64_default)"}),"\u3002"]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["\u4f7f\u7528\u9ed8\u8ba4\u503c\u65f6\uff0c\u60a8\u53ef\u4ee5\u7701\u7565\u9009\u9879\u53c2\u6570\u4ee5\u7b80\u5316\u64cd\u4f5c\uff1a\n",(0,a.jsx)(e.code,{children:"vamos::binary_to_base64(source, size, out, buffer.data())"}),"\u3002\u89e3\u7801\u65f6\uff0c\u6839\u636e ",(0,a.jsx)(e.a,{href:"https://infra.spec.whatwg.org/#forgiving-base64-decode",children:"WHATWG forgiving-base64"}),"\n\u6807\u51c6\u7701\u7565\u7a7a\u683c\u5b57\u7b26\u3002\u6b64\u5916\uff0c\u5982\u679c\u6d41\u672b\u5c3e\u6709\u586b\u5145\u5b57\u7b26\uff0c\u5219\u586b\u5145\u5b57\u7b26\u7684\u6570\u91cf\u4e0d\u5f97\u8d85\u8fc7\u4e24\u4e2a\uff0c\u5982\u679c\u6709\uff0c\u5219\u5b57\u7b26\u603b\u6570\uff08\u4e0d\u5305\u62ec ASCII \u7a7a\u683c\u201c \u201d\u3001\u201c\\t\u201d\u3001\u201c\\n\u201d\u3001\u201c\\r\u201d\u3001\u201c\\f\u201d\uff0c\u4f46\u5305\u62ec\u586b\u5145\u5b57\u7b26\uff09\u5fc5\u987b\u80fd\u88ab\u56db\u6574\u9664\u3002"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["URL \u7ea6\u5b9a\uff08",(0,a.jsx)(e.code,{children:"base64_url"}),"\uff09\u4f7f\u7528\u5b57\u7b26 ",(0,a.jsx)(e.code,{children:"-"})," \u548c ",(0,a.jsx)(e.code,{children:"_"})," \u4f5c\u4e3a\u5176\u5b57\u6bcd\u8868\u7684\u4e00\u90e8\u5206\u3002\u5b83\u4e0d\u4f1a\u586b\u5145\u5176\u8f93\u51fa\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u5b57\u7b26\u4e32 ",(0,a.jsx)(e.code,{children:'"Hello, World!"'})," \u7f16\u7801\u4e3a ",(0,a.jsx)(e.code,{children:'"SGVsbG8sIFdvcmxkIQ"'}),"\u3002\n\u8981\u6307\u5b9a URL \u7ea6\u5b9a\uff0c\u60a8\u53ef\u4ee5\u5c06\u9002\u5f53\u7684\u9009\u9879\u4f20\u9012\u7ed9\u6211\u4eec\u7684\u89e3\u7801\u548c\u7f16\u7801\u51fd\u6570\uff1a\u4f8b\u5982\uff0c",(0,a.jsx)(e.code,{children:"vamos::base64_to_binary(source, size, out, vamos::base64_url)"}),"\u3002"]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["\u5f53\u6211\u4eec\u9047\u5230\u65e2\u4e0d\u662f ASCII \u7a7a\u683c\u4e5f\u4e0d\u662f base64 \u5b57\u7b26\uff08\u5783\u573e\u5b57\u7b26\uff09\u7684\u5b57\u7b26\u65f6\uff0c\u6211\u4eec\u4f1a\u68c0\u6d4b\u5230\u9519\u8bef\u3002\u8981\u5bb9\u5fcd",(0,a.jsx)(e.code,{children:"garbage"}),"\u5b57\u7b26\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528",(0,a.jsx)(e.code,{children:"base64_default_accept_garbage"}),"\u6216",(0,a.jsx)(e.code,{children:"base64_url_accept_garbage"}),"\u4ee3\u66ff",(0,a.jsx)(e.code,{children:"base64_default"}),"\u6216",(0,a.jsx)(e.code,{children:"base64_ur"}),"\u201d\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u56e0\u6b64\uff0c\u6211\u4eec\u9075\u5faa Node \u6216 Bun JavaScript \u8fd0\u884c\u65f6\u7b49\u7cfb\u7edf\u5173\u4e8e\u586b\u5145\u7684\u60ef\u4f8b\u3002\n\u9ed8\u8ba4 base64 \u4f7f\u7528\u586b\u5145\uff0c\u800c URL \u53d8\u4f53\u5219\u4e0d\u4f7f\u7528\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:" console.log(Buffer.from(\"Hello World\").toString('base64'));\nSGVsbG8gV29ybGQ=\nundefined\n console.log(Buffer.from(\"Hello World\").toString('base64url'));\nSGVsbG8gV29ybGQ\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u6839\u636e ",(0,a.jsx)(e.a,{href:"https://www.rfc-editor.org/rfc/rfc4648",children:"RFC 4648"}),"\uff0c\u8fd9\u662f\u5408\u7406\u7684\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-text",children:"> \u586b\u5145\u5b57\u7b26`=`\u5728 URI \u4e2d\u4f7f\u7528\u65f6\u901a\u5e38\u91c7\u7528\u767e\u5206\u6bd4\u7f16\u7801\uff0c\u4f46\u5982\u679c\u9690\u542b\u5730\u77e5\u9053\u6570\u636e\u957f\u5ea6\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u8df3\u8fc7\u586b\u5145\u6765\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff1b\u53c2\u89c1\u7b2c 3.2 \u8282\u3002\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u5c3d\u7ba1\u5982\u6b64\uff0c\u4e00\u4e9b\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5728 URL \u53d8\u4f53\u4e2d\u4f7f\u7528\u586b\u5145\n\u5e76\u5728\u9ed8\u8ba4\u53d8\u4f53\u4e2d\u7701\u7565\u5b83\u3002\u8fd9\u4e9b\u7528\u6237\u53ef\u4ee5\n\u901a\u8fc7\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"vamos::base64_url | vamos::base64_reverse_padding"})," \u6216 ",(0,a.jsx)(e.code,{children:"vamos::base64_default | vamos::base64_reverse_padding"})," \u6765\u201c\u53cd\u8f6c\u201d\u7ea6\u5b9a\u3002\n\u4e3a\u4e86\u66f4\u65b9\u4fbf\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"vamos::base64_default_no_padding"})," \u548c\n",(0,a.jsx)(e.code,{children:"vamos::base64_url_with_padding"})," \u4f5c\u4e3a\u7b80\u5199\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u89e3\u7801\u65f6\uff0c\u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528\u677e\u6563\u65b9\u6cd5\uff1a\u53ef\u4ee5\u7701\u7565\u586b\u5145\u5b57\u7b26\u3002\n\u9ad8\u7ea7\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"last_chunk_options"})," \u53c2\u6570\u6765\u4f7f\u7528\u4e25\u683c\u65b9\u6cd5\uff0c\n\u5176\u4e2d\u5fc5\u987b\u4f7f\u7528\u7cbe\u786e\u586b\u5145\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u9519\u8bef\uff0c\u6216\u8005\u4f7f\u7528 stop_before_partial\n\u9009\u9879\uff0c\u5f53\u586b\u5145\u4e0d\u5408\u9002\u65f6\uff0c\u5b83\u4f1a\u7b80\u5355\u5730\u4e22\u5f03\u5269\u4f59\u7684 base64 \u5b57\u7b26\u3002\nstop_before_partial \u9009\u9879\u53ef\u80fd\u5bf9\u6d41\u5f0f\u4f20\u8f93\u6709\u7528\uff1a\u7ed9\u5b9a\u7f51\u7edc\u4e0a\u7684 base64\n\u5b57\u7b26\u6d41\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u80fd\u591f\u89e3\u7801\u5b83\u4eec\uff0c\u800c\u65e0\u9700\u5148\u7b49\u5f85\n\u6574\u4e2a\u6d41\u8fdb\u5165\u3002\n\u5982\u679c\u60a8\u5e0c\u671b base64 \u4ee3\u7801\u548c\u4e8c\u8fdb\u5236\u6570\u636e\u4e4b\u95f4\u6709\u4e00\u5bf9\u4e00\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u5219\u4e25\u683c\u65b9\u6cd5\u5f88\u6709\u7528\u3002\u5728\u9ed8\u8ba4\u8bbe\u7f6e\u4e2d\u4f7f\u7528\uff08",(0,a.jsx)(e.code,{children:"last_chunk_handling_options::loose"}),"\uff09\uff0c\n\u7136\u540e ",(0,a.jsx)(e.code,{children:'"ZXhhZg=="'}),"\u3001",(0,a.jsx)(e.code,{children:'"ZXhhZg"'}),"\u3001",(0,a.jsx)(e.code,{children:'"ZXhhZh=="'})," \u90fd\u89e3\u7801\u4e3a\u76f8\u540c\u7684\u4e8c\u8fdb\u5236\u5185\u5bb9\u3002\n\u5982\u679c\u5c06 ",(0,a.jsx)(e.code,{children:"last_chunk_options"})," \u8bbe\u7f6e\u4e3a ",(0,a.jsx)(e.code,{children:"last_chunk_handling_options::strict"}),"\uff0c\u5219\u89e3\u7801 ",(0,a.jsx)(e.code,{children:'"ZXhhZg=="'})," \u4f1a\u6210\u529f\uff0c\u4f46\u89e3\u7801 ",(0,a.jsx)(e.code,{children:'"ZXhhZg"'})," \u4f1a\u5931\u8d25\uff0c\u5e76\u51fa\u73b0 ",(0,a.jsx)(e.code,{children:"vamos::error_code::BASE64_INPUT_REMAINDER"}),"\uff0c\u800c\u89e3\u7801 ",(0,a.jsx)(e.code,{children:'"ZXhhZh=="'})," \u4f1a\u5931\u8d25\uff0c\u5e76\u51fa\u73b0\n",(0,a.jsx)(e.code,{children:"vamos::error_code::BASE64_EXTRA_BITS"}),"\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u4eec\u7684base64\u51fd\u6570\u7684\u89c4\u8303\u5982\u4e0b\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:"\n/// base64_options \u7528\u4e8e\u6307\u5b9a base64 \u7f16\u7801\u9009\u9879\u3002\n/// ASCII \u7a7a\u683c\u4e3a ' '\u3001'\\t'\u3001'\\n'\u3001'\\r'\u3001'\\f'\n/// \u5783\u573e\u5b57\u7b26\u662f\u4e0d\u5c5e\u4e8e base64 \u5b57\u6bcd\u8868\u6216 ASCII \u7a7a\u683c\u7684\u5b57\u7b26\u3002\nusing base64_options = uint64_t;\nenum base64_options : uint64_t {\n  base64_default = 0,         /* standard base64 format (with padding) */\n  base64_url = 1,             /* base64url format (no padding) */\n  base64_reverse_padding = 2, /* modifier for base64_default and base64_url */\n  base64_default_no_padding =\n      base64_default |\n      base64_reverse_padding, /* standard base64 format without padding */\n  base64_url_with_padding =\n      base64_url | base64_reverse_padding, /* base64url with padding */\n  base64_default_accept_garbage = 4,       /* standard base64 format accepting garbage characters */\n  base64_url_accept_garbage = 5,           /* base64url format accepting garbage characters */\n};\n\n/// last_chunk_handling_options \u7528\u4e8e\u6307\u5b9a base64 \u89e3\u7801\u4e2d\u6700\u540e\u4e00\u4e2a\n/// \u5757\u7684\u5904\u7406\u3002\n/// https://tc39.es/proposal-arraybuffer-base64/spec/#sec-frombase64\nenum last_chunk_handling_options : uint64_t {\n  loose = 0,               /* standard base64 format, decode partial final chunk */\n  strict = 1,              /* error when the last chunk is partial, 2 or 3 chars, and unpadded, or non-zero bit padding */\n  stop_before_partial = 2, /* if the last chunk is partial (2 or 3 chars), ignore it (no error) */\n};\n\n/**\n* \u6839\u636e base64 \u8f93\u5165\u63d0\u4f9b\u6700\u5927\u4e8c\u8fdb\u5236\u957f\u5ea6\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002\n* \u901a\u5e38\uff0c\u5982\u679c\u8f93\u5165\u5305\u542b ASCII \u7a7a\u683c\uff0c\u7ed3\u679c\u5c06\u5c0f\u4e8e\n* \u6700\u5927\u957f\u5ea6\u3002\n*\n* @param input \u8981\u5904\u7406\u7684 base64 \u8f93\u5165\n* @param length base64 \u8f93\u5165\u7684\u957f\u5ea6\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\n* @return \u6700\u5927\u4e8c\u8fdb\u5236\u5b57\u8282\u6570\n*/\nvamos_warn_unused size_t maximal_binary_length_from_base64(const char * input, size_t length) noexcept;\n\n/**\n* \u6839\u636e base64 \u8f93\u5165\u63d0\u4f9b\u6700\u5927\u4e8c\u8fdb\u5236\u957f\u5ea6\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002\n* \u901a\u5e38\uff0c\u5982\u679c\u8f93\u5165\u5305\u542b ASCII \u7a7a\u683c\uff0c\u7ed3\u679c\u5c06\u5c0f\u4e8e\n* \u6700\u5927\u957f\u5ea6\u3002\n*\n* @param input \u8981\u5904\u7406\u7684 base64 \u8f93\u5165\uff0c\u4ee5 ASCII \u683c\u5f0f\u5b58\u50a8\u4e3a 16 \u4f4d\u5355\u5143\n* @param length \u4ee5 16 \u4f4d\u5355\u5143\u4e3a\u5355\u4f4d\u7684 base64 \u8f93\u5165\u7684\u957f\u5ea6\n* @return \u6700\u5927\u4e8c\u8fdb\u5236\u5b57\u8282\u6570\n*/\nvamos_warn_unused size_t maximal_binary_length_from_base64(const char16_t * input, size_t length) noexcept;\n\n\n/**\n* \u5c06 base64 \u8f93\u5165\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u8f93\u51fa\u3002\n*\n* \u6b64\u51fd\u6570\u9075\u5faa WHATWG forgiving-base64 \u683c\u5f0f\uff0c\u8fd9\u610f\u5473\u7740\u5b83\n* \u5c06\u5ffd\u7565\u8f93\u5165\u4e2d\u7684\u4efb\u4f55 ASCII \u7a7a\u683c\u3002\u60a8\u53ef\u4ee5\u63d0\u4f9b\u586b\u5145\u7684\u8f93\u5165\n*\uff08\u672b\u5c3e\u6709\u4e00\u4e2a\u6216\u4e24\u4e2a\u7b49\u53f7\uff09\u6216\u672a\u586b\u5145\u7684\u8f93\u5165\uff08\u672b\u5c3e\u6ca1\u6709\u4efb\u4f55\n* \u7b49\u53f7\uff09\u3002\n*\n* \u53c2\u89c1https://infra.spec.whatwg.org/#forgiving-base64-decode\n*\n* \u5982\u679c\u8f93\u5165\u65e0\u6548\uff0c\u6b64\u51fd\u6570\u5c06\u5931\u8d25\u3002\u5f53 last_chunk_options = loose \u65f6\uff0c\n* \u6709\u4e24\u4e2a\u53ef\u80fd\u7684\u5931\u8d25\u539f\u56e0\uff1a\u8f93\u5165\u5305\u542b\u591a\u4e2a\n* base64 \u5b57\u7b26\uff0c\u9664\u4ee5 4 \u540e\u53ea\u5269\u4e0b\u4e00\u4e2a\u4f59\u6570\u5b57\u7b26\n* (BASE64_INPUT_REMAINDER)\uff0c\u6216\u8005\u8f93\u5165\u5305\u542b\u7684\u5b57\u7b26\u4e0d\u662f\n* \u6709\u6548\u7684 base64 \u5b57\u7b26 (INVALID_BASE64_CHARACTER)\u3002\n*\n* \u5f53\u9519\u8bef\u4e3a INVALID_BASE64_CHARACTER \u65f6\uff0cr.count \u5305\u542b\u8f93\u5165\u4e2d\u53d1\u73b0\u65e0\u6548\u5b57\u7b26\u7684\u7d22\u5f15\u3002\u5f53\u9519\u8bef\u4e3a\n* BASE64_INPUT_REMAINDER \u65f6\uff0cr.count \u5305\u542b\u89e3\u7801\u7684\u5b57\u8282\u6570\u3002\n*\n* \u9ed8\u8ba4\u9009\u9879 (vamos::base64_default) \u671f\u671b\u5b57\u7b26 `+` \u548c\n* `/` \u4f5c\u4e3a\u5176\u5b57\u6bcd\u8868\u7684\u4e00\u90e8\u5206\u3002URL \u9009\u9879 (vamos::base64_url) \u671f\u671b\u5b57\u7b26 `-` \u548c `_` \u4f5c\u4e3a\u5176\u5b57\u6bcd\u8868\u7684\u4e00\u90e8\u5206\u3002\n*\n* \u5982\u679c\u5b58\u5728\u586b\u5145 (`=`)\uff0c\u5219\u5bf9\u5176\u8fdb\u884c\u9a8c\u8bc1\u3002\u8f93\u5165\u672b\u5c3e\u6700\u591a\u53ef\u4ee5\u6709\u4e24\u4e2a\u586b\u5145\n* \u5b57\u7b26\u3002\u5982\u679c\u6709\u4efb\u4f55\u586b\u5145\u5b57\u7b26\uff0c\u5219\n* \u603b\u5b57\u7b26\u6570\uff08\u4e0d\u5305\u62ec\u7a7a\u683c\u4f46\u5305\u62ec\u586b\u5145\n* \u5b57\u7b26\uff09\u5fc5\u987b\u80fd\u88ab\u56db\u6574\u9664\u3002\n*\n* \u60a8\u5e94\u8be5\u4f7f\u7528\u81f3\u5c11\u4e3a\n* maximal_binary_length_from_base64(input, length) \u5b57\u8282\u957f\u7684\u7f13\u51b2\u533a\u6765\u8c03\u7528\u6b64\u51fd\u6570\u3002\u5982\u679c\u60a8\u672a\u80fd\n* \u63d0\u4f9b\u90a3\u4e48\u591a\u7a7a\u95f4\uff0c\u8be5\u51fd\u6570\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f13\u51b2\u533a\u6ea2\u51fa\u3002\n*\n* \u9ad8\u7ea7\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5b9a\u5236\u6700\u540e\u4e00\u4e2a\u5757\u7684\u5904\u7406\u65b9\u5f0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\n* \u6211\u4eec\u4f7f\u7528\u677e\u6563\uff08\u5bbd\u5bb9\uff09\u65b9\u6cd5\uff0c\u4f46\u6211\u4eec\u4e5f\u652f\u6301\u4e25\u683c\u65b9\u6cd5\n* \u4ee5\u53ca stop_before_partial \u65b9\u6cd5\uff0c\u5982\u4ee5\u4e0b\u63d0\u8bae\u6240\u793a\uff1a\n*\n* https://tc39.es/proposal-arraybuffer-base64/spec/#sec-frombase64\n*\n* @param input \u8981\u5904\u7406\u7684 base64 \u5b57\u7b26\u4e32\n* @param length \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\n* @param output \u6307\u5411\u53ef\u4ee5\u4fdd\u5b58\u8f6c\u6362\u7ed3\u679c\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\n* \u7ed3\u679c\uff08\u5e94\u81f3\u5c11\u4e3a maximal_binary_length_from_base64(input, length)\n* \u5b57\u8282\u957f\uff09\u3002\n* @param options \u8981\u4f7f\u7528\u7684 base64 \u9009\u9879\uff0c\u901a\u5e38\u662f base64_default \u6216\n* base64_url\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a base64_default\u3002\n* @param last_chunk_options \u6700\u540e\u4e00\u4e2a\u5757\u5904\u7406\u9009\u9879\uff0c\n* \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a last_chunk_handling_options::loose\n* \u4f46\u4e5f\u53ef\u4ee5\u662f last_chunk_handling_options::strict \u6216\n* last_chunk_handling_options::stop_before_partial\u3002\n* @return \u4e00\u4e2a\u7ed3\u679c\u5bf9\u7ed3\u6784\uff08\u7c7b\u578b\u4e3a vamos::result\uff0c\u5305\u542b\u4e24\u4e2a\n* \u5b57\u6bb5 error \u548c count\uff09\uff0c\u5e26\u6709\u9519\u8bef\u4ee3\u7801\u548c\u9519\u8bef\u7684\u4f4d\u7f6e\uff08\u5982\u679c\u5b58\u5728\uff09\n*\uff08\u5728\u8f93\u5165\u4e2d\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\uff0c\u6216\u5199\u5165\u7684\u5b57\u8282\u6570\uff08\u5982\u679c\u6210\u529f\uff09\u3002\n*/\nvamos_warn_unused result\nbase64_to_binary(const char *input, size_t length, char *output,\n                 base64_options options = base64_default,\n                 last_chunk_handling_options last_chunk_options = loose) noexcept;\n\n/**\n* \u6839\u636e\u4e8c\u8fdb\u5236\u8f93\u5165\u7684\u957f\u5ea6\uff0c\u63d0\u4f9b base64 \u957f\u5ea6\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002\n*\n* @param length \u8f93\u5165\u7684\u957f\u5ea6\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\n* @parem options \u8981\u4f7f\u7528\u7684 base64 \u9009\u9879\uff0c\u53ef\u4ee5\u662f base64_default \u6216 base64_url\uff0c\u9ed8\u8ba4\u4e3a base64_default\u3002\n* @return base64 \u5b57\u8282\u6570\n*/\nvamos_warn_unused size_t base64_length_from_binary(size_t length, base64_options options = base64_default) noexcept;\n\n\n/**\n* \u5c06\u4e8c\u8fdb\u5236\u8f93\u5165\u8f6c\u6362\u4e3a base64 \u8f93\u51fa\u3002\n*\n* \u9ed8\u8ba4\u9009\u9879 (vamos::base64_default) \u4f7f\u7528\u5b57\u7b26 `+` \u548c `/` \u4f5c\u4e3a\u5176\u5b57\u6bcd\u8868\u7684\u4e00\u90e8\u5206\u3002\n* \u6b64\u5916\uff0c\u5b83\u5728\u8f93\u51fa\u672b\u5c3e\u6dfb\u52a0\u586b\u5145 (`=`) \u4ee5\u786e\u4fdd\u8f93\u51fa\u957f\u5ea6\u662f\u56db\u7684\u500d\u6570\u3002\n*\n* URL \u9009\u9879 (vamos::base64_url) \u4f7f\u7528\u5b57\u7b26 `-` \u548c `_` \u4f5c\u4e3a\u5176\u5b57\u6bcd\u8868\u7684\u4e00\u90e8\u5206\u3002\u8f93\u51fa\u672b\u5c3e\u4e0d\u6dfb\u52a0\u4efb\u4f55\u586b\u5145\u3002\n*\n* \u6b64\u51fd\u6570\u59cb\u7ec8\u6210\u529f\u3002\n*\n* @param input \u8981\u5904\u7406\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\n* @param length \u8f93\u5165\u7684\u957f\u5ea6\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\n* @param output \u6307\u5411\u53ef\u4ee5\u4fdd\u5b58\u8f6c\u6362\u7ed3\u679c\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\uff08\u957f\u5ea6\u81f3\u5c11\u5e94\u4e3a base64_length_from_binary(length) \u5b57\u8282\uff09\n* @param options \u8981\u4f7f\u7528\u7684 base64 \u9009\u9879\uff0c\u53ef\u4ee5\u662f base64_default \u6216 base64_url\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a base64_default\u3002\n* @return \u5199\u5165\u7684\u5b57\u8282\u6570\uff0c\u5c06\u7b49\u4e8e base64_length_from_binary(length, options)\n*/\nsize_t binary_to_base64(const char * input, size_t length, char* output, base64_options options = base64_default) noexcept;\n\n/**\n* \u5c06 base64 \u8f93\u5165\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u8f93\u51fa\u3002\n*\n* \u6b64\u51fd\u6570\u9075\u5faa WHATWG forgiving-base64 \u683c\u5f0f\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5c06\n* \u5ffd\u7565\u8f93\u5165\u4e2d\u7684\u4efb\u4f55 ASCII \u7a7a\u683c\u3002\u60a8\u53ef\u4ee5\u63d0\u4f9b\u586b\u5145\u7684\u8f93\u5165\uff08\u672b\u5c3e\u6709\u4e00\u4e2a\u6216\u4e24\u4e2a\n* \u7b49\u53f7\uff09\u6216\u672a\u586b\u5145\u7684\u8f93\u5165\uff08\u672b\u5c3e\u6ca1\u6709\u4efb\u4f55\u7b49\u53f7\uff09\u3002\n*\n* \u8bf7\u53c2\u9605 https://infra.spec.whatwg.org/#forgiving-base64-decode\n*\n* \u5982\u679c\u8f93\u5165\u65e0\u6548\uff0c\u6b64\u51fd\u6570\u5c06\u5931\u8d25\u3002\u5f53 last_chunk_options = loose \u65f6\uff0c\n* \u6709\u4e24\u4e2a\u53ef\u80fd\u7684\u5931\u8d25\u539f\u56e0\uff1a\u8f93\u5165\u5305\u542b\u591a\u4e2a\n* base64 \u5b57\u7b26\uff0c\u5f53\u9664\u4ee5 4 \u65f6\uff0c\u4f1a\u5269\u4e0b\u4e00\u4e2a\u4f59\u6570\u5b57\u7b26\n* (BASE64_INPUT_REMAINDER)\uff0c\u6216\u8005\u8f93\u5165\u5305\u542b\u4e00\u4e2a\u4e0d\u662f\n* \u6709\u6548 base64 \u5b57\u7b26\u7684\u5b57\u7b26 (INVALID_BASE64_CHARACTER)\u3002\n*\n* \u5f53\u9519\u8bef\u4e3a INVALID_BASE64_CHARACTER \u65f6\uff0cr.count \u5305\u542b\u8f93\u5165\u4e2d\u53d1\u73b0\u65e0\u6548\u5b57\u7b26\u7684\u7d22\u5f15\n* \u5f53\u9519\u8bef\u4e3a BASE64_INPUT_REMAINDER \u65f6\uff0c\n* r.count \u5305\u542b\u89e3\u7801\u7684\u5b57\u8282\u6570\u3002\n*\n* \u60a8\u5e94\u8be5\u4f7f\u7528\u81f3\u5c11\u4e3a maximal_binary_length_from_base64(input, length) \u5b57\u8282\u957f\u7684\u7f13\u51b2\u533a\u6765\u8c03\u7528\u6b64\u51fd\u6570\u3002\n* \u5982\u679c\u60a8\u65e0\u6cd5\u63d0\u4f9b\u90a3\u4e48\u591a\u7a7a\u95f4\uff0c\u8be5\u51fd\u6570\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f13\u51b2\u533a\u6ea2\u51fa\u3002\n*\n* \u9ad8\u7ea7\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5b9a\u5236\u5982\u4f55\u5904\u7406\u6700\u540e\u4e00\u4e2a\u5757\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\n* \u6211\u4eec\u4f7f\u7528\u677e\u6563\uff08\u5bbd\u5bb9\uff09\u65b9\u6cd5\uff0c\u4f46\u6211\u4eec\u4e5f\u652f\u6301\u4e25\u683c\u65b9\u6cd5\n* \u4ee5\u53ca stop_before_partial \u65b9\u6cd5\uff0c\u5982\u4ee5\u4e0b\u63d0\u8bae\uff1a\n*\n* https://tc39.es/proposal-arraybuffer-base64/spec/#sec-frombase64\n*\n* @param input \u8981\u5904\u7406\u7684 base64 \u5b57\u7b26\u4e32\uff0c\u4ee5 ASCII \u683c\u5f0f\u5b58\u50a8\u4e3a 16 \u4f4d\u5355\u4f4d\n* @param length \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff08\u4ee5 16 \u4f4d\u4e3a\u5355\u4f4d\uff09\n* @param output \u6307\u5411\u53ef\u4fdd\u5b58\u8f6c\u6362\u7ed3\u679c\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\uff08\u957f\u5ea6\u81f3\u5c11\u5e94\u4e3a maximal_binary_length_from_base64(input, length) \u5b57\u8282\uff09\u3002\n* @param options \u8981\u4f7f\u7528\u7684 base64 \u9009\u9879\uff0c\u53ef\u4ee5\u662f base64_default \u6216 base64_url\uff0c\u9ed8\u8ba4\u4e3a base64_default\u3002\n* @param last_chunk_options \u6700\u540e\u4e00\u4e2a\u5757\u5904\u7406\u9009\u9879\uff0c\n* \u9ed8\u8ba4\u4e3a last_chunk_handling_options::loose\n* \u4f46\u4e5f\u53ef\u4ee5\u662f last_chunk_handling_options::strict \u6216\n* last_chunk_handling_options::stop_before_partial\u3002\n* @return \u4e00\u4e2a\u7ed3\u679c\u5bf9\u7ed3\u6784\uff08vamos::result \u7c7b\u578b\uff0c\u5305\u542b\u4e24\u4e2a\u5b57\u6bb5 error \u548c count\uff09\uff0c\u5e26\u6709\u9519\u8bef\u4ee3\u7801\n* \u4ee5\u53ca INVALID_BASE64_CHARACTER \u9519\u8bef\u7684\u4f4d\u7f6e\uff08\u4ee5\u5355\u4f4d\u8868\u793a\u8f93\u5165\u4e2d\uff09\uff08\u5982\u679c\u6709\uff09\uff0c\u6216\u8005\u5199\u5165\u7684\u5b57\u8282\u6570\uff08\u5982\u679c\u6210\u529f\uff09\u3002\n*/\nvamos_warn_unused result base64_to_binary(const char16_t * input, size_t length, char* output, base64_options options = base64_default, last_chunk_handling_options last_chunk_options =\n                     last_chunk_handling_options::loose)  noexcept;\n\n/**\n* \u5c06 base64 \u8f93\u5165\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u8f93\u51fa\u3002\n*\n* \u6b64\u51fd\u6570\u9075\u5faa WHATWG forgiving-base64 \u683c\u5f0f\uff0c\u8fd9\u610f\u5473\u7740\u5b83\n* \u5c06\u5ffd\u7565\u8f93\u5165\u4e2d\u7684\u4efb\u4f55 ASCII \u7a7a\u683c\u3002\u60a8\u53ef\u4ee5\u63d0\u4f9b\u586b\u5145\u7684\u8f93\u5165\n*\uff08\u672b\u5c3e\u6709\u4e00\u4e2a\u6216\u4e24\u4e2a\u7b49\u53f7\uff09\u6216\u672a\u586b\u5145\u7684\u8f93\u5165\uff08\u672b\u5c3e\u6ca1\u6709\u4efb\u4f55\n* \u7b49\u53f7\uff09\u3002\n*\n* \u8bf7\u53c2\u9605 https://infra.spec.whatwg.org/#forgiving-base64-decode\n*\n* \u5982\u679c\u8f93\u5165\u65e0\u6548\uff0c\u6b64\u51fd\u6570\u5c06\u5931\u8d25\u3002\u5f53 last_chunk_options = loose \u65f6\uff0c\n* \u6709\u4e09\u4e2a\u53ef\u80fd\u7684\u5931\u8d25\u539f\u56e0\uff1a\u8f93\u5165\u5305\u542b\u591a\u4e2a base64\n* \u5b57\u7b26\uff0c\u5f53\u9664\u4ee5 4 \u65f6\uff0c\u4f1a\u5269\u4e0b\u4e00\u4e2a\u4f59\u6570\u5b57\u7b26\n* (BASE64_INPUT_REMAINDER)\uff0c\u8f93\u5165\u5305\u542b\u4e00\u4e2a\u65e0\u6548\u7684 base64 \u5b57\u7b26 (INVALID_BASE64_CHARACTER)\uff0c\u6216\u8005\u8f93\u51fa\u7f13\u51b2\u533a\u592a\u5c0f (OUTPUT_BUFFER_TOO_SMALL)\u3002\n*\n* \u5f53 OUTPUT_BUFFER_TOO_SMALL \u65f6\uff0c\u6211\u4eec\u8fd4\u56de\u5199\u5165\u7684\u5b57\u8282\u6570\n* \u548c\u5904\u7406\u7684\u5355\u5143\u6570\uff0c\u8bf7\u53c2\u9605\u53c2\u6570\u548c\n* \u8fd4\u56de\u503c\u7684\u63cf\u8ff0\u3002\n*\n* \u5f53\u9519\u8bef\u4e3a INVALID_BASE64_CHARACTER \u65f6\uff0cr.count \u5305\u542b\u8f93\u5165\u4e2d\u53d1\u73b0\u65e0\u6548\u5b57\u7b26\u7684\u7d22\u5f15\u3002\u5f53\u9519\u8bef\u4e3a\n* BASE64_INPUT_REMAINDER \u65f6\uff0cr.count \u5305\u542b\u89e3\u7801\u7684\u5b57\u8282\u6570\u3002\n*\n* \u9ed8\u8ba4\u9009\u9879 (vamos::base64_default) \u671f\u671b\u5b57\u7b26 `+` \u548c\n* `/` \u4f5c\u4e3a\u5176\u5b57\u6bcd\u8868\u7684\u4e00\u90e8\u5206\u3002URL \u9009\u9879 (vamos::base64_url) \u671f\u671b\u5b57\u7b26 `-` \u548c `_` \u4f5c\u4e3a\u5176\u5b57\u6bcd\u8868\u7684\u4e00\u90e8\u5206\u3002\n*\n* \u5982\u679c\u5b58\u5728\u586b\u5145 (`=`)\uff0c\u5219\u5bf9\u5176\u8fdb\u884c\u9a8c\u8bc1\u3002\u8f93\u5165\u672b\u5c3e\u6700\u591a\u53ef\u4ee5\u6709\u4e24\u4e2a\u586b\u5145\n* \u5b57\u7b26\u3002\u5982\u679c\u6709\u4efb\u4f55\u586b\u5145\u5b57\u7b26\uff0c\u5219\n* \u603b\u5b57\u7b26\u6570\uff08\u4e0d\u5305\u62ec\u7a7a\u683c\u4f46\u5305\u62ec\u586b\u5145\n* \u5b57\u7b26\uff09\u5fc5\u987b\u80fd\u88ab\u56db\u6574\u9664\u3002\n*\n* INVALID_BASE64_CHARACTER \u60c5\u51b5\u88ab\u89c6\u4e3a\u81f4\u547d\u9519\u8bef\uff0c\u56e0\u6b64\u60a8\u9700\u8981\n* \u4e22\u5f03\u8f93\u51fa\u3002\n*\n* \u9ad8\u7ea7\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5b9a\u5236\u6700\u540e\u4e00\u4e2a\u5757\u7684\u5904\u7406\u65b9\u5f0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\n* \u6211\u4eec\u4f7f\u7528\u677e\u6563\uff08\u5bbd\u5bb9\uff09\u65b9\u6cd5\uff0c\u4f46\u6211\u4eec\u4e5f\u652f\u6301\u4e25\u683c\u65b9\u6cd5\n* \u4ee5\u53ca stop_before_partial \u65b9\u6cd5\uff0c\u5982\u4ee5\u4e0b\u5efa\u8bae\u6240\u793a\uff1a\n*\n* https://tc39.es/proposal-arraybuffer-base64/spec/#sec-frombase64\n*\n* @param input \u8981\u5904\u7406\u7684 base64 \u5b57\u7b26\u4e32\uff0c\u4ee5 ASCII \u683c\u5f0f\u5b58\u50a8\u4e3a 8 \u4f4d\n* \u6216 16 \u4f4d\u5355\u4f4d\n* @param length \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff08\u4ee5 8 \u4f4d\u6216 16 \u4f4d\u4e3a\u5355\u4f4d\uff09\u3002\n* @param output \u6307\u5411\u53ef\u4fdd\u5b58\u8f6c\u6362\u7ed3\u679c\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\u3002\n* @param outlen \u53ef\u5199\u5165\u8f93\u51fa\u7f13\u51b2\u533a\u7684\u5b57\u8282\u6570\u3002\u8fd4\u56de\u65f6\uff0c\u4f1a\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u4ee5\u53cd\u6620\u5199\u5165\u7684\u5b57\u8282\u6570\u3002\n* @param options \u8981\u4f7f\u7528\u7684 base64 \u9009\u9879\uff0c\u53ef\u4ee5\u662f base64_default \u6216\n* base64_url\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a base64_default\u3002\n* @param last_chunk_options \u6700\u540e\u4e00\u4e2a\u5757\u5904\u7406\u9009\u9879\uff0c\n* \u9ed8\u8ba4\u60c5\u51b5\u4e0b last_chunk_handling_options::loose\n* \u4f46\u4e5f\u53ef\u4ee5\u662f last_chunk_handling_options::strict \u6216\n* last_chunk_handling_options::stop_before_partial\u3002\n* @return \u4e00\u4e2a\u7ed3\u679c\u5bf9\u7ed3\u6784\uff08\u7c7b\u578b\u4e3a vamos::result\uff0c\u5305\u542b\u4e24\u4e2a\n* \u5b57\u6bb5 error \u548c count\uff09\uff0c\u5176\u4e2d\u5305\u542b\u9519\u8bef\u4ee3\u7801\u548c\n* INVALID_BASE64_CHARACTER \u9519\u8bef\u7684\u4f4d\u7f6e\uff08\u4ee5\u5355\u4f4d\u4e3a\u5355\u4f4d\u8f93\u5165\uff09\uff08\u5982\u679c\u6709\uff09\uff0c\u6216\n* \u6210\u529f\u65f6\u5904\u7406\u7684\u5355\u4f4d\u6570\u3002\n*/\nvamos_warn_unused result base64_to_binary_safe(const char * input, size_t length, char* output, size_t& outlen, base64_options options = base64_default,\n      last_chunk_handling_options last_chunk_options = loose) noexcept;\nvamos_warn_unused result base64_to_binary_safe(const char16_t * input, size_t length, char* output, size_t& outlen, base64_options options = base64_default,\n      last_chunk_handling_options last_chunk_options = loose) noexcept;\n"})})]})}function _(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>i});var a=s(96540);const t={},r=a.createContext(t);function o(n){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),a.createElement(r.Provider,{value:e},n.children)}}}]);