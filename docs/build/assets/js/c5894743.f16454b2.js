"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[94394],{53214:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=r(74848),d=r(28453);const i={},l="\u6570\u7ec4",s={id:"cpp/alkaid/arrays",title:"\u6570\u7ec4",description:"Array API reference",source:"@site/versioned_docs/version-1.1.1/cpp/alkaid/arrays.mdx",sourceDirName:"cpp/alkaid",slug:"/cpp/alkaid/arrays",permalink:"/docs/cpp/alkaid/arrays",draft:!1,unlisted:!1,tags:[],version:"1.1.1",lastUpdatedBy:"Jeff lothar",lastUpdatedAt:1748081772e3,frontMatter:{},sidebar:"docs",previous:{title:"\u5185\u5b58\u7ba1\u7406",permalink:"/docs/cpp/alkaid/memory"},next:{title:"\u6570\u636e\u7c7b\u578b",permalink:"/docs/cpp/alkaid/datatypes"}},t={},c=[{value:"\u6784\u5efa\u6570\u7ec4",id:"\u6784\u5efa\u6570\u7ec4",level:2},{value:"\u53ef\u7528\u7b56\u7565",id:"\u53ef\u7528\u7b56\u7565",level:3},{value:"\u4f7f\u7528 ArrayBuilder \u53ca\u5176\u5b50\u7c7b",id:"\u4f7f\u7528-arraybuilder-\u53ca\u5176\u5b50\u7c7b",level:3},{value:"\u8868\u73b0",id:"\u8868\u73b0",level:3},{value:"\u5c3a\u5bf8\u9650\u5236\u548c\u5efa\u8bae",id:"\u5c3a\u5bf8\u9650\u5236\u548c\u5efa\u8bae",level:2},{value:"\u5206\u5757\u6570\u7ec4",id:"\u5206\u5757\u6570\u7ec4",level:2},{value:"\u5207\u7247",id:"\u5207\u7247",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"\u6570\u7ec4",children:"\u6570\u7ec4"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"Array API reference <api/array>"})})}),"\n",(0,a.jsxs)(n.p,{children:["Alkaid \u4e2d\u7684\u6838\u5fc3\u7c7b\u578b\u662f\u7c7b ",(0,a.jsx)(n.code,{children:"alkaid::Array"}),"\u3002\u6570\u7ec4\u8868\u793a\u4e00\u4e2a\u5df2\u77e5\u957f\u5ea6\u7684\u503c\u5e8f\u5217\uff0c\u6240\u6709\u503c\u90fd\u5177\u6709\u76f8\u540c\u7684\u7c7b\u578b\u3002\u5728\u5185\u90e8\uff0c\u8fd9\u4e9b\u503c\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u7f13\u51b2\u533a\u8868\u793a\uff0c\u7f13\u51b2\u533a\u7684\u6570\u91cf\u548c\u542b\u4e49\u53d6\u51b3\u4e8e\u6570\u7ec4\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982 ",(0,a.jsx)(n.a,{href:"/docs/cpp/alkaid/format#format_layout",children:(0,a.jsx)(n.code,{children:"Alkaid \u6570\u636e\u5e03\u5c40\u89c4\u8303"})})," \u4e2d\u6240\u8ff0\u3002"]}),"\n",(0,a.jsx)(n.p,{children:"\u8fd9\u4e9b\u7f13\u51b2\u533a\u7531\u503c\u6570\u636e\u672c\u8eab\u548c\u4e00\u4e2a\u53ef\u9009\u7684\u4f4d\u56fe\u7f13\u51b2\u533a\u7ec4\u6210\uff0c\u8be5\u4f4d\u56fe\u7f13\u51b2\u533a\u6307\u793a\u54ea\u4e9b\u6570\u7ec4\u6761\u76ee\u662f\u7a7a\u503c\u3002\u5982\u679c\u5df2\u77e5\u6570\u7ec4\u5177\u6709\u96f6\u4e2a\u7a7a\u503c\uff0c\u5219\u53ef\u4ee5\u5b8c\u5168\u7701\u7565\u4f4d\u56fe\u7f13\u51b2\u533a\u3002"}),"\n",(0,a.jsxs)(n.p,{children:["\u6bcf\u79cd\u6570\u636e\u7c7b\u578b\u90fd\u6709 ",(0,a.jsx)(n.code,{children:"alkaid::Array"})," \u7684\u5177\u4f53\u5b50\u7c7b\uff0c\u53ef\u5e2e\u52a9\u60a8\u8bbf\u95ee\u6570\u7ec4\u7684\u5404\u4e2a\u503c\u3002"]}),"\n",(0,a.jsx)(n.h2,{id:"\u6784\u5efa\u6570\u7ec4",children:"\u6784\u5efa\u6570\u7ec4"}),"\n",(0,a.jsx)(n.h3,{id:"\u53ef\u7528\u7b56\u7565",children:"\u53ef\u7528\u7b56\u7565"}),"\n",(0,a.jsxs)(n.p,{children:["\u7531\u4e8e Alkaid \u5bf9\u8c61\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u56e0\u6b64\u65e0\u6cd5\u50cf ",(0,a.jsx)(n.code,{children:"std::vector"})," \u90a3\u6837\u76f4\u63a5\u586b\u5145\u5b83\u4eec\u3002\u76f8\u53cd\uff0c\u53ef\u4ee5\u4f7f\u7528\u51e0\u79cd\u7b56\u7565\uff1a"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\u5982\u679c\u6570\u636e\u5df2\u7ecf\u4ee5\u6b63\u786e\u7684\u5e03\u5c40\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff0c\u5219\u53ef\u4ee5\u5c06\u6240\u8ff0\u5185\u5b58\u5305\u88c5\u5728 ",(0,a.jsx)(n.code,{children:"alkaid::Buffer"})," \u5b9e\u4f8b\u4e2d\uff0c\u7136\u540e\u6784\u9020\u4e00\u4e2a\u63cf\u8ff0\u6570\u7ec4\u7684 ",(0,a.jsx)(n.code,{children:"alkaid::ArrayData"}),"\uff1b"]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"cpp_memory_management"})})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\u5426\u5219\uff0c",(0,a.jsx)(n.code,{children:"alkaid::ArrayBuilder"}),"\n\u57fa\u7c7b\u53ca\u5176\u5177\u4f53\u5b50\u7c7b\u53ef\u5e2e\u52a9\u9010\u6b65\u6784\u5efa\u6570\u7ec4\u6570\u636e\uff0c\u800c\u65e0\u9700\u81ea\u5df1\u5904\u7406 Alkaid\n\u683c\u5f0f\u7684\u7ec6\u8282\u3002"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"\u4f7f\u7528-arraybuilder-\u53ca\u5176\u5b50\u7c7b",children:"\u4f7f\u7528 ArrayBuilder \u53ca\u5176\u5b50\u7c7b"}),"\n",(0,a.jsxs)(n.p,{children:["\u8981\u6784\u5efa ",(0,a.jsx)(n.code,{children:"Int64"})," Alkaid \u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\n",(0,a.jsx)(n.code,{children:"alkaid::Int64Builder"})," \u7c7b\u3002\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6784\u5efa\u4e00\u4e2a\u8303\u56f4\u4e3a 1 \u5230 8 \u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u5e94\u4fdd\u5b58\u503c 4 \u7684\u5143\u7d20\u4e3a\u7a7a\uff1a"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c++",children:"    alkaid::Int64Builder builder;\n    builder.append(1);\n    builder.append(2);\n    builder.append(3);\n    builder.append_null();\n    builder.append(5);\n    builder.append(6);\n    builder.append(7);\n    builder.append(8);\n\n    auto maybe_array = builder.Finish();\n    if (!maybe_array.ok()) {\n       // ... do something on array building failure\n    }\n    std::shared_ptr<alkaid::Array> array = *maybe_array;\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u751f\u6210\u7684\u6570\u7ec4\uff08\u5982\u679c\u8981\u8bbf\u95ee\u5176\u503c\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u6362\u4e3a\u5177\u4f53\u7684"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"alkaid::Int64Array"})," \u5b50\u7c7b\uff09\u7531\u4e24\u4e2a"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"alkaid::Buffer"})," \u7ec4\u6210\u3002\u7b2c\u4e00\u4e2a\u7f13\u51b2\u533a\u4fdd\u5b58"]}),"\n",(0,a.jsx)(n.p,{children:"\u7a7a\u4f4d\u56fe\uff0c\u6b64\u5904\u7531\u4e00\u4e2a\u5b57\u8282\u7ec4\u6210\uff0c\u4f4d\u4e3a"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"1|1|1|1|0|1|1|1"}),"\u3002\u7531\u4e8e\u6211\u4eec\u4f7f\u7528 [\u6700\u4f4e\u6709\u6548\u4f4d (LSB)"]}),"\n",(0,a.jsxs)(n.p,{children:["\u7f16\u53f7](",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Bit_numbering)%EF%BC%8C%E8%BF%99%E8%A1%A8%E7%A4%BA",children:"https://en.wikipedia.org/wiki/Bit_numbering)\uff0c\u8fd9\u8868\u793a"})]}),"\n",(0,a.jsxs)(n.p,{children:["\u6570\u7ec4\u4e2d\u7684\u7b2c\u56db\u4e2a\u6761\u76ee\u4e3a\u7a7a\u3002\u7b2c\u4e8c\u4e2a\u7f13\u51b2\u533a\u53ea\u662f\u4e00\u4e2a\u5305\u542b\u4e0a\u8ff0\u6240\u6709\u503c\u7684 ",(0,a.jsx)(n.code,{children:"int64_t"})," \u6570\u7ec4\u3002\u7531\u4e8e\u7b2c\u56db\u4e2a\u6761\u76ee"]}),"\n",(0,a.jsx)(n.p,{children:"\u4e3a\u7a7a\uff0c\u56e0\u6b64\u7f13\u51b2\u533a\u4e2d\u8be5\u4f4d\u7f6e\u7684\u503c\u672a\u5b9a\u4e49\u3002"}),"\n",(0,a.jsx)(n.p,{children:"\u4ee5\u4e0b\u662f\u8bbf\u95ee\u5177\u4f53\u6570\u7ec4\u5185\u5bb9\u7684\u65b9\u6cd5\uff1a"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c++",children:"    // Cast the Array to its actual type to access its data\n    auto int64_array = std::static_pointer_cast<alkaid::Int64Array>(array);\n\n    // Get the pointer to the null bitmap\n    const uint8_t* null_bitmap = int64_array->null_bitmap_data();\n\n    // Get the pointer to the actual data\n    const int64_t* data = int64_array->raw_values();\n\n    // Alternatively, given an array index, query its null bit and value directly\n    int64_t index = 2;\n    if (!int64_array->IsNull(index)) {\n       int64_t value = int64_array->Value(index);\n    }\n"})}),"\n",(0,a.jsxs)(n.p,{children:["::: note\n",(0,a.jsx)(n.code,{children:"alkaid::Int64Array"})," (respectively\n",(0,a.jsx)(n.code,{children:"alkaid::Int64Builder"}),") is just a\n",(0,a.jsx)(n.code,{children:"typedef"}),", provided for convenience, of ",(0,a.jsx)(n.code,{children:"alkaid::NumericArray<Int64Type>"}),"\n(respectively ",(0,a.jsx)(n.code,{children:"alkaid::NumericBuilder<Int64Type>"}),").\n:::"]}),"\n",(0,a.jsx)(n.h3,{id:"\u8868\u73b0",children:"\u8868\u73b0"}),"\n",(0,a.jsxs)(n.p,{children:["\u867d\u7136\u53ef\u4ee5\u50cf\u4e0a\u4f8b\u4e00\u6837\u9010\u503c\u6784\u5efa\u6570\u7ec4\uff0c\u4f46\u4e3a\u4e86\u83b7\u5f97\u6700\u9ad8\u6027\u80fd\uff0c\u5efa\u8bae\u5728\u5177\u4f53\u7684\n",(0,a.jsx)(n.code,{children:"alkaid::ArrayBuilder"})," \u5b50\u7c7b\u4e2d\u4f7f\u7528\u6279\u91cf\n\u9644\u52a0\u65b9\u6cd5\uff08\u901a\u5e38\u540d\u4e3a ",(0,a.jsx)(n.code,{children:"AppendValues"}),"\uff09\u3002"]}),"\n",(0,a.jsxs)(n.p,{children:["\u5982\u679c\u60a8\u4e8b\u5148\u77e5\u9053\u5143\u7d20\u7684\u6570\u91cf\uff0c\u8fd8\u5efa\u8bae\u901a\u8fc7\u8c03\u7528\n",(0,a.jsx)(n.code,{children:"~alkaid::ArrayBuilder::Resize"})," \u6216\n",(0,a.jsx)(n.code,{children:"~alkaid::ArrayBuilder::Reserve"})," \u65b9\u6cd5\u9884\u5148\u8c03\u6574\u5de5\u4f5c\u533a\u57df\u7684\u5927\u5c0f\u3002"]}),"\n",(0,a.jsx)(n.p,{children:"\u4ee5\u4e0b\u662f\u91cd\u5199\u4e0a\u8ff0\u793a\u4f8b\u4ee5\u5229\u7528\n\u8fd9\u4e9b API \u7684\u65b9\u6cd5\uff1a"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c++",children:"    alkaid::Int64Builder builder;\n    // Make place for 8 values in total\n    builder.Reserve(8);\n    // Bulk append the given values (with a null in 4th place as indicated by the\n    // validity vector)\n    std::vector<bool> validity = {true, true, true, false, true, true, true, true};\n    std::vector<int64_t> values = {1, 2, 3, 0, 5, 6, 7, 8};\n    builder.AppendValues(values, validity);\n\n    auto maybe_array = builder.Finish();\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u5982\u679c\u60a8\u4ecd\u7136\u5fc5\u987b\u9010\u4e2a\u9644\u52a0\u503c\uff0c\u5219\u67d0\u4e9b\u5177\u4f53\u6784\u5efa\u5668\n\u5b50\u7c7b\u5177\u6709\u6807\u8bb0\u4e3a\u201c\u4e0d\u5b89\u5168\u201d\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5047\u5b9a\u5de5\u4f5c\u533a\u57df\n\u5df2\u6b63\u786e\u9884\u8bbe\u5927\u5c0f\uff0c\u5e76\u63d0\u4f9b\u66f4\u9ad8\u7684\u6027\u80fd\u4f5c\u4e3a\u4ea4\u6362\uff1a"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c++",children:"    alkaid::Int64Builder builder;\n    // Make place for 8 values in total\n    builder.Reserve(8);\n    builder.UnsafeAppend(1);\n    builder.UnsafeAppend(2);\n    builder.UnsafeAppend(3);\n    builder.UnsafeAppendNull();\n    builder.UnsafeAppend(5);\n    builder.UnsafeAppend(6);\n    builder.UnsafeAppend(7);\n    builder.UnsafeAppend(8);\n\n    auto maybe_array = builder.Finish();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u5c3a\u5bf8\u9650\u5236\u548c\u5efa\u8bae",children:"\u5c3a\u5bf8\u9650\u5236\u548c\u5efa\u8bae"}),"\n",(0,a.jsx)(n.p,{children:"\u67d0\u4e9b\u6570\u7ec4\u7c7b\u578b\u5728\u7ed3\u6784\u4e0a\u9650\u5236\u4e3a 32 \u4f4d\u5927\u5c0f\u3002\u5217\u8868\u6570\u7ec4\uff08\u6700\u591a\u53ef\u5bb9\u7eb3 2^31 \u4e2a\u5143\u7d20\uff09\u3001\u5b57\u7b26\u4e32\u6570\u7ec4\u548c\u4e8c\n\u8fdb\u5236\u6570\u7ec4\uff08\u6700\u591a\u53ef\u5bb9\u7eb3 2GB \u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff09\u81f3\u5c11\u5c31\u662f\u8fd9\u6837\u3002\u5728 C++ \u5b9e\u73b0\u4e2d\uff0c\u5176\u4ed6\u4e00\u4e9b\u6570\u7ec4\u7c7b\u578b\u6700\u591a\u53ef\u5bb9\u7eb3 2^63 \u4e2a\n\u5143\u7d20\uff0c\u4f46\u5176\u4ed6 Alkaid \u5b9e\u73b0\u5bf9\u8fd9\u4e9b\u6570\u7ec4\u7c7b\u578b\u7684\u5927\u5c0f\u4e5f\u6709 32 \u4f4d\u9650\u5236\u3002"}),"\n",(0,a.jsx)(n.p,{children:"\u51fa\u4e8e\u8fd9\u4e9b\u539f\u56e0\uff0c\u5efa\u8bae\u5c06\u5927\u91cf\u6570\u636e\u5206\u5757\u4e3a\u66f4\u5408\u7406\u5927\u5c0f\u7684\u5b50\u96c6\u3002"}),"\n",(0,a.jsx)(n.h2,{id:"\u5206\u5757\u6570\u7ec4",children:"\u5206\u5757\u6570\u7ec4"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"alkaid::ChunkedArray"})," \u5c31\u50cf\u6570\u7ec4\u4e00\u6837\uff0c\u662f\u503c\u7684\u903b\u8f91\u5e8f\u5217\uff1b\u4f46\u4e0e\u7b80\u5355\u6570\u7ec4\u4e0d\u540c\uff0c\u5206\u5757\u6570\u7ec4\u4e0d\u9700\u8981\u6574\u4e2a\u5e8f\u5217\u5728\u5185\u5b58\u4e2d\u7269\u7406\u4e0a\u8fde\u7eed\u3002\n\u6b64\u5916\uff0c\u5206\u5757\u6570\u7ec4\u7684\u7ec4\u6210\u90e8\u5206\u4e0d\u5fc5\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\uff0c\u4f46\u5b83\u4eec\u5fc5\u987b\u90fd\u5177\u6709\u76f8\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002"]}),"\n",(0,a.jsx)(n.p,{children:"\u5206\u5757\u6570\u7ec4\u662f\u901a\u8fc7\u805a\u5408\u4efb\u610f\u6570\u91cf\u7684\u6570\u7ec4\u6765\u6784\u5efa\u7684\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u4e0e\u4e0a\u8ff0\u793a\u4f8b\u76f8\u540c\u7684\u903b\u8f91\u503c\u7684\u5206\u5757\u6570\u7ec4\uff0c\u4f46\u5206\u4e3a\u4e24\u4e2a\u5355\u72ec\u7684\u5757\uff1a"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c++",children:"    std::vector<std::shared_ptr<alkaid::Array>> chunks;\n    std::shared_ptr<alkaid::Array> array;\n\n    // Build first chunk\n    alkaid::Int64Builder builder;\n    builder.append(1);\n    builder.append(2);\n    builder.append(3);\n    if (!builder.Finish(&array).ok()) {\n       // ... do something on array building failure\n    }\n    chunks.push_back(std::move(array));\n\n    // Build second chunk\n    builder.Reset();\n    builder.append_null();\n    builder.append(5);\n    builder.append(6);\n    builder.append(7);\n    builder.append(8);\n    if (!builder.Finish(&array).ok()) {\n       // ... do something on array building failure\n    }\n    chunks.push_back(std::move(array));\n\n    auto chunked_array = std::make_shared<alkaid::ChunkedArray>(std::move(chunks));\n\n    assert(chunked_array->num_chunks() == 2);\n    // Logical length in number of values\n    assert(chunked_array->length() == 8);\n    assert(chunked_array->null_count() == 1);\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u5207\u7247",children:"\u5207\u7247"}),"\n",(0,a.jsxs)(n.p,{children:["\u4e0e\u7269\u7406\u5185\u5b58\u7f13\u51b2\u533a\u4e00\u6837\uff0c\u53ef\u4ee5\u5bf9\u6570\u7ec4\u548c\u5206\u5757\u6570\u7ec4\u8fdb\u884c\u96f6\u62f7\u8d1d\u5207\u7247\uff0c\u4ee5\u83b7\u5f97\u5f15\u7528\u6570\u636e\u67d0\u4e2a\u903b\u8f91\u5b50\u5e8f\u5217\u7684\u6570\u7ec4\u6216\u5206\u5757\u6570\u7ec4\u3002\u8fd9\u901a\u8fc7\u5206\u522b\n\u8c03\u7528 ",(0,a.jsx)(n.code,{children:"alkaid::Array::Slice"})," \u548c ",(0,a.jsx)(n.code,{children:"alkaid::ChunkedArray::Slice"})," \u65b9\u6cd5\u6765\u5b9e\u73b0\u3002"]})]})}function p(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>s});var a=r(96540);const d={},i=a.createContext(d);function l(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);