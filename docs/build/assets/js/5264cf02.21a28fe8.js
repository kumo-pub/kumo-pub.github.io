"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[18761],{95274:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>a});var n=s(74848),r=s(28453);const o={},c="\u6d4b\u8bd5\u62a5\u544a",i={id:"cpp/base/testing/doct/reporters",title:"\u6d4b\u8bd5\u62a5\u544a",description:"\u62a5\u544a",source:"@site/docs/cpp/base/testing/doct/reporters.mdx",sourceDirName:"cpp/base/testing/doct",slug:"/cpp/base/testing/doct/reporters",permalink:"/docs/next/cpp/base/testing/doct/reporters",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Jeff lothar",lastUpdatedAt:1748081772e3,frontMatter:{},sidebar:"docs",previous:{title:"\u5b57\u7b26\u4e32\u8f6c\u6362",permalink:"/docs/next/cpp/base/testing/doct/stringification"},next:{title:"\u6269\u5c55",permalink:"/docs/next/cpp/base/testing/doct/extensions"}},d={},a=[{value:"\u62a5\u544a",id:"\u62a5\u544a",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"\u6d4b\u8bd5\u62a5\u544a",children:"\u6d4b\u8bd5\u62a5\u544a"})}),"\n",(0,n.jsx)(t.h2,{id:"\u62a5\u544a",children:"\u62a5\u544a"}),"\n",(0,n.jsx)(t.p,{children:"Doctest \u6709\u4e00\u4e2a\u6a21\u5757\u5316\u7684\u62a5\u544a\u5668/\u4fa6\u542c\u5668\u7cfb\u7edf\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u8be5\u7cfb\u7edf\u7f16\u5199\u81ea\u5df1\u7684\u62a5\u544a\u5668\u5e76\u6ce8\u518c\u5b83\u4eec\u3002\u62a5\u544a\u5668\u754c\u9762\u8fd8\u53ef\u7528\u4e8e\u201c\u76d1\u542c\u201d\u4e8b\u4ef6\u3002"}),"\n",(0,n.jsxs)(t.p,{children:["\u60a8\u53ef\u4ee5\u4f7f\u7528",(0,n.jsx)(t.code,{children:"--list-reporters"}),"\u5217\u51fa\u6240\u6709\u6ce8\u518c\u7684\u62a5\u544a\u8005/\u4fa6\u542c\u8005\u3002\u6846\u67b6\u4e2d\u6709\u4e00\u4e9b\u5df2\u5b9e\u73b0\u7684\u62a5\u544a\u5668\uff1a"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"```console```` - \u6d41\u5f0f\u4f20\u8f93 - \u5982\u679c\u68c0\u6d4b\u5230\u6709\u80fd\u529b\u7684\u7ec8\u7aef\uff0c\u5219\u7528\u989c\u8272\u5199\u5165\u6b63\u5e38\u7684\u6587\u672c\u884c"}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"xml"})," - \u6d41\u5f0f\u4f20\u8f93 - \u4ee5\u9488\u5bf9 doctest \u5b9a\u5236\u7684 xml \u683c\u5f0f\u5199\u5165"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"junit"})," - \u7f13\u51b2 - \u4ee5 JUnit \u517c\u5bb9\u7684 xml \u5199\u5165 - \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b",(0,n.jsx)(t.a,{href:"https://github.com/doctest/doctest/issues/318",children:"\u6b64\u5904"})," \u548c",(0,n.jsx)(t.a,{href:"https://github.com/doctest/doctest/issues/376",children:"\u6b64\u5904"}),"\u3002"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"\u6d41\u5f0f\u4f20\u8f93\u610f\u5473\u7740\u7ed3\u679c\u662f\u9010\u6b65\u4ea4\u4ed8\u7684\uff0c\u800c\u4e0d\u662f\u5728\u6d4b\u8bd5\u8fd0\u884c\u7ed3\u675f\u65f6\u4ea4\u4ed8\u7684\u3002"}),"\n",(0,n.jsxs)(t.p,{children:["\u8f93\u51fa\u9ed8\u8ba4\u5199\u5165 ",(0,n.jsx)(t.code,{children:"stdout"}),"\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528 ",(0,n.jsx)(t.code,{children:"--out=<filename>"})," ",(0,n.jsx)(t.a,{href:"/docs/next/cpp/base/testing/doct/commandline",children:(0,n.jsx)(t.strong,{children:"\u547d\u4ee4\u884c\u9009\u9879"})})," \u8fdb\u884c\u91cd\u5b9a\u5411\u3002"]}),"\n",(0,n.jsx)(t.p,{children:"\u5982\u4f55\u5b9a\u4e49\u81ea\u5df1\u7684\u8bb0\u8005\u7684\u793a\u4f8b\uff1a"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-c++",children:'#include <doctest/doctest.h>\n\n#include <mutex>\n\nusing namespace doctest;\n\nstruct MyXmlReporter : public IReporter\n{\n    // caching pointers/references to objects of these types - safe to do\n    std::ostream&         stdout_stream;\n    const ContextOptions& opt;\n    const TestCaseData*   tc;\n    std::mutex            mutex;\n\n    // constructor has to accept the ContextOptions by ref as a single argument\n    MyXmlReporter(const ContextOptions& in)\n            : stdout_stream(*in.cout)\n            , opt(in) {}\n\n    void report_query(const QueryData& /*in*/) override {}\n\n    void test_run_start() override {}\n\n    void test_run_end(const TestRunStats& /*in*/) override {}\n\n    void test_case_start(const TestCaseData& in) override { tc = &in; }\n\n    // called when a test case is reentered because of unfinished subcases\n    void test_case_reenter(const TestCaseData& /*in*/) override {}\n\n    void test_case_end(const CurrentTestCaseStats& /*in*/) override {}\n\n    void test_case_exception(const TestCaseException& /*in*/) override {}\n\n    void subcase_start(const SubcaseSignature& /*in*/) override {\n        std::lock_guard<std::mutex> lock(mutex);\n    }\n\n    void subcase_end() override {\n        std::lock_guard<std::mutex> lock(mutex);\n    }\n\n    void log_assert(const AssertData& in) override {\n        // don\'t include successful asserts by default - this is done here\n        // instead of in the framework itself because doctest doesn\'t know\n        // if/when a reporter/listener cares about successful results\n        if(!in.m_failed && !opt.success)\n            return;\n\n        // make sure there are no races - this is done here instead of in the\n        // framework itself because doctest doesn\'t know if reporters/listeners\n        // care about successful asserts and thus doesn\'t lock a mutex unnecessarily\n        std::lock_guard<std::mutex> lock(mutex);\n\n        // ...\n    }\n\n    void log_message(const MessageData& /*in*/) override {\n        // messages too can be used in a multi-threaded context - like asserts\n        std::lock_guard<std::mutex> lock(mutex);\n\n        // ...\n    }\n\n    void test_case_skipped(const TestCaseData& /*in*/) override {}\n};\n\n// "1" is the priority - used for ordering when multiple reporters are used\nREGISTER_REPORTER("my_xml", 1, MyXmlReporter);\n\n// registering the same class as a reporter and as a listener is nonsense but it\'s possible\nREGISTER_LISTENER("my_listener", 1, MyXmlReporter);\n'})}),"\n",(0,n.jsxs)(t.p,{children:["\u81ea\u5b9a\u4e49",(0,n.jsx)(t.code,{children:"IReporter"}),"\u5b9e\u73b0\u5fc5\u987b\u6ce8\u518c\u5230\u4ee5\u4e0b\u4e4b\u4e00\uff1a"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"REGISTER_REPORTER"}),"\uff0c\u5f53\u65b0\u62a5\u544a\u5668\u662f\u7528\u6237\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u9009\u62e9\u7684\u9009\u9879\u65f6\u3002"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"REGISTER_LISTENER"}),"\uff0c\u5f53\u62a5\u544a\u8005\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4fa6\u542c\u5668\u5e76\u4e14\u5fc5\u987b\u59cb\u7ec8\u6267\u884c\u65f6\uff0c\u65e0\u8bba\u5728\u8fd0\u884c\u65f6\u9009\u62e9\u4e86\u54ea\u4e2a\u62a5\u544a\u8005\u3002"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u62a5\u544a\u5668 - \u53ea\u9700\u901a\u8fc7 ",(0,n.jsx)(t.code,{children:"--reporters=..."})," ",(0,n.jsx)(t.a,{href:"/docs/next/cpp/base/testing/doct/commandline",children:(0,n.jsx)(t.strong,{children:"\u547d\u4ee4\u884c\u8fc7\u6ee4\u9009\u9879"})})," \u6307\u5b9a\u5b83\u4eec\uff0c\u4f7f\u7528\u9017\u53f7\u5c06\u5b83\u4eec\u5206\u5f00\uff0c\u5982\u4e0b\u6240\u793a\uff1a ",(0,n.jsx)(t.code,{children:"--reporters=myReporter,xml"})," \uff0c\u5b83\n\u4eec\u7684\u6267\u884c\u987a\u5e8f\u5c06\u57fa\u4e8e\u5b83\u4eec\u7684\u4f18\u5148\u7ea7 - \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u62a5\u544a\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u5373\u6570\u5b57",(0,n.jsx)(t.code,{children:"1"}),"\uff08\u8f83\u4f4e\u610f\u5473\u7740\u8f83\u65e9 - \u9ed8\u8ba4\u63a7\u5236\u53f0/\u6846\u67b6\u4e2d\u7684 xml \u62a5\u544a\u5668\u7684\u4f18\u5148\u7ea7\u4e3a 0\uff0c\u4e5f\u63a5\u53d7\u8d1f\u6570\uff09\u3002"]}),"\n",(0,n.jsxs)(t.p,{children:["\u6240\u6709\u6ce8\u518c\u7684\u76d1\u542c\u5668\uff08",(0,n.jsx)(t.code,{children:"REGISTER_LISTENER"}),"\uff09\u5c06\u5728\u4efb\u4f55\u62a5\u544a\u5668\u4e4b\u524d\u200b\u200b\u6267\u884c - \u5b83\u4eec\u4e0d\u9700\u8981\u6307\u5b9a\uff0c\u4e5f\u4e0d\u80fd\u901a\u8fc7\u547d\u4ee4\u884c\u8fc7\u6ee4\u3002"]}),"\n",(0,n.jsxs)(t.p,{children:["\u5728\u5b9e\u73b0\u62a5\u544a\u5668\u65f6\uff0c\u5efa\u8bae\u7528\u6237\u9075\u5faa\u4e0a\u9762\u793a\u4f8b\u4e2d\u7684\u6ce8\u91ca\uff0c\u5e76\u67e5\u770b\u6846\u67b6\u672c\u8eab\u4e2d\u5b9e\u73b0\u7684\u5c11\u6570\u62a5\u544a\u5668\u3002\u53e6\u8bf7\u67e5\u770b ",(0,n.jsx)(t.a,{href:"https://gitee.com/kumo-hub/doctest/tree/master/examples/all_features/reporters_and_listeners.cpp",children:(0,n.jsx)(t.strong,{children:"\u793a\u4f8b"})}),"\u3002"]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>i});var n=s(96540);const r={},o=n.createContext(r);function c(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);