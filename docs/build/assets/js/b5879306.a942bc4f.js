"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[64585],{92752:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(74848),s=t(28453);const r={date:"08/12/2024"},d="Windows with MSVC",l={id:"kmpkg/users/platforms/windows",title:"Windows with MSVC",description:"\u4f7f\u7528 MSVC \u7f16\u8bd1\u5668\u6784\u5efa Windows",source:"@site/docs/kmpkg/users/platforms/windows.md",sourceDirName:"kmpkg/users/platforms",slug:"/kmpkg/users/platforms/windows",permalink:"/docs/next/kmpkg/users/platforms/windows",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Jeff lothar",lastUpdatedAt:1748081772e3,frontMatter:{date:"08/12/2024"}},o={},c=[{value:"Triplets",id:"triplets",level:2},{value:"Selecting a MSVC toolset",id:"selecting-a-msvc-toolset",level:2},{value:"C/C++ Runtime compatibility",id:"cc-runtime-compatibility",level:2},{value:"Maintainer notes",id:"maintainer-notes",level:2},{value:"Library author notes",id:"library-author-notes",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"windows-with-msvc",children:"Windows with MSVC"})}),"\n",(0,i.jsx)(n.p,{children:"\u4f7f\u7528 MSVC \u7f16\u8bd1\u5668\u6784\u5efa Windows"}),"\n",(0,i.jsx)(n.h2,{id:"triplets",children:"Triplets"}),"\n",(0,i.jsxs)(n.p,{children:["kmpkg includes ",(0,i.jsx)(n.a,{href:"/docs/next/kmpkg/concepts/triplets",children:"triplets"})," for building Windows desktop applications using the MSVC ",(0,i.jsx)(n.code,{children:"cl.exe"})," compiler."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Architecture"}),(0,i.jsx)(n.th,{children:"kmpkg triplets"}),(0,i.jsx)(n.th,{children:"Community"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"x64"}),(0,i.jsx)(n.td,{children:"x64-windows"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x64-windows-release"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x64-windows-static"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x64-windows-static-md"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x64-windows-static-release"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"x86"}),(0,i.jsx)(n.td,{children:"x86-windows"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x86-windows-static"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x86-windows-static-md"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"arm"}),(0,i.jsx)(n.td,{children:"arm-windows"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"arm-windows-static"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"arm64"}),(0,i.jsx)(n.td,{children:"arm64-windows"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"arm64-windows-static"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"arm64-windows-static-md"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"arm64-windows-static-release"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"arm64ec"}),(0,i.jsx)(n.td,{children:"arm64ec-windows"}),(0,i.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"static"})," linking triplets are set to use the MSVC Runtime as a static library (i.e. ",(0,i.jsx)(n.code,{children:"KMPKG_CRT_LINKAGE static"}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"static-md"})," linking triplets are set to use the MSVC Runtime as a DLL (i.e. ",(0,i.jsx)(n.code,{children:"KMPKG_CRT_LINKAGE dynamic"}),"). This is the recommended solution for redistributing the MSVC Runtime per ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/cpp/windows/deployment-in-visual-cpp",children:"Microsoft Learn"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"selecting-a-msvc-toolset",children:"Selecting a MSVC toolset"}),"\n",(0,i.jsxs)(n.p,{children:["By default, kmpkg will use the latest version of Visual Studio installed on the system for building code. To select a specific version, create a custom triplet or triplet overlay to set ",(0,i.jsx)(n.a,{href:"/docs/next/kmpkg/users/triplets#kmpkg_platform_toolset",children:(0,i.jsx)(n.code,{children:"KMPKG_PLATFORM_TOOLSET"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:"For examples, this would force the use of the Visual Studio 2017 toolset."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmake",children:"set(KMPKG_PLATFORM_TOOLSET v141)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"cc-runtime-compatibility",children:"C/C++ Runtime compatibility"}),"\n",(0,i.jsxs)(n.p,{children:["The Microsoft Visual C/C++ Runtime is 'forward binary compatible'. This means you can build code with Visual Studio 2015 Update 3, Visual Studio 2017, Visual Studio 2019, and/or Visual Studio 2022 and link it all together. The key requirement is that the LINK must be done against the ",(0,i.jsx)(n.em,{children:"newest"})," toolset in the mix. See ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/cpp/porting/binary-compat-2015-2017",children:"Microsoft Learn"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"maintainer-notes",children:"Maintainer notes"}),"\n",(0,i.jsxs)(n.p,{children:["CMake projects for these triplets are built using ",(0,i.jsx)(n.code,{children:"CMAKE_SYSTEM_NAME"}),' set to "Windows".']}),"\n",(0,i.jsx)(n.h2,{id:"library-author-notes",children:"Library author notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'"Just My Code" debugging can usually be disabled in a library to save code space.'}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmake",children:"if(MSVC)\n    target_compile_options(mytarget PRIVATE /JMC-)\nendif()\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"MSBuild will automatically add some build flags that are not on-by-default in the MSVC compiler itself. To ensure the same behavior with Ninja or other generators, add these build settings."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmake",children:"if(MSVC)\n    target_compile_options(mytarget PRIVATE /Zc:inline)\nendif()\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Recommended build settings for newer versions of MSVC are encouraged for improved code security."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmake",children:'if(MSVC)\n    target_compile_options(mytarget PRIVATE "$<$<NOT:$<CONFIG:DEBUG>>:/guard:cf>")\n    target_link_options(mytarget PRIVATE /DYNAMICBASE /NXCOMPAT)\n\n    if((CMAKE_SIZEOF_VOID_P EQUAL 4)\n       AND (NOT (${KMPKG_TARGET_ARCHITECTURE} MATCHES "^arm")))\n      target_link_options(mytarget PRIVATE /SAFESEH)\n    endif()\n\n    if((MSVC_VERSION GREATER_EQUAL 1928)\n       AND (CMAKE_SIZEOF_VOID_P EQUAL 8)\n       AND ((NOT (CMAKE_CXX_COMPILER_ID MATCHES "Clang"))\n            OR (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 13.0)))\n      target_compile_options(mytarget PRIVATE "$<$<NOT:$<CONFIG:DEBUG>>:/guard:ehcont>")\n      target_link_options(mytarget PRIVATE "$<$<NOT:$<CONFIG:DEBUG>>:/guard:ehcont>")\n    endif()\nendif()\n\nif(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")\n    target_compile_options(mytarget PRIVATE /sdl)\n\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.24)\n        target_compile_options(mytarget PRIVATE /ZH:SHA_256)\n    endif()\n\n    if((CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.27)\n       AND (NOT (${KMPKG_TARGET_ARCHITECTURE} MATCHES "^arm")))\n        target_link_options(mytarget PRIVATE /CETCOMPAT)\n    endif()\nendif()\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For improved Standard C/C++ Conformance, use the latest switch settings."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmake",children:'if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")\n    target_compile_options(mytarget PRIVATE /permissive- /Zc:__cplusplus /Zc:inline)\n\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.26)\n        target_compile_options(mytarget PRIVATE /Zc:preprocessor)\n    endif()\n\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.28)\n        target_compile_options(mytarget PRIVATE /Zc:lambda)\n    endif()\n\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.35)\n        target_compile_options(mytarget PRIVATE /Zc:templateScope)\n    endif()\nendif()\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"To support the use of Whole Program Optimization / Link-Time Code Generation, recommended build settings are as follows:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmake",children:'if((CMAKE_CXX_COMPILER_ID MATCHES "MSVC") AND CMAKE_INTERPROCEDURAL_OPTIMIZATION)\n    target_compile_options(${PROJECT_NAME} PRIVATE /Gy /Gw)\n\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.35)\n        target_compile_options(mytarget PRIVATE /Zc:checkGwOdr)\n    endif()\nendif()\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If enabling Spectre mitigations, use the following guards."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmake",children:'if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")\n    if((MSVC_VERSION GREATER_EQUAL 1913) AND (NOT WINDOWS_STORE))\n      target_compile_options(mytarget PRIVATE "/Qspectre")\n    endif()\nendif()\n'})}),"\n",(0,i.jsx)(n.p,{children:"Note you may want to also provide an explicit CMake build option to control this as well."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>l});var i=t(96540);const s={},r=i.createContext(s);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);