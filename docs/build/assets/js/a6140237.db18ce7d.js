"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[7809],{77439:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var t=n(74848),r=n(28453);const i={},d="\u5b57\u7b26\u4e32\u66ff\u6362",c={id:"cpp/base/strings/substitution",title:"\u5b57\u7b26\u4e32\u66ff\u6362",description:"turbo::substitute() \u5b57\u7b26\u4e32\u66ff\u6362",source:"@site/versioned_docs/version-1.1.1/cpp/base/strings/substitution.mdx",sourceDirName:"cpp/base/strings",slug:"/cpp/base/strings/substitution",permalink:"/docs/cpp/base/strings/substitution",draft:!1,unlisted:!1,tags:[],version:"1.1.1",lastUpdatedBy:"Jeff lothar",lastUpdatedAt:1748081772e3,frontMatter:{},sidebar:"docs",previous:{title:"\u8fde\u63a5\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20",permalink:"/docs/cpp/base/strings/join"},next:{title:"\u683c\u5f0f\u4e0e\u89e3\u6790",permalink:"/docs/category/\u683c\u5f0f\u4e0e\u89e3\u6790"}},o={},l=[{value:"<code>turbo::substitute()</code> \u5b57\u7b26\u4e32\u66ff\u6362",id:"turbosubstitute-\u5b57\u7b26\u4e32\u66ff\u6362",level:2},{value:"\u4e0e string_printf() \u7684\u533a\u522b",id:"\u4e0e-string_printf-\u7684\u533a\u522b",level:3},{value:"\u652f\u6301\u7684\u7c7b\u578b",id:"\u652f\u6301\u7684\u7c7b\u578b",level:3}];function u(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"\u5b57\u7b26\u4e32\u66ff\u6362",children:"\u5b57\u7b26\u4e32\u66ff\u6362"})}),"\n",(0,t.jsxs)(s.h2,{id:"turbosubstitute-\u5b57\u7b26\u4e32\u66ff\u6362",children:[(0,t.jsx)(s.code,{children:"turbo::substitute()"})," \u5b57\u7b26\u4e32\u66ff\u6362"]}),"\n",(0,t.jsxs)(s.p,{children:["\u8bbe\u7f6e\u5411\u7528\u6237\u663e\u793a\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u901a\u5e38\u6709\u4e0d\u540c\u7684\u9700\u6c42\u3002\u4f20\u7edf\u4e0a\uff0c\u5927\u591a\u6570 C++ \u4ee3\u7801\u4f7f\u7528\u5185\u7f6e\u51fd\u6570\uff0c\u4f8b\u5982",(0,t.jsx)(s.code,{children:"sprintf()"}),"\u548c\n",(0,t.jsx)(s.code,{children:"snprintf()"}),";\u8fd9\u4e9b\u529f\u80fd\u6709\u4e00\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u652f\u6301\n\u5fc5\u987b\u7ba1\u7406",(0,t.jsx)(s.code,{children:"std::string_view"}),"\u548c\u683c\u5f0f\u5316\u7f13\u51b2\u533a\u7684\u5185\u5b58\u3002"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cpp",children:'// Bad. Need to worry about buffer size and NUL-terminations.\n\nstd::string GetErrorMessage(char *op, char *user, int id) {\n  char buffer[50];\n  sprintf(buffer, "Error in %s for user %s (id %i)", op, user, id);\n  return buffer;\n}\n'})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cpp",children:'// Better. Using turbo::str_cat() avoids the pitfalls of sprintf() and is faster.\nstd::string GetErrorMessage(std::string_view op, std::string_view user, int id) {\n  return turbo::str_cat("Error in ", op, " for user ", user, " (", id, ")");\n}\n'})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cpp",children:'// Best. Using turbo::substitute() is easier to read and to understand.\nstd::string GetErrorMessage(std::string_view op, std::string_view user, int id) {\n  return turbo::substitute("Error in $0 for user $1 ($2)", op, user, id);\n}\n'})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"turbo::substitute()"})," \u5c06 ",(0,t.jsx)(s.code,{children:"turbo::str_cat()"})," \u7684\u6548\u7387\u548c\u7c7b\u578b\u5b89\u5168\u7279\u6027\u4e0e\u4f20\u7edf\u51fd\u6570\uff08\u5982 ",(0,t.jsx)(s.code,{children:"sprintf()"}),"\uff09\u7684\u53c2\u6570\u7ed1\u5b9a\u76f8\n\u7ed3\u5408\u3002 ",(0,t.jsx)(s.code,{children:"turbo::substitute"})," \u4f7f\u7528\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u5305\u542b\u7531\u7f8e\u5143\u7b26\u53f7 ($) \u6307\u793a\u7684\u4f4d\u7f6e\u6807\u8bc6\u7b26\u548c\u5355\u4f4d\u6570\u5b57\u4f4d\u7f6e ID\uff0c\u4ee5\u6307\u793a\u5728\u683c\u5f0f\u5b57\u7b26\u4e32\n\u4e2d\u7684\u8be5\u4f4d\u7f6e\u4f7f\u7528\u54ea\u4e9b\u66ff\u6362\u53c2\u6570\u3002"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cpp",children:'std::string s = substitute("$1 purchased $0 $2. Thanks $1!", 5, "Bob", "Apples");\n// Produces the string "Bob purchased 5 Apples. Thanks Bob!"\n\nstd::string s = "Hi. ";\nSubstituteAndAppend(&s, "My name is $0 and I am $1 years old.", "Bob", 5);\n// Produces the string "Hi. My name is Bob and I am 5 years old."\n'})}),"\n",(0,t.jsxs)(s.p,{children:["\u4f46\u8bf7\u6ce8\u610f\uff0c\u201cturbo::substitute()\u201d\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u89e3\u6790\u683c\u5f0f\u8fd0\u884c\u65f6\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u201cturbo::str_cat()\u201d\u6162\u3002\u9009\u62e9",(0,t.jsx)(s.code,{children:"substitute()"}),"\n\u4ec5\u5f53\u4ee3\u7801\u6e05\u6670\u5ea6\u6bd4\u901f\u5ea6\u66f4\u91cd\u8981\u65f6\u624d\u4f7f\u7528",(0,t.jsx)(s.code,{children:"str_cat()"}),"\u3002"]}),"\n",(0,t.jsx)(s.h3,{id:"\u4e0e-string_printf-\u7684\u533a\u522b",children:"\u4e0e string_printf() \u7684\u533a\u522b"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"turbo::substitute"})," \u4e0e ",(0,t.jsx)(s.code,{children:"string_printf()"})," \u6709\u4ee5\u4e0b\u4e0d\u540c\u4e4b\u5904\uff1a"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"\u683c\u5f0f\u5b57\u7b26\u4e32\u4e0d\u8bc6\u522b\u53c2\u6570\u7684\u7c7b\u578b\u3002\u76f8\u53cd\uff0c\u53c2\u6570\u9690\u5f0f\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002"}),"\n",(0,t.jsx)(s.li,{children:"\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u7684\u66ff\u6362\u7531\u201c$\u201d\u540e\u8ddf\u4e00\u4e2a\u6570\u5b57\u6765\u6807\u8bc6\u3002\u60a8\u53ef\u4ee5\u65e0\u5e8f\u5730\u4f7f\u7528\u53c2\u6570\u5e76\u591a\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u53c2\u6570\u3002"}),"\n",(0,t.jsx)(s.li,{children:"\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u7684\u201c$$\u201d\u5e8f\u5217\u8868\u793a\u8f93\u51fa\u6587\u5b57\u201c$\u201d\u5b57\u7b26\u3002"}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"turbo::substitute()"})," \u660e\u663e\u6bd4 ",(0,t.jsx)(s.code,{children:"string_printf()"})," \u5feb\u3002\u5bf9\u4e8e\u975e\u5e38\u5927\u7684\u5b57\u7b26\u4e32\uff0c\u901f\u5ea6\u53ef\u80fd\u4f1a\u5feb\u51e0\u4e2a\u6570\u91cf\u7ea7\u3002"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"\u652f\u6301\u7684\u7c7b\u578b",children:"\u652f\u6301\u7684\u7c7b\u578b"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"turbo::substitute()"})," \u7406\u89e3\u4ee5\u4e0b\u7c7b\u578b\uff1a"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"std::string_view"}),", ",(0,t.jsx)(s.code,{children:"std::string"}),", ",(0,t.jsx)(s.code,{children:"const char*"}),' (null is equivalent to "")']}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"int32_t"}),", ",(0,t.jsx)(s.code,{children:"int64_t"}),", ",(0,t.jsx)(s.code,{children:"uint32_t"}),", ",(0,t.jsx)(s.code,{children:"uint64_t"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"float"}),", ",(0,t.jsx)(s.code,{children:"double"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"bool"})," \uff08\u6253\u5370\u4e3a\u201ctrue\u201d\u6216\u201cfalse\u201d\uff09"]}),"\n",(0,t.jsxs)(s.li,{children:["char* \u4ee5\u5916\u7684\u6307\u9488\u7c7b\u578b\uff08\u6253\u5370\u4e3a ",(0,t.jsx)(s.code,{children:"0x<\u5c0f\u5199\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32>"}),"\uff0c\u9664\u4e86 null \u6253\u5370\u4e3a\u201cNULL\u201d\uff09"]}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>c});var t=n(96540);const r={},i=t.createContext(r);function d(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);