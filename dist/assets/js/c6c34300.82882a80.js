"use strict";(self.webpackChunkkumo_website=self.webpackChunkkumo_website||[]).push([[15049],{2428:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var t=r(74848),s=r(28453);const i={},a="\u5e76\u884c\u5f52\u5e76",d={id:"cpp/kthread/algo/parallel-reduction",title:"\u5e76\u884c\u5f52\u5e76",description:"Taskflow \u63d0\u4f9b\u4e86\u6a21\u677f\u51fd\u6570\uff0c\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u4efb\u52a1\u6765\u5bf9\u4e00\u7cfb\u5217\u9879\u76ee\u6267\u884c\u5e76\u884c\u7f29\u51cf\u3002",source:"@site/versioned_docs/version-1.1.1/cpp/kthread/algo/parallel-reduction.mdx",sourceDirName:"cpp/kthread/algo",slug:"/cpp/kthread/algo/parallel-reduction",permalink:"/docs/cpp/kthread/algo/parallel-reduction",draft:!1,unlisted:!1,tags:[],version:"1.1.1",frontMatter:{},sidebar:"docs",previous:{title:"\u5e76\u884c\u8fed\u4ee3",permalink:"/docs/cpp/kthread/algo/parallel-iterations"},next:{title:"\u5e76\u884c\u626b\u63cf",permalink:"/docs/cpp/kthread/algo/parallel-scan"}},l={},c=[{value:"\u5934\u6587\u4ef6",id:"\u5934\u6587\u4ef6",level:2},{value:"\u521b\u5efa\u5e76\u884c\u5f52\u5e76\u4efb\u52a1",id:"\u521b\u5efa\u5e76\u884c\u5f52\u5e76\u4efb\u52a1",level:2},{value:"\u901a\u8fc7\u5f15\u7528\u6355\u83b7\u8fed\u4ee3\u5668",id:"\u901a\u8fc7\u5f15\u7528\u6355\u83b7\u8fed\u4ee3\u5668",level:2},{value:"\u521b\u5efa\u5e76\u884c\u53d8\u6362\u5f52\u7ea6\u4efb\u52a1",id:"\u521b\u5efa\u5e76\u884c\u53d8\u6362\u5f52\u7ea6\u4efb\u52a1",level:2},{value:"\u521b\u5efa\u6309\u7d22\u5f15\u5f52\u7ea6\u4efb\u52a1",id:"\u521b\u5efa\u6309\u7d22\u5f15\u5f52\u7ea6\u4efb\u52a1",level:2},{value:"\u914d\u7f6e\u5206\u533a\u5668",id:"\u914d\u7f6e\u5206\u533a\u5668",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\u5e76\u884c\u5f52\u5e76",children:"\u5e76\u884c\u5f52\u5e76"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Taskflow"})," \u63d0\u4f9b\u4e86\u6a21\u677f\u51fd\u6570\uff0c\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u4efb\u52a1\u6765\u5bf9\u4e00\u7cfb\u5217\u9879\u76ee\u6267\u884c\u5e76\u884c\u7f29\u51cf\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"\u5934\u6587\u4ef6",children:"\u5934\u6587\u4ef6"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"#include <kthread/algorithm/reduce.h>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u521b\u5efa\u5e76\u884c\u5f52\u5e76\u4efb\u52a1",children:"\u521b\u5efa\u5e76\u884c\u5f52\u5e76\u4efb\u52a1"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"kthread::reduce(B first, E last, T& result, O bop, P part)"})," \u521b\u5efa\u7684\u7ea6\u7b80\u4efb\u52a1\u4f7f\u7528\u4e8c\u5143\u8fd0\u7b97\u7b26 ",(0,t.jsx)(n.code,{children:"bop"})," \u5bf9\n",(0,t.jsx)(n.code,{children:"[first, last)"})," \u6307\u5b9a\u7684\u5143\u7d20\u8303\u56f4\u6267\u884c\u5e76\u884c\u7ea6\u7b80\uff0c\u5e76\u5c06\u7ea6\u7b80\u7ed3\u679c\u5b58\u50a8\u5728 ",(0,t.jsx)(n.code,{children:"result"})," \u4e2d\u3002\u5b83\u8868\u793a\u4ee5\u4e0b\u7ea6\u7b80\u5faa\u73af\u7684\u5e76\u884c\u6267\u884c\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"for(auto itr=first; itr<last; itr++) {\n  result = bop(result, *itr);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u5728\u8fd0\u884c\u65f6\uff0c\u5f52\u7ea6\u4efb\u52a1\u4f1a\u751f\u6210\u4e00\u4e2a\u5b50\u6d41\u7a0b\u6765\u6267\u884c\u5e76\u884c\u5f52\u7ea6\u3002\u5f52\u7ea6\u7ed3\u679c\u5b58\u50a8\u5728\u7ed3\u679c\u4e2d\uff0c\u8be5\u7ed3\u679c\u5c06\u5728\u5f52\u7ea6\u4efb\u52a1\u4e2d\u901a\u8fc7\u5f15\u7528\u6355\u83b7\u3002\u60a8\u6709\u8d23\u4efb\u786e\u4fdd\u7ed3\u679c\u5728\u5e76\u884c\u6267\u884c\u671f\u95f4\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int sum = 100;\nstd::vector<int> vec = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\nkthread::Task task = taskflow.reduce(vec.begin(), vec.end(), sum,\n  [] (int l, int r) { return l + r; }  // binary reducer operator\n);\nexecutor.run(taskflow).wait();\n\nassert(sum == 100 + 55);\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u4e8c\u5143\u8fd0\u7b97\u7b26\u5e94\u7528\u4e8e\u5143\u7d20\u5bf9\u7684\u987a\u5e8f\u662f\u672a\u6307\u5b9a\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8303\u56f4\u7684\u5143\u7d20\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u5206\u7ec4\u548c\u91cd\u65b0\u6392\u5217\u3002\u4e8c\u5143\u8fd0\u7b97\u7b26\u7684\u7ed3\u679c\u548c\u53c2\u6570\u7c7b\u578b\u5fc5\u987b\u4e0e\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e00\u81f4\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u901a\u8fc7\u5f15\u7528\u6355\u83b7\u8fed\u4ee3\u5668",children:"\u901a\u8fc7\u5f15\u7528\u6355\u83b7\u8fed\u4ee3\u5668"}),"\n",(0,t.jsx)(n.p,{children:"\u60a8\u53ef\u4ee5\u4f7f\u7528 std::ref \u901a\u8fc7\u5f15\u7528\u4f20\u9012\u8fed\u4ee3\u5668\uff0c\u4ee5\u5728\u4f9d\u8d56\u4efb\u52a1\u4e4b\u95f4\u7f16\u7ec4\u53c2\u6570\u66f4\u65b0\u3002\u5f53\u521b\u5efa\u5e76\u884c\u7f29\u51cf\u4efb\u52a1\u65f6\u8303\u56f4\u672a\u77e5\u4f46\u9700\u8981\u4ece\u53e6\u4e00\u4e2a\u4efb\u52a1\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0c\u8fd9\u5c24\u5176\u6709\u7528\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int sum = 100;\nstd::vector<int> vec;\nstd::vector<int>::iterator first, last;\n\nkthread::Task init = taskflow.emplace([&](){\n  vec   = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n  first = vec.begin();\n  last  = vec.end();\n});\n\nkthread::Task task = taskflow.reduce(std::ref(first), std::ref(last), sum,\n  [] (int l, int r) { return l + r; }  // binary reducer operator\n);\n\n// wrong! must use std::ref, or first and last are captured by copy\n// kthread::Task task = taskflow.reduce(first, last, sum, [] (int l, int r) {\n//   return l + r;    // binary reducer operator\n// });\n\ninit.precede(task);\n\nexecutor.run(taskflow).wait();\n\nassert(sum == 100 + 55);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5f53 ",(0,t.jsx)(n.code,{children:"init"})," \u5b8c\u6210\u65f6\uff0c",(0,t.jsx)(n.code,{children:"vec"})," \u5df2\u521d\u59cb\u5316\u4e3a ",(0,t.jsx)(n.code,{children:"10"})," \u4e2a\u5143\u7d20\uff0c\u5176\u4e2d ",(0,t.jsx)(n.code,{children:"first"})," \u548c ",(0,t.jsx)(n.code,{children:"last"})," \u6307\u5411 ",(0,t.jsx)(n.code,{children:"vec"})," \u7684\u6570\u636e\u8303\u56f4\u3002\u7136\u540e\uff0c\n",(0,t.jsx)(n.code,{children:"reduction"})," \u4efb\u52a1\u5c06\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u8fed\u4ee3\u5668\u6765\u5904\u7406\u8fd9\u4e2a\u521d\u59cb\u5316\u8303\u56f4\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"\u521b\u5efa\u5e76\u884c\u53d8\u6362\u5f52\u7ea6\u4efb\u52a1",children:"\u521b\u5efa\u5e76\u884c\u53d8\u6362\u5f52\u7ea6\u4efb\u52a1"}),"\n",(0,t.jsxs)(n.p,{children:["\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u5c06\u6bcf\u4e2a\u5143\u7d20\u8f6c\u6362\u4e3a\u65b0\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7136\u540e\u5bf9\u8f6c\u6362\u540e\u7684\u5143\u7d20\u6267\u884c\u7f29\u51cf\u3002Taskflow \u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u6cd5\n",(0,t.jsx)(n.code,{children:"kthread::transform_reduce(B first, E last, T& result, BOP bop, UOP uop, P part)"}),"\uff0c\u8be5\u65b9\u6cd5\n\u5e94\u7528 ",(0,t.jsx)(n.code,{children:"uop"})," \u6765\u8f6c\u6362\u6307\u5b9a\u8303\u56f4\u5185\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u5bf9\u7ed3\u679c\u548c\u8f6c\u6362\u540e\u7684\u5143\u7d20\u6267\u884c\u5e76\u884c\u7f29\u51cf\u3002\u5b83\u8868\u793a\u4ee5\u4e0b\u7f29\u51cf\u5faa\u73af\u7684\u5e76\u884c\u6267\u884c\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"for(auto itr=first; itr<last; itr++) {\n  result = bop(result, uop(*itr));\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u4e0b\u9762\u7684\u793a\u4f8b\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u7136\u540e\u5e76\u884c\u6c42\u6240\u6709\u6574\u6570\u4e4b\u548c\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"std::string str = \"12345678\";\nint sum {0};\nkthread::Task task = taskflow.transform_reduce(str.begin(), str.end(), sum,\n  [] (int a, int b) {      // binary reduction operator\n    return a + b;\n  },\n  [] (char c) -> int {     // unary transformation operator\n    return c - '0';\n  }\n);\nexecutor.run(taskflow).wait();\nassert(sum == 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8);  // sum will be 36\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u6211\u4eec\u5bf9\u8f6c\u6362\u540e\u7684\u5143\u7d20\u5e94\u7528\u4e8c\u5143\u8fd0\u7b97\u7b26\u7684\u987a\u5e8f\u662f\u672a\u6307\u5b9a\u7684\u3002\u7531\u4e8e\u8f6c\u6362\u540e\u7684\u4e34\u65f6\u53d8\u91cf\uff0c\u4e8c\u5143\u8fd0\u7b97\u7b26\u53ef\u80fd\u4f1a\u5728\u4e24\u4e2a\u53c2\u6570\u4e2d\u90fd\u91c7\u7528\n\u53f3\u503c\uff0c\u4f8b\u5982 ",(0,t.jsx)(n.code,{children:"bop(uop(*itr1), uop(*itr2))"}),"\u3002\u5f53\u6570\u636e\u4f20\u9012\u6210\u672c\u9ad8\u6602\u65f6\uff0c\u60a8\u53ef\u4ee5\u5c06\u7ed3\u679c\u7c7b\u578b T \u5b9a\u4e49\u4e3a\u53ef\u79fb\u52a8\u6784\u9020\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"\u521b\u5efa\u6309\u7d22\u5f15\u5f52\u7ea6\u4efb\u52a1",children:"\u521b\u5efa\u6309\u7d22\u5f15\u5f52\u7ea6\u4efb\u52a1"}),"\n",(0,t.jsxs)(n.p,{children:["\u4e0e ",(0,t.jsx)(n.code,{children:"kthread::reduce"})," \u4e0d\u540c\uff0c",(0,t.jsx)(n.code,{children:"kthread::reduce_by_index"})," \u51fd\u6570\u53ef\u8ba9\u60a8\u5728\u7d22\u5f15\u8303\u56f4\u5185\u6267\u884c\u5e76\u884c\u7f29\u51cf\uff0c\n\u4f46\u53ef\u4ee5\u66f4\u597d\u5730\u63a7\u5236\u8303\u56f4\u7684\u6bcf\u4e2a\u90e8\u5206\u7684\u5904\u7406\u65b9\u5f0f\u3002\u5f53\u60a8\u9700\u8981\u4e3a\u6bcf\u4e2a\u5b50\u8303\u56f4\u81ea\u5b9a\u4e49\u7f29\u51cf\u8fc7\u7a0b\u6216\u60f3\u8981\u7ed3\u5408 ",(0,t.jsx)(n.code,{children:"SIMD"})," \u7b49\u4f18\u5316\u65f6\uff0c\u8fd9\u5f88\u6709\u7528\u3002\u4ee5\u4e0b\u793a\n\u4f8b\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"res"})," \u5bf9\u6570\u636e\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6267\u884c\u6c42\u548c\u7f29\u51cf\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'std::vector<double> data(100000);\ndouble res = 1.0;\ntaskflow.reduce_by_index(\n  // index range\n  kthread::IndexRange<size_t>(0, N, 1),\n  // final result\n  res,\n  // local reducer\n  [&](kthread::IndexRange<size_t> subrange, std::optional<double> running_total) { \n    double residual = running_total ? *running_total : 0.0;\n    for(size_t i=subrange.begin(); i<subrange.end(); i+=subrange.step_size()) {\n      data[i] = 1.0;        // we initialize the data here\n      residual += data[i];\n    }\n    printf("partial sum = %lf\\n", residual);\n    return residual;\n  },\n  // global reducer\n  std::plus<double>()\n);\n\nexecutor.run(taskflow).wait();\nassert(res == 100001);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\u672c\u5730\u7f29\u51cf\u5668 ",(0,t.jsx)(n.code,{children:"lop"})," \u4e3a\u6bcf\u4e2a\u5b50\u8303\u56f4\u8ba1\u7b97\u90e8\u5206\u548c\uff0c\u5168\u5c40\u7f29\u51cf\u5668 gop \u5c06\u90e8\u5206\u7ed3\u679c\u7ec4\u5408\u6210\u6700\u7ec8\u7ed3\u679c\u5e76\u5c06\u5176\u5b58\u50a8\u5728 ",(0,t.jsx)(n.code,{children:"res"})," \u4e2d\uff0c\u5176\u521d\u59cb\n\u503c\uff08\u5373\u6b64\u5904\u7684 ",(0,t.jsx)(n.code,{children:"1.0"}),"\uff09\u4e5f\u53c2\u4e0e\u7f29\u51cf\u8fc7\u7a0b\u3002\u672c\u5730\u7f29\u51cf\u5668\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f ",(0,t.jsx)(n.code,{children:"std::optional"})," \u7c7b\u578b\uff0c\u5b83\u8868\u793a\u5230\u6b64\u5b50\u8303\u56f4\u7684\u5f53\u524d\u90e8\u5206\u548c\u3002\u663e\n\u7136\uff0c\u7b2c\u4e00\u4e2a\u5b50\u8303\u56f4\u6ca1\u6709\u4efb\u4f55\u90e8\u5206\u548c\uff0c\u56e0\u4e3a\u6ca1\u6709\u6765\u81ea\u5148\u524d\u5b50\u8303\u56f4\u7684\u8fd0\u884c\u603b\u6570\uff08\u5373 ",(0,t.jsx)(n.code,{children:"running_total"})," \u662f ",(0,t.jsx)(n.code,{children:"std::nullopt"}),"\uff09\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"\u914d\u7f6e\u5206\u533a\u5668",children:"\u914d\u7f6e\u5206\u533a\u5668"}),"\n",(0,t.jsx)(n.p,{children:"\u60a8\u53ef\u4ee5\u4e3a\u5e76\u884c\u7f29\u51cf\u4efb\u52a1\u914d\u7f6e\u5206\u533a\u5668\uff0c\u4f7f\u5176\u4f7f\u7528\u4e0d\u540c\u7684\u8c03\u5ea6\u65b9\u6cd5\u8fd0\u884c\uff0c\u4f8b\u5982\u5f15\u5bfc\u5f0f\u5206\u533a\u3001\u52a8\u6001\u5206\u533a\u548c\u9759\u6001\u5206\u533a\u3002\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528\u4e24\u4e2a\u4e0d\u540c\u7684\n\u5206\u533a\u5668\u521b\u5efa\u4e24\u4e2a\u5e76\u884c\u7f29\u51cf\u4efb\u52a1\uff0c\u4e00\u4e2a\u4f7f\u7528\u9759\u6001\u5206\u533a\u7b97\u6cd5\uff0c\u53e6\u4e00\u4e2a\u4f7f\u7528\u5f15\u5bfc\u5f0f\u5206\u533a\u7b97\u6cd5\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"kthread::StaticPartitioner static_partitioner;\nkthread::GuidedPartitioner guided_partitioner;\n\nint sum1 = 100, sum2 = 100;\nstd::vector<int> vec = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\n// create a parallel-reduction task with static partitioner\ntaskflow.reduce(vec.begin(), vec.end(), sum1,\n  [] (int l, int r) { return l + r; },\n  static_partitioner\n);\n\n// create a parallel-reduction task with guided partitioner\ntaskflow.reduce(vec.begin(), vec.end(), sum2,\n  [] (int l, int r) { return l + r; },\n  guided_partitioner\n);\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"\u6ce8\u610f\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u672a\u6307\u5b9a\u5206\u533a\u5668\uff0c\u5219\u5e76\u884c\u7f29\u51cf\u4efb\u52a1\u5c06\u4f7f\u7528 kthread::DefaultPartitioner\u3002"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1",(0,t.jsx)(n.a,{href:"/docs/cpp/kthread/algo",children:"\u7b97\u6cd5\u7d22\u5f15"})]})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>d});var t=r(96540);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);